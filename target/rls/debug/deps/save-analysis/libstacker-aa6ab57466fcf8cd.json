{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13","program":"/Users/raunak/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","stacker","/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=aa6ab57466fcf8cd","-C","extra-filename=-aa6ab57466fcf8cd","--out-dir","/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps","-L","dependency=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps","--extern","cfg_if=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libcfg_if-5ee6b50cb67273c4.rmeta","--extern","libc=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/liblibc-8df23863fc895af9.rmeta","--extern","psm=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libpsm-14606252df2867a7.rmeta","--cap-lints","allow","-L","native=/Users/raunak/Downloads/steve-jobs/target/rls/debug/build/psm-6ca5ae9f48e47229/out","--error-format=json","--sysroot","/Users/raunak/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libstacker-aa6ab57466fcf8cd.rmeta"},"prelude":{"crate_id":{"name":"stacker","disambiguator":[12477678188320537361,13497356725416957078]},"crate_root":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src","external_crates":[{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[2014432421693201618,6405737037534390335]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4672134039341031826,9334730820037710618]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7812355786254722365,11069232910465240897]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3504492067546965715,14807348065712645406]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10363351663236916098,4373568221634206951]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10398940938279845199,16184156993696304634]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[724492824811583379,8144572066648184623]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15416939533143646956,6942433971967440675]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16970633403645001861,1360756374950165595]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5199069202728777874,5034187042864704623]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[3933903632706657361,17777720043096733358]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1064452323391549649,8830000606501382885]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3322092396504496203,10665470569546149906]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[15191776587043837065,7596571186965316671]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[9467777605309881795,12208806100407000479]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[16274892358024576666,2987381920905251631]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":17,"id":{"name":"cfg_if","disambiguator":[8831126000530456462,14660711433489744206]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":18,"id":{"name":"libc","disambiguator":[11670802217295346899,7128414201532922055]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","num":19,"id":{"name":"psm","disambiguator":[4150611198668828996,17429148809726670494]}}],"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":0,"byte_end":19340,"line_start":1,"line_end":457,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":0,"byte_end":19340,"line_start":1,"line_end":457,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":16},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":27},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" A library to help grow the stack when it runs out of space.","sig":null,"attributes":[{"value":"/ A library to help grow the stack when it runs out of space.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":0,"byte_end":63,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":64,"byte_end":67,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is an implementation of manually instrumented segmented stacks where points in a program's","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":68,"byte_end":167,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ control flow are annotated with \"maybe grow the stack here\". Each point of annotation indicates","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":168,"byte_end":267,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ how far away from the end of the stack it's allowed to be, plus the amount of stack to allocate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":268,"byte_end":367,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ if it does reach the end.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":368,"byte_end":397,"line_start":6,"line_end":6,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":398,"byte_end":401,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Once a program has reached the end of its stack, a temporary stack on the heap is allocated and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":402,"byte_end":501,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ is switched to for the duration of a closure.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":502,"byte_end":551,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":552,"byte_end":555,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ For a set of lower-level primitives, consider the `psm` crate.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":556,"byte_end":622,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":623,"byte_end":626,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":627,"byte_end":641,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":642,"byte_end":645,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":646,"byte_end":653,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ // Grow the stack if we are within the \"red zone\" of 32K, and if we allocate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":654,"byte_end":734,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ // a new stack allocate 1MB of stack space.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":735,"byte_end":782,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/ //","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":783,"byte_end":789,"line_start":18,"line_end":18,"column_start":1,"column_end":7}},{"value":"/ // If we're already in bounds, just run the provided closure on current stack.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":790,"byte_end":872,"line_start":19,"line_end":19,"column_start":1,"column_end":83}},{"value":"/ stacker::maybe_grow(32 * 1024, 1024 * 1024, || {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":873,"byte_end":925,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/     // guaranteed to have at least 32K of stack","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":926,"byte_end":977,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":978,"byte_end":985,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":986,"byte_end":993,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"allow(improper_ctypes)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":995,"byte_end":1021,"line_start":25,"line_end":25,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":9},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":1704,"byte_end":1714,"line_start":47,"line_end":47,"column_start":8,"column_end":18},"name":"maybe_grow","qualname":"::maybe_grow","value":"pub fn maybe_grow<R, F: FnOnce() -> R>(usize, usize, F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Grows the call stack if necessary.","sig":null,"attributes":[{"value":"/ Grows the call stack if necessary.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":1167,"byte_end":1205,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":1206,"byte_end":1209,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This function is intended to be called at manually instrumented points in a program where","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":1210,"byte_end":1303,"line_start":39,"line_end":39,"column_start":1,"column_end":94}},{"value":"/ recursion is known to happen quite a bit. This function will check to see if we're within","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":1304,"byte_end":1397,"line_start":40,"line_end":40,"column_start":1,"column_end":94}},{"value":"/ `red_zone` bytes of the end of the stack, and if so it will allocate a new stack of at least","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":1398,"byte_end":1494,"line_start":41,"line_end":41,"column_start":1,"column_end":97}},{"value":"/ `stack_size` bytes.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":1495,"byte_end":1518,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":1519,"byte_end":1522,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The closure `f` is guaranteed to run on a stack with at least `red_zone` bytes, and it will be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":1523,"byte_end":1621,"line_start":44,"line_end":44,"column_start":1,"column_end":99}},{"value":"/ run on the current stack if there's space available.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":1622,"byte_end":1678,"line_start":45,"line_end":45,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":1679,"byte_end":1696,"line_start":46,"line_end":46,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":12},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":2429,"byte_end":2433,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"grow","qualname":"::grow","value":"pub fn grow<R, F: FnOnce() -> R>(usize, F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Always creates a new stack for the passed closure to run on.\n The closure will still be on the same thread as the caller of `grow`.\n This will allocate a new stack with at least `stack_size` bytes.\n","sig":null,"attributes":[{"value":"/ Always creates a new stack for the passed closure to run on.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":2214,"byte_end":2278,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ The closure will still be on the same thread as the caller of `grow`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":2279,"byte_end":2352,"line_start":62,"line_end":62,"column_start":1,"column_end":74}},{"value":"/ This will allocate a new stack with at least `stack_size` bytes.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":2353,"byte_end":2421,"line_start":63,"line_end":63,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":3598,"byte_end":3613,"line_start":90,"line_end":90,"column_start":8,"column_end":23},"name":"remaining_stack","qualname":"::remaining_stack","value":"pub fn remaining_stack() -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Queries the amount of remaining stack as interpreted by this library.","sig":null,"attributes":[{"value":"/ Queries the amount of remaining stack as interpreted by this library.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":3370,"byte_end":3443,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":3444,"byte_end":3447,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ This function will return the amount of stack space left which will be used","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":3448,"byte_end":3527,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ to determine whether a stack switch should be made or not.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":3528,"byte_end":3590,"line_start":89,"line_end":89,"column_start":1,"column_end":63}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":5032,"byte_end":5049,"line_start":142,"line_end":142,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":7445,"byte_end":7462,"line_start":201,"line_end":201,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":5032,"byte_end":5049,"line_start":142,"line_end":142,"column_start":14,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":27},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.13/src/lib.rs","byte_start":7445,"byte_end":7462,"line_start":201,"line_end":201,"column_start":23,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":3075}}]}
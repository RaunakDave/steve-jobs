{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5","program":"/Users/raunak/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=c0f864e1af8d3d6b","-C","extra-filename=-c0f864e1af8d3d6b","--out-dir","/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps","-L","dependency=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps","--extern","bytes=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libbytes-f18071bd7fb3eb30.rmeta","--extern","futures_core=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libfutures_core-61a1d9a5c1636d96.rmeta","--extern","futures_sink=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libfutures_sink-281fcb9508f3eec6.rmeta","--extern","log=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/liblog-8c61408547ed7927.rmeta","--extern","pin_project_lite=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libpin_project_lite-f5cded9c988d3f4e.rmeta","--extern","tokio=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libtokio-67886e1332e66c04.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/raunak/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libtokio_util-c0f864e1af8d3d6b.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[14775137419293827152,7488574705930451594]},"crate_root":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src","external_crates":[{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[2014432421693201618,6405737037534390335]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[4672134039341031826,9334730820037710618]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7812355786254722365,11069232910465240897]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3504492067546965715,14807348065712645406]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10363351663236916098,4373568221634206951]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10398940938279845199,16184156993696304634]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[724492824811583379,8144572066648184623]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15416939533143646956,6942433971967440675]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16970633403645001861,1360756374950165595]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5199069202728777874,5034187042864704623]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[3933903632706657361,17777720043096733358]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1064452323391549649,8830000606501382885]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3322092396504496203,10665470569546149906]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[15191776587043837065,7596571186965316671]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[9467777605309881795,12208806100407000479]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[16274892358024576666,2987381920905251631]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":17,"id":{"name":"futures_core","disambiguator":[18240488919851695696,7631191881935903789]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":18,"id":{"name":"futures_sink","disambiguator":[15708518641781919576,15844202153289304206]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":19,"id":{"name":"tokio","disambiguator":[1475298167305303614,17120815164256126264]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":20,"id":{"name":"parking_lot","disambiguator":[17231821520500423720,17115561076897684599]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":21,"id":{"name":"instant","disambiguator":[11187121646821975639,3668296336020098577]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":22,"id":{"name":"cfg_if","disambiguator":[8831126000530456462,14660711433489744206]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":23,"id":{"name":"lock_api","disambiguator":[7060362187090094935,6720524633855940616]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":24,"id":{"name":"scopeguard","disambiguator":[17141262456245315652,14156001556034532503]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":25,"id":{"name":"parking_lot_core","disambiguator":[16707485554275639035,2987779964389398497]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":26,"id":{"name":"smallvec","disambiguator":[4899133377848736299,6410237011676314059]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":27,"id":{"name":"libc","disambiguator":[11670802217295346899,7128414201532922055]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","num":28,"id":{"name":"pin_project_lite","disambiguator":[4648493909412392768,11955802785287157020]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":29,"id":{"name":"mio","disambiguator":[4826869175367208281,13273360166174091935]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","num":30,"id":{"name":"log","disambiguator":[14671417891804371556,10092624592932941712]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","num":31,"id":{"name":"bytes","disambiguator":[13660829736288077121,12994348296564562169]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":32,"id":{"name":"once_cell","disambiguator":[11504330228565463466,651081175859897534]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":33,"id":{"name":"tokio_macros","disambiguator":[6297646671971952364,4137614225018340351]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":34,"id":{"name":"memchr","disambiguator":[16703557924079483910,4590001464293719672]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":35,"id":{"name":"num_cpus","disambiguator":[14071310172150079226,10462164697729365269]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","num":36,"id":{"name":"signal_hook_registry","disambiguator":[12916026005208579703,17620455485585363602]}}],"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1170},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824227,"byte_end":13824237,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":539},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824276,"byte_end":13824283,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":556},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824322,"byte_end":13824329,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":1479},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824491,"byte_end":13824497,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":1199},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824499,"byte_end":13824510,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":1438},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824558,"byte_end":13824568,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":1397},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824617,"byte_end":13824628,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":1223},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824690,"byte_end":13824710,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":987},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824712,"byte_end":13824737,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":1239},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824786,"byte_end":13824796,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":1261},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824798,"byte_end":13824813,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":1269},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824878,"byte_end":13824895,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":1293},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824897,"byte_end":13824919,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mod.rs","byte_start":6701,"byte_end":6718,"line_start":4,"line_end":4,"column_start":30,"column_end":47},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mod.rs","byte_start":6720,"byte_end":6745,"line_start":4,"line_end":4,"column_start":49,"column_end":74},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1372},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mod.rs","byte_start":6808,"byte_end":6818,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mod.rs","byte_start":6865,"byte_end":6878,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":336},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mod.rs","byte_start":6921,"byte_end":6938,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":489},{"krate":0,"index":14},{"krate":0,"index":371},{"krate":0,"index":440}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","byte_start":356,"byte_end":393,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","byte_start":394,"byte_end":397,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","byte_start":398,"byte_end":455,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","byte_start":456,"byte_end":520,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","byte_start":521,"byte_end":596,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","byte_start":597,"byte_end":600,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","byte_start":601,"byte_end":637,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":489},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":674},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1167}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/cfg.rs","byte_start":5445,"byte_end":5470,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13813955,"byte_end":13814008,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814009,"byte_end":13814012,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814013,"byte_end":13814088,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814089,"byte_end":13814154,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814155,"byte_end":13814158,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814159,"byte_end":13814239,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814240,"byte_end":13814315,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814316,"byte_end":13814364,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814365,"byte_end":13814368,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814369,"byte_end":13814392,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814393,"byte_end":13814396,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814397,"byte_end":13814476,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814477,"byte_end":13814556,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814557,"byte_end":13814628,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814629,"byte_end":13814699,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814700,"byte_end":13814778,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814779,"byte_end":13814855,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814856,"byte_end":13814889,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814890,"byte_end":13814893,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814894,"byte_end":13814974,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13814975,"byte_end":13815055,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815056,"byte_end":13815106,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815107,"byte_end":13815110,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815111,"byte_end":13815162,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815163,"byte_end":13815212,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815213,"byte_end":13815264,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815265,"byte_end":13815268,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815269,"byte_end":13815334,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815335,"byte_end":13815338,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815339,"byte_end":13815416,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815417,"byte_end":13815458,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815459,"byte_end":13815462,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815463,"byte_end":13815543,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815544,"byte_end":13815623,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815624,"byte_end":13815702,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815703,"byte_end":13815782,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815783,"byte_end":13815797,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815798,"byte_end":13815801,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815802,"byte_end":13815881,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815882,"byte_end":13815961,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815962,"byte_end":13815979,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815980,"byte_end":13815983,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13815984,"byte_end":13816061,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816062,"byte_end":13816141,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816142,"byte_end":13816219,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816220,"byte_end":13816290,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816291,"byte_end":13816340,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816341,"byte_end":13816344,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816345,"byte_end":13816358,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816359,"byte_end":13816391,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816392,"byte_end":13816459,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816460,"byte_end":13816574,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816575,"byte_end":13816612,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816613,"byte_end":13816674,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816675,"byte_end":13816724,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816725,"byte_end":13816728,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816729,"byte_end":13816770,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816771,"byte_end":13816781,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816782,"byte_end":13816866,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816867,"byte_end":13816923,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816924,"byte_end":13816927,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816928,"byte_end":13816949,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13816950,"byte_end":13817017,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817018,"byte_end":13817046,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817047,"byte_end":13817060,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817061,"byte_end":13817079,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817080,"byte_end":13817089,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817090,"byte_end":13817093,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817094,"byte_end":13817153,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817154,"byte_end":13817178,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817179,"byte_end":13817188,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817189,"byte_end":13817194,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817195,"byte_end":13817203,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817204,"byte_end":13817211,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817212,"byte_end":13817286,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817287,"byte_end":13817290,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817291,"byte_end":13817313,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817314,"byte_end":13817317,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817318,"byte_end":13817395,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817396,"byte_end":13817472,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817473,"byte_end":13817552,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817553,"byte_end":13817607,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817608,"byte_end":13817611,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817612,"byte_end":13817656,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817657,"byte_end":13817664,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817665,"byte_end":13817700,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817701,"byte_end":13817732,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817733,"byte_end":13817736,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817737,"byte_end":13817766,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817767,"byte_end":13817770,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817771,"byte_end":13817810,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817811,"byte_end":13817814,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817815,"byte_end":13817853,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817854,"byte_end":13817881,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817882,"byte_end":13817918,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817919,"byte_end":13817922,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817923,"byte_end":13817941,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817942,"byte_end":13817964,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817965,"byte_end":13817995,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13817996,"byte_end":13818050,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818051,"byte_end":13818081,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818082,"byte_end":13818139,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818140,"byte_end":13818172,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818173,"byte_end":13818186,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818187,"byte_end":13818190,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818191,"byte_end":13818225,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818226,"byte_end":13818270,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818271,"byte_end":13818323,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818324,"byte_end":13818391,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818392,"byte_end":13818395,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818396,"byte_end":13818470,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818471,"byte_end":13818537,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818538,"byte_end":13818567,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818568,"byte_end":13818615,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818616,"byte_end":13818668,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818669,"byte_end":13818740,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818741,"byte_end":13818760,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818761,"byte_end":13818774,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818775,"byte_end":13818778,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818779,"byte_end":13818818,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818819,"byte_end":13818874,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818875,"byte_end":13818893,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818894,"byte_end":13818970,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13818971,"byte_end":13819037,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819038,"byte_end":13819090,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819091,"byte_end":13819094,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819095,"byte_end":13819175,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819176,"byte_end":13819201,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819202,"byte_end":13819234,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819235,"byte_end":13819248,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819249,"byte_end":13819252,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819253,"byte_end":13819325,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819326,"byte_end":13819352,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819353,"byte_end":13819404,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819405,"byte_end":13819441,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819442,"byte_end":13819445,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819446,"byte_end":13819524,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819525,"byte_end":13819568,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819569,"byte_end":13819616,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819617,"byte_end":13819653,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819654,"byte_end":13819698,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819699,"byte_end":13819755,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819756,"byte_end":13819804,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819805,"byte_end":13819827,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819828,"byte_end":13819846,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819847,"byte_end":13819860,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819861,"byte_end":13819870,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819871,"byte_end":13819876,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819877,"byte_end":13819884,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819885,"byte_end":13819888,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819889,"byte_end":13819912,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819913,"byte_end":13819916,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819917,"byte_end":13819995,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13819996,"byte_end":13820069,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820070,"byte_end":13820146,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820147,"byte_end":13820227,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820228,"byte_end":13820244,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820245,"byte_end":13820248,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820249,"byte_end":13820329,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820330,"byte_end":13820409,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820410,"byte_end":13820490,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820491,"byte_end":13820563,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820564,"byte_end":13820567,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820568,"byte_end":13820645,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820646,"byte_end":13820724,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820725,"byte_end":13820798,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820799,"byte_end":13820865,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820866,"byte_end":13820869,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820870,"byte_end":13820883,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820884,"byte_end":13820917,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820918,"byte_end":13820952,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820953,"byte_end":13820990,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13820991,"byte_end":13821058,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821059,"byte_end":13821094,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821095,"byte_end":13821156,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821157,"byte_end":13821203,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821204,"byte_end":13821265,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821266,"byte_end":13821269,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821270,"byte_end":13821298,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821299,"byte_end":13821302,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821303,"byte_end":13821344,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821345,"byte_end":13821355,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821356,"byte_end":13821380,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821381,"byte_end":13821455,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821456,"byte_end":13821498,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821499,"byte_end":13821513,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821514,"byte_end":13821571,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821572,"byte_end":13821621,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821622,"byte_end":13821636,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821637,"byte_end":13821674,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821675,"byte_end":13821726,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821727,"byte_end":13821773,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821774,"byte_end":13821804,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821805,"byte_end":13821819,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821820,"byte_end":13821829,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821830,"byte_end":13821835,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821836,"byte_end":13821843,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821844,"byte_end":13821851,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821852,"byte_end":13821927,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13821928,"byte_end":13822001,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822002,"byte_end":13822044,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822045,"byte_end":13822048,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822049,"byte_end":13822071,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822072,"byte_end":13822075,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822076,"byte_end":13822153,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822154,"byte_end":13822230,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822231,"byte_end":13822307,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822308,"byte_end":13822331,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822332,"byte_end":13822335,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822336,"byte_end":13822381,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822382,"byte_end":13822389,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822390,"byte_end":13822425,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822426,"byte_end":13822450,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822451,"byte_end":13822454,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822455,"byte_end":13822484,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822485,"byte_end":13822488,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822489,"byte_end":13822528,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822529,"byte_end":13822532,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822533,"byte_end":13822579,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822580,"byte_end":13822616,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822617,"byte_end":13822620,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822621,"byte_end":13822712,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822713,"byte_end":13822787,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822788,"byte_end":13822810,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822811,"byte_end":13822844,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822845,"byte_end":13822892,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822893,"byte_end":13822945,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13822946,"byte_end":13823021,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823022,"byte_end":13823041,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823042,"byte_end":13823055,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823056,"byte_end":13823059,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823060,"byte_end":13823112,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823113,"byte_end":13823190,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823191,"byte_end":13823255,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823256,"byte_end":13823259,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823260,"byte_end":13823303,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823304,"byte_end":13823344,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823345,"byte_end":13823348,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823349,"byte_end":13823406,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823407,"byte_end":13823453,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823454,"byte_end":13823505,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823506,"byte_end":13823524,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823525,"byte_end":13823534,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823535,"byte_end":13823540,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823541,"byte_end":13823548,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823549,"byte_end":13823552,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823553,"byte_end":13823592,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823593,"byte_end":13823634,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823635,"byte_end":13823671,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823672,"byte_end":13823704,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823705,"byte_end":13823801,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823802,"byte_end":13823853,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823854,"byte_end":13823907,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823908,"byte_end":13823951,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823952,"byte_end":13823996,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13823997,"byte_end":13824045,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824046,"byte_end":13824094,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824095,"byte_end":13824141,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824142,"byte_end":13824181,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13826205,"byte_end":13826215,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825048,"byte_end":13825133,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825134,"byte_end":13825137,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825138,"byte_end":13825176,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825177,"byte_end":13825215,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825216,"byte_end":13825219,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825220,"byte_end":13825233,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825234,"byte_end":13825237,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825238,"byte_end":13825319,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825320,"byte_end":13825323,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825324,"byte_end":13825363,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825364,"byte_end":13825397,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825398,"byte_end":13825427,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825428,"byte_end":13825431,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825432,"byte_end":13825439,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825440,"byte_end":13825458,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825459,"byte_end":13825489,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825490,"byte_end":13825514,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825515,"byte_end":13825522,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825523,"byte_end":13825552,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825553,"byte_end":13825605,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825606,"byte_end":13825609,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825610,"byte_end":13825628,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825629,"byte_end":13825646,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825647,"byte_end":13825727,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825728,"byte_end":13825762,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825763,"byte_end":13825816,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825817,"byte_end":13825828,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825829,"byte_end":13825836,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825837,"byte_end":13825842,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825843,"byte_end":13825890,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825891,"byte_end":13825944,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13825945,"byte_end":13826003,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13826004,"byte_end":13826083,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13826084,"byte_end":13826096,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13826097,"byte_end":13826104,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13826105,"byte_end":13826112,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13826113,"byte_end":13826116,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13826317,"byte_end":13826320,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13826244,"byte_end":13826305,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":539},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827632,"byte_end":13827639,"line_start":21,"line_end":21,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827035,"byte_end":13827070,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827071,"byte_end":13827074,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827075,"byte_end":13827144,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827145,"byte_end":13827224,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827225,"byte_end":13827297,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827298,"byte_end":13827322,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827323,"byte_end":13827326,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827327,"byte_end":13827395,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827396,"byte_end":13827473,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827474,"byte_end":13827535,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827536,"byte_end":13827539,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827540,"byte_end":13827576,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827577,"byte_end":13827621,"line_start":20,"line_end":20,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":540},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827687,"byte_end":13827691,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827646,"byte_end":13827677,"line_start":22,"line_end":22,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":541},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828457,"byte_end":13828462,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827698,"byte_end":13827750,"line_start":25,"line_end":25,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827755,"byte_end":13827758,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827763,"byte_end":13827832,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827837,"byte_end":13827907,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827912,"byte_end":13827958,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827963,"byte_end":13827966,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13827971,"byte_end":13828047,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828052,"byte_end":13828127,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828132,"byte_end":13828207,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828212,"byte_end":13828252,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828257,"byte_end":13828260,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828265,"byte_end":13828339,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828344,"byte_end":13828390,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828395,"byte_end":13828398,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828403,"byte_end":13828447,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831398,"byte_end":13831404,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828486,"byte_end":13828551,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828556,"byte_end":13828559,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828564,"byte_end":13828638,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828643,"byte_end":13828715,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828720,"byte_end":13828793,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828798,"byte_end":13828841,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828846,"byte_end":13828849,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828854,"byte_end":13828927,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13828932,"byte_end":13828995,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829000,"byte_end":13829075,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829080,"byte_end":13829155,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829160,"byte_end":13829183,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829188,"byte_end":13829191,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829196,"byte_end":13829268,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829273,"byte_end":13829347,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829352,"byte_end":13829422,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829427,"byte_end":13829430,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829435,"byte_end":13829503,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829508,"byte_end":13829579,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829584,"byte_end":13829664,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829669,"byte_end":13829681,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829686,"byte_end":13829689,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829694,"byte_end":13829764,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829769,"byte_end":13829844,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829849,"byte_end":13829886,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829891,"byte_end":13829894,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829899,"byte_end":13829935,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829940,"byte_end":13829984,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829989,"byte_end":13829992,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13829997,"byte_end":13830020,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830025,"byte_end":13830028,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830033,"byte_end":13830107,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830112,"byte_end":13830186,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830191,"byte_end":13830244,"line_start":75,"line_end":75,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830249,"byte_end":13830252,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830257,"byte_end":13830328,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830333,"byte_end":13830403,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830408,"byte_end":13830424,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830429,"byte_end":13830432,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830437,"byte_end":13830450,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830455,"byte_end":13830473,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830478,"byte_end":13830483,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830488,"byte_end":13830514,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830519,"byte_end":13830556,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830561,"byte_end":13830566,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830571,"byte_end":13830592,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830597,"byte_end":13830602,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830607,"byte_end":13830637,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830642,"byte_end":13830656,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830661,"byte_end":13830692,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830697,"byte_end":13830730,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830735,"byte_end":13830738,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830743,"byte_end":13830836,"line_start":94,"line_end":94,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830841,"byte_end":13830859,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830864,"byte_end":13830867,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830872,"byte_end":13830944,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13830949,"byte_end":13831009,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831014,"byte_end":13831066,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831071,"byte_end":13831133,"line_start":100,"line_end":100,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831138,"byte_end":13831205,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831210,"byte_end":13831213,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831218,"byte_end":13831246,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831251,"byte_end":13831260,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831265,"byte_end":13831270,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831275,"byte_end":13831282,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831287,"byte_end":13831290,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831295,"byte_end":13831364,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831369,"byte_end":13831390,"line_start":109,"line_end":109,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13832263,"byte_end":13832273,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831485,"byte_end":13831557,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831562,"byte_end":13831611,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831616,"byte_end":13831619,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831624,"byte_end":13831692,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831697,"byte_end":13831764,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831769,"byte_end":13831837,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831842,"byte_end":13831890,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831895,"byte_end":13831898,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831903,"byte_end":13831971,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13831976,"byte_end":13832051,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13832056,"byte_end":13832131,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13832136,"byte_end":13832208,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13832213,"byte_end":13832255,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833881,"byte_end":13833887,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13832691,"byte_end":13832771,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13832776,"byte_end":13832852,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13832857,"byte_end":13832860,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13832865,"byte_end":13832940,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13832945,"byte_end":13833015,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833020,"byte_end":13833091,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833096,"byte_end":13833168,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833173,"byte_end":13833231,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833236,"byte_end":13833239,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833244,"byte_end":13833313,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833318,"byte_end":13833393,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833398,"byte_end":13833474,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833479,"byte_end":13833501,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833506,"byte_end":13833509,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833514,"byte_end":13833587,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833592,"byte_end":13833665,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833670,"byte_end":13833746,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833751,"byte_end":13833754,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833759,"byte_end":13833795,"line_start":156,"line_end":156,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833800,"byte_end":13833832,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/decoder.rs","byte_start":13833837,"byte_end":13833873,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":556},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834221,"byte_end":13834228,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":559}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834066,"byte_end":13834138,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834139,"byte_end":13834159,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834160,"byte_end":13834163,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834164,"byte_end":13834210,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":558},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834493,"byte_end":13834498,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834241,"byte_end":13834273,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834278,"byte_end":13834281,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834286,"byte_end":13834363,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834368,"byte_end":13834424,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834429,"byte_end":13834432,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834437,"byte_end":13834483,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834849,"byte_end":13834855,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834522,"byte_end":13834567,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834572,"byte_end":13834575,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834580,"byte_end":13834654,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834659,"byte_end":13834739,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834744,"byte_end":13834782,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834787,"byte_end":13834790,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/encoder.rs","byte_start":13834795,"byte_end":13834841,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1479},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13842036,"byte_end":13842042,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1482}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13843525,"byte_end":13843528,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13842184,"byte_end":13842264,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13842269,"byte_end":13842350,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13842355,"byte_end":13842358,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13842363,"byte_end":13842438,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13842443,"byte_end":13842513,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13842518,"byte_end":13842587,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13842592,"byte_end":13842664,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13842669,"byte_end":13842727,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13842732,"byte_end":13842735,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13842740,"byte_end":13842811,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13842816,"byte_end":13842893,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13842898,"byte_end":13842974,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13842979,"byte_end":13843001,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13843006,"byte_end":13843009,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13843014,"byte_end":13843087,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13843092,"byte_end":13843165,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13843170,"byte_end":13843246,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13843251,"byte_end":13843254,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13843259,"byte_end":13843295,"line_start":55,"line_end":55,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13843300,"byte_end":13843332,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13843337,"byte_end":13843374,"line_start":57,"line_end":57,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13843379,"byte_end":13843417,"line_start":58,"line_end":58,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13843422,"byte_end":13843513,"line_start":59,"line_end":59,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13845136,"byte_end":13845149,"line_start":94,"line_end":94,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13843741,"byte_end":13843821,"line_start":70,"line_end":70,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13843826,"byte_end":13843907,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13843912,"byte_end":13843961,"line_start":72,"line_end":72,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13843966,"byte_end":13843969,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13843974,"byte_end":13844049,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844054,"byte_end":13844124,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844129,"byte_end":13844198,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844203,"byte_end":13844275,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844280,"byte_end":13844338,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844343,"byte_end":13844346,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844351,"byte_end":13844422,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844427,"byte_end":13844504,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844509,"byte_end":13844585,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844590,"byte_end":13844612,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844617,"byte_end":13844620,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844625,"byte_end":13844698,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844703,"byte_end":13844776,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844781,"byte_end":13844857,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844862,"byte_end":13844865,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844870,"byte_end":13844906,"line_start":89,"line_end":89,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844911,"byte_end":13844943,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844948,"byte_end":13844985,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13844990,"byte_end":13845028,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13845033,"byte_end":13845124,"line_start":93,"line_end":93,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13847252,"byte_end":13847262,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13845675,"byte_end":13845755,"line_start":113,"line_end":113,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13845760,"byte_end":13845841,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13845846,"byte_end":13845849,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13845854,"byte_end":13845929,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13845934,"byte_end":13846004,"line_start":117,"line_end":117,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846009,"byte_end":13846080,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846085,"byte_end":13846157,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846162,"byte_end":13846220,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846225,"byte_end":13846228,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846233,"byte_end":13846304,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846309,"byte_end":13846386,"line_start":123,"line_end":123,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846391,"byte_end":13846467,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846472,"byte_end":13846494,"line_start":125,"line_end":125,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846499,"byte_end":13846502,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846507,"byte_end":13846586,"line_start":127,"line_end":127,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846591,"byte_end":13846668,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846673,"byte_end":13846676,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846681,"byte_end":13846754,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846759,"byte_end":13846832,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846837,"byte_end":13846913,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846918,"byte_end":13846921,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846926,"byte_end":13846962,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13846967,"byte_end":13846999,"line_start":135,"line_end":135,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13847004,"byte_end":13847042,"line_start":136,"line_end":136,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13847047,"byte_end":13847085,"line_start":137,"line_end":137,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13847090,"byte_end":13847144,"line_start":138,"line_end":138,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13847149,"byte_end":13847240,"line_start":139,"line_end":139,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13847897,"byte_end":13847904,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13847614,"byte_end":13847677,"line_start":153,"line_end":153,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13847682,"byte_end":13847695,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13847700,"byte_end":13847703,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13847708,"byte_end":13847783,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13847788,"byte_end":13847858,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13847863,"byte_end":13847885,"line_start":158,"line_end":158,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848248,"byte_end":13848255,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13847957,"byte_end":13848028,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848033,"byte_end":13848046,"line_start":164,"line_end":164,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848051,"byte_end":13848054,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848059,"byte_end":13848134,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848139,"byte_end":13848209,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848214,"byte_end":13848236,"line_start":168,"line_end":168,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848618,"byte_end":13848629,"line_start":179,"line_end":179,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848320,"byte_end":13848398,"line_start":173,"line_end":173,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848403,"byte_end":13848416,"line_start":174,"line_end":174,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848421,"byte_end":13848424,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848429,"byte_end":13848504,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848509,"byte_end":13848579,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848584,"byte_end":13848606,"line_start":178,"line_end":178,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848976,"byte_end":13848981,"line_start":188,"line_end":188,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848725,"byte_end":13848783,"line_start":183,"line_end":183,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848788,"byte_end":13848801,"line_start":184,"line_end":184,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848806,"byte_end":13848809,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848814,"byte_end":13848888,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13848893,"byte_end":13848964,"line_start":187,"line_end":187,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13849293,"byte_end":13849302,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13849034,"byte_end":13849100,"line_start":192,"line_end":192,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13849105,"byte_end":13849118,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13849123,"byte_end":13849126,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13849131,"byte_end":13849205,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13849210,"byte_end":13849281,"line_start":196,"line_end":196,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13849422,"byte_end":13849433,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13849367,"byte_end":13849410,"line_start":201,"line_end":201,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13849568,"byte_end":13849583,"line_start":207,"line_end":207,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13849505,"byte_end":13849556,"line_start":206,"line_end":206,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13849723,"byte_end":13849735,"line_start":212,"line_end":212,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13849667,"byte_end":13849711,"line_start":211,"line_end":211,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13849872,"byte_end":13849888,"line_start":217,"line_end":217,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13849808,"byte_end":13849860,"line_start":216,"line_end":216,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13850238,"byte_end":13850248,"line_start":226,"line_end":226,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13849973,"byte_end":13850036,"line_start":221,"line_end":221,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13850041,"byte_end":13850044,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13850049,"byte_end":13850124,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13850129,"byte_end":13850199,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13850204,"byte_end":13850226,"line_start":225,"line_end":225,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13850620,"byte_end":13850630,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13850298,"byte_end":13850372,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13850377,"byte_end":13850418,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13850423,"byte_end":13850426,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13850431,"byte_end":13850506,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13850511,"byte_end":13850581,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13850586,"byte_end":13850608,"line_start":235,"line_end":235,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852604,"byte_end":13852615,"line_start":306,"line_end":306,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852289,"byte_end":13852360,"line_start":299,"line_end":299,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852361,"byte_end":13852433,"line_start":300,"line_end":300,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852434,"byte_end":13852494,"line_start":301,"line_end":301,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852495,"byte_end":13852498,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852499,"byte_end":13852535,"line_start":303,"line_end":303,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852553,"byte_end":13852592,"line_start":305,"line_end":305,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852701,"byte_end":13852703,"line_start":308,"line_end":308,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1199},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852628,"byte_end":13852692,"line_start":307,"line_end":307,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852735,"byte_end":13852740,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1199},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852713,"byte_end":13852726,"line_start":310,"line_end":310,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1204},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852805,"byte_end":13852813,"line_start":314,"line_end":314,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1199},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852750,"byte_end":13852796,"line_start":313,"line_end":313,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852900,"byte_end":13852909,"line_start":317,"line_end":317,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1199},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852830,"byte_end":13852891,"line_start":316,"line_end":316,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13853142,"byte_end":13853145,"line_start":326,"line_end":326,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13853090,"byte_end":13853130,"line_start":325,"line_end":325,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1438},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13853874,"byte_end":13853884,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1441}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13854135,"byte_end":13854138,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13854067,"byte_end":13854123,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13854486,"byte_end":13854499,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13854370,"byte_end":13854452,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13854457,"byte_end":13854474,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855213,"byte_end":13855220,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13854926,"byte_end":13854989,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13854994,"byte_end":13855011,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855016,"byte_end":13855019,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855024,"byte_end":13855099,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855104,"byte_end":13855174,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855179,"byte_end":13855201,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855568,"byte_end":13855575,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855273,"byte_end":13855344,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855349,"byte_end":13855366,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855371,"byte_end":13855374,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855379,"byte_end":13855454,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855459,"byte_end":13855529,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855534,"byte_end":13855556,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855942,"byte_end":13855953,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855640,"byte_end":13855718,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855723,"byte_end":13855740,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855745,"byte_end":13855748,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855753,"byte_end":13855828,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855833,"byte_end":13855903,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13855908,"byte_end":13855930,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13856318,"byte_end":13856328,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13856049,"byte_end":13856116,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13856121,"byte_end":13856124,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13856129,"byte_end":13856204,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13856209,"byte_end":13856279,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13856284,"byte_end":13856306,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13856440,"byte_end":13856447,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13856378,"byte_end":13856428,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13856570,"byte_end":13856581,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13856500,"byte_end":13856558,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13856701,"byte_end":13856712,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13856646,"byte_end":13856689,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13856842,"byte_end":13856857,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13856779,"byte_end":13856830,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1397},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13858958,"byte_end":13858969,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1400}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859176,"byte_end":13859179,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859107,"byte_end":13859164,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859737,"byte_end":13859744,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859449,"byte_end":13859512,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859517,"byte_end":13859535,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859540,"byte_end":13859543,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859548,"byte_end":13859623,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859628,"byte_end":13859698,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859703,"byte_end":13859725,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860093,"byte_end":13860100,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859797,"byte_end":13859868,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859873,"byte_end":13859891,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859896,"byte_end":13859899,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859904,"byte_end":13859979,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859984,"byte_end":13860054,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860059,"byte_end":13860081,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860468,"byte_end":13860479,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860165,"byte_end":13860243,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860248,"byte_end":13860266,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860271,"byte_end":13860274,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860279,"byte_end":13860354,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860359,"byte_end":13860429,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860434,"byte_end":13860456,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860845,"byte_end":13860855,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860575,"byte_end":13860643,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860648,"byte_end":13860651,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860656,"byte_end":13860731,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860736,"byte_end":13860806,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860811,"byte_end":13860833,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860967,"byte_end":13860974,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13860905,"byte_end":13860955,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13861097,"byte_end":13861108,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13861027,"byte_end":13861085,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13861229,"byte_end":13861241,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13861173,"byte_end":13861217,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13861372,"byte_end":13861388,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13861308,"byte_end":13861360,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":933},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":1211},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":987},{"krate":0,"index":1223},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":989},{"krate":0,"index":996},{"krate":0,"index":1000},{"krate":0,"index":1004},{"krate":0,"index":1006},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1031}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13862915,"byte_end":13862967,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13862968,"byte_end":13862971,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13862972,"byte_end":13863042,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863043,"byte_end":13863101,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863102,"byte_end":13863174,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863175,"byte_end":13863245,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863246,"byte_end":13863313,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863314,"byte_end":13863317,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863318,"byte_end":13863339,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863340,"byte_end":13863343,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863344,"byte_end":13863419,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863420,"byte_end":13863491,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863492,"byte_end":13863563,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863564,"byte_end":13863634,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863635,"byte_end":13863675,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863676,"byte_end":13863679,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863680,"byte_end":13863687,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863688,"byte_end":13863731,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863732,"byte_end":13863790,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863791,"byte_end":13863794,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863795,"byte_end":13863850,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863851,"byte_end":13863893,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863894,"byte_end":13863899,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863900,"byte_end":13863952,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863953,"byte_end":13863958,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863959,"byte_end":13863981,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863982,"byte_end":13863989,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863990,"byte_end":13863993,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13863994,"byte_end":13864066,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864067,"byte_end":13864138,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864139,"byte_end":13864158,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864159,"byte_end":13864162,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864163,"byte_end":13864174,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864175,"byte_end":13864224,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864225,"byte_end":13864274,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864275,"byte_end":13864324,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864325,"byte_end":13864332,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864333,"byte_end":13864336,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864337,"byte_end":13864375,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864376,"byte_end":13864379,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864380,"byte_end":13864387,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864388,"byte_end":13864431,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864432,"byte_end":13864490,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864491,"byte_end":13864494,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864495,"byte_end":13864520,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864521,"byte_end":13864542,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864543,"byte_end":13864546,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864547,"byte_end":13864623,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864624,"byte_end":13864633,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864634,"byte_end":13864676,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864677,"byte_end":13864682,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864683,"byte_end":13864756,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864757,"byte_end":13864804,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864805,"byte_end":13864808,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864809,"byte_end":13864846,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864847,"byte_end":13864861,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864862,"byte_end":13864867,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864868,"byte_end":13864875,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864876,"byte_end":13864879,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864880,"byte_end":13864922,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864923,"byte_end":13864926,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864927,"byte_end":13864938,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864939,"byte_end":13864978,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13864979,"byte_end":13865018,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865019,"byte_end":13865058,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865059,"byte_end":13865066,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865067,"byte_end":13865070,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865071,"byte_end":13865085,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865086,"byte_end":13865089,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865090,"byte_end":13865165,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865166,"byte_end":13865239,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865240,"byte_end":13865306,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865307,"byte_end":13865376,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865377,"byte_end":13865442,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865443,"byte_end":13865446,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865447,"byte_end":13865463,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865464,"byte_end":13865467,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865468,"byte_end":13865544,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865545,"byte_end":13865586,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865587,"byte_end":13865590,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865591,"byte_end":13865598,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865599,"byte_end":13865630,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865631,"byte_end":13865681,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865682,"byte_end":13865723,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865724,"byte_end":13865759,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865760,"byte_end":13865808,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865809,"byte_end":13865840,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865841,"byte_end":13865889,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865890,"byte_end":13865939,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865940,"byte_end":13865962,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865963,"byte_end":13865970,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865971,"byte_end":13865993,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13865994,"byte_end":13866001,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866002,"byte_end":13866005,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866006,"byte_end":13866054,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866055,"byte_end":13866058,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866059,"byte_end":13866070,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866071,"byte_end":13866123,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866124,"byte_end":13866189,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866190,"byte_end":13866255,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866256,"byte_end":13866321,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866322,"byte_end":13866329,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866330,"byte_end":13866333,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866334,"byte_end":13866410,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866411,"byte_end":13866485,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866486,"byte_end":13866558,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866559,"byte_end":13866635,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866636,"byte_end":13866678,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866679,"byte_end":13866682,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866683,"byte_end":13866699,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866700,"byte_end":13866703,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866704,"byte_end":13866779,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866780,"byte_end":13866821,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866822,"byte_end":13866825,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866826,"byte_end":13866833,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866834,"byte_end":13866865,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866866,"byte_end":13866916,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866917,"byte_end":13866958,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866959,"byte_end":13866994,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13866995,"byte_end":13867043,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867044,"byte_end":13867075,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867076,"byte_end":13867124,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867125,"byte_end":13867184,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867185,"byte_end":13867207,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867208,"byte_end":13867215,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867216,"byte_end":13867238,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867239,"byte_end":13867246,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867247,"byte_end":13867250,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867251,"byte_end":13867299,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867300,"byte_end":13867303,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867304,"byte_end":13867315,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867316,"byte_end":13867365,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867366,"byte_end":13867420,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867421,"byte_end":13867475,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867476,"byte_end":13867530,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867531,"byte_end":13867538,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867539,"byte_end":13867542,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867543,"byte_end":13867616,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867617,"byte_end":13867684,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867685,"byte_end":13867688,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867689,"byte_end":13867705,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867706,"byte_end":13867709,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867710,"byte_end":13867786,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867787,"byte_end":13867859,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867860,"byte_end":13867899,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867900,"byte_end":13867903,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867904,"byte_end":13867911,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867912,"byte_end":13867943,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867944,"byte_end":13867994,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13867995,"byte_end":13868036,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868037,"byte_end":13868072,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868073,"byte_end":13868121,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868122,"byte_end":13868153,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868154,"byte_end":13868201,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868202,"byte_end":13868222,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868223,"byte_end":13868245,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868246,"byte_end":13868253,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868254,"byte_end":13868276,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868277,"byte_end":13868284,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868285,"byte_end":13868288,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868289,"byte_end":13868337,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868338,"byte_end":13868341,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868342,"byte_end":13868353,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868354,"byte_end":13868406,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868407,"byte_end":13868472,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868473,"byte_end":13868538,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868539,"byte_end":13868604,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868605,"byte_end":13868612,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868613,"byte_end":13868616,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868617,"byte_end":13868689,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868690,"byte_end":13868765,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868766,"byte_end":13868838,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868839,"byte_end":13868915,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868916,"byte_end":13868989,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868990,"byte_end":13868993,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13868994,"byte_end":13869010,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869011,"byte_end":13869014,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869015,"byte_end":13869089,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869090,"byte_end":13869157,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869158,"byte_end":13869161,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869162,"byte_end":13869169,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869170,"byte_end":13869201,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869202,"byte_end":13869252,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869253,"byte_end":13869294,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869295,"byte_end":13869330,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869331,"byte_end":13869379,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869380,"byte_end":13869411,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869412,"byte_end":13869460,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869461,"byte_end":13869481,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869482,"byte_end":13869504,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869505,"byte_end":13869512,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869513,"byte_end":13869535,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869536,"byte_end":13869543,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869544,"byte_end":13869547,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869548,"byte_end":13869596,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869597,"byte_end":13869600,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869601,"byte_end":13869612,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869613,"byte_end":13869639,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869640,"byte_end":13869685,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869686,"byte_end":13869731,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869732,"byte_end":13869777,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869778,"byte_end":13869781,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869782,"byte_end":13869810,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869811,"byte_end":13869856,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869857,"byte_end":13869902,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869903,"byte_end":13869948,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869949,"byte_end":13869956,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869957,"byte_end":13869960,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13869961,"byte_end":13870033,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870034,"byte_end":13870110,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870111,"byte_end":13870181,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870182,"byte_end":13870251,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870252,"byte_end":13870289,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870290,"byte_end":13870293,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870294,"byte_end":13870368,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870369,"byte_end":13870423,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870424,"byte_end":13870427,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870428,"byte_end":13870444,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870445,"byte_end":13870448,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870449,"byte_end":13870522,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870523,"byte_end":13870599,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870600,"byte_end":13870674,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870675,"byte_end":13870688,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870689,"byte_end":13870692,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870693,"byte_end":13870700,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870701,"byte_end":13870732,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870733,"byte_end":13870783,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870784,"byte_end":13870825,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870826,"byte_end":13870861,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870862,"byte_end":13870911,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870912,"byte_end":13870943,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870944,"byte_end":13870992,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13870993,"byte_end":13871037,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871038,"byte_end":13871060,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871061,"byte_end":13871068,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871069,"byte_end":13871091,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871092,"byte_end":13871099,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871100,"byte_end":13871103,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871104,"byte_end":13871152,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871153,"byte_end":13871156,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871157,"byte_end":13871168,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871169,"byte_end":13871195,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871196,"byte_end":13871246,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871247,"byte_end":13871297,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871298,"byte_end":13871348,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871349,"byte_end":13871352,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871353,"byte_end":13871373,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871374,"byte_end":13871404,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871405,"byte_end":13871435,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871436,"byte_end":13871466,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871467,"byte_end":13871474,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871475,"byte_end":13871478,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871479,"byte_end":13871552,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871553,"byte_end":13871628,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871629,"byte_end":13871701,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871702,"byte_end":13871740,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871741,"byte_end":13871744,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871745,"byte_end":13871819,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871820,"byte_end":13871896,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871897,"byte_end":13871970,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13871971,"byte_end":13871999,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872000,"byte_end":13872003,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872004,"byte_end":13872020,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872021,"byte_end":13872024,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872025,"byte_end":13872098,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872099,"byte_end":13872175,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872176,"byte_end":13872250,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872251,"byte_end":13872323,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872324,"byte_end":13872335,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872336,"byte_end":13872339,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872340,"byte_end":13872347,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872348,"byte_end":13872379,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872380,"byte_end":13872430,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872431,"byte_end":13872472,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872473,"byte_end":13872508,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872509,"byte_end":13872558,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872559,"byte_end":13872590,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872591,"byte_end":13872656,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872657,"byte_end":13872677,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872678,"byte_end":13872700,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872701,"byte_end":13872708,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872709,"byte_end":13872716,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872717,"byte_end":13872720,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872721,"byte_end":13872769,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872770,"byte_end":13872773,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872774,"byte_end":13872785,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872786,"byte_end":13872812,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872813,"byte_end":13872863,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872864,"byte_end":13872914,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872915,"byte_end":13872965,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872966,"byte_end":13872969,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872970,"byte_end":13872990,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13872991,"byte_end":13873021,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873022,"byte_end":13873052,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873053,"byte_end":13873083,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873084,"byte_end":13873091,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873092,"byte_end":13873095,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873096,"byte_end":13873169,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873170,"byte_end":13873244,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873245,"byte_end":13873319,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873320,"byte_end":13873393,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873394,"byte_end":13873470,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873471,"byte_end":13873504,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873505,"byte_end":13873508,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873509,"byte_end":13873525,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873526,"byte_end":13873529,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873530,"byte_end":13873604,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873605,"byte_end":13873672,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873673,"byte_end":13873676,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873677,"byte_end":13873684,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873685,"byte_end":13873716,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873717,"byte_end":13873767,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873768,"byte_end":13873809,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873810,"byte_end":13873845,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873846,"byte_end":13873894,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873895,"byte_end":13873926,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873927,"byte_end":13873974,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13873975,"byte_end":13874021,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874022,"byte_end":13874044,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874045,"byte_end":13874052,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874053,"byte_end":13874075,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874076,"byte_end":13874083,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874084,"byte_end":13874087,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874088,"byte_end":13874136,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874137,"byte_end":13874140,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874141,"byte_end":13874152,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874153,"byte_end":13874209,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874210,"byte_end":13874271,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874272,"byte_end":13874333,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874334,"byte_end":13874395,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874396,"byte_end":13874403,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874404,"byte_end":13874407,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874408,"byte_end":13874482,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874483,"byte_end":13874503,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874504,"byte_end":13874507,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874508,"byte_end":13874522,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874523,"byte_end":13874526,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874527,"byte_end":13874602,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874603,"byte_end":13874675,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874676,"byte_end":13874744,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874745,"byte_end":13874821,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874822,"byte_end":13874863,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874864,"byte_end":13874867,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874868,"byte_end":13874938,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874939,"byte_end":13874957,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874958,"byte_end":13874961,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874962,"byte_end":13874969,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13874970,"byte_end":13875002,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875003,"byte_end":13875053,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875054,"byte_end":13875098,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875099,"byte_end":13875112,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875113,"byte_end":13875148,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875149,"byte_end":13875180,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875181,"byte_end":13875204,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875205,"byte_end":13875212,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875213,"byte_end":13875235,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875236,"byte_end":13875243,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875244,"byte_end":13875247,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875248,"byte_end":13875298,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875299,"byte_end":13875302,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875303,"byte_end":13875314,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875315,"byte_end":13875348,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875349,"byte_end":13875382,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875383,"byte_end":13875416,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875417,"byte_end":13875424,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875425,"byte_end":13875428,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875429,"byte_end":13875498,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875499,"byte_end":13875536,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875537,"byte_end":13875576,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875577,"byte_end":13875622,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875623,"byte_end":13875670,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875671,"byte_end":13875701,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875702,"byte_end":13875735,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1211},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13876297,"byte_end":13876304,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13875979,"byte_end":13876034,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13876035,"byte_end":13876038,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13876039,"byte_end":13876114,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13876115,"byte_end":13876195,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13876196,"byte_end":13876255,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":987},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13876975,"byte_end":13877000,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":988}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13876890,"byte_end":13876963,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877345,"byte_end":13877365,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877021,"byte_end":13877095,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877096,"byte_end":13877099,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877100,"byte_end":13877179,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877180,"byte_end":13877223,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877224,"byte_end":13877227,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877228,"byte_end":13877281,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877282,"byte_end":13877285,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877286,"byte_end":13877316,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877709,"byte_end":13877712,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877618,"byte_end":13877697,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877939,"byte_end":13877946,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877836,"byte_end":13877911,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877916,"byte_end":13877927,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13878168,"byte_end":13878184,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877996,"byte_end":13878037,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13878042,"byte_end":13878045,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13878050,"byte_end":13878123,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13878128,"byte_end":13878156,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13878605,"byte_end":13878625,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13878249,"byte_end":13878283,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13878288,"byte_end":13878291,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13878296,"byte_end":13878366,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13878371,"byte_end":13878446,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13878451,"byte_end":13878523,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13878528,"byte_end":13878593,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883880,"byte_end":13883883,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883338,"byte_end":13883413,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883418,"byte_end":13883429,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883434,"byte_end":13883437,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883442,"byte_end":13883456,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883461,"byte_end":13883464,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883469,"byte_end":13883476,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883481,"byte_end":13883512,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883517,"byte_end":13883565,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883570,"byte_end":13883573,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883578,"byte_end":13883619,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883624,"byte_end":13883659,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883664,"byte_end":13883695,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883700,"byte_end":13883731,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883736,"byte_end":13883765,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883770,"byte_end":13883790,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883795,"byte_end":13883817,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883822,"byte_end":13883829,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883834,"byte_end":13883856,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883861,"byte_end":13883868,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885068,"byte_end":13885078,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13884547,"byte_end":13884596,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13884601,"byte_end":13884604,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13884609,"byte_end":13884641,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13884646,"byte_end":13884649,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13884654,"byte_end":13884722,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13884727,"byte_end":13884730,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13884735,"byte_end":13884749,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13884754,"byte_end":13884757,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13884762,"byte_end":13884769,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13884774,"byte_end":13884805,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13884810,"byte_end":13884858,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13884863,"byte_end":13884866,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13884871,"byte_end":13884912,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13884917,"byte_end":13884952,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13884957,"byte_end":13884978,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13884983,"byte_end":13885005,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885010,"byte_end":13885017,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885022,"byte_end":13885044,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885049,"byte_end":13885056,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885710,"byte_end":13885723,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885177,"byte_end":13885229,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885234,"byte_end":13885237,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885242,"byte_end":13885280,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885285,"byte_end":13885288,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885293,"byte_end":13885361,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885366,"byte_end":13885369,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885374,"byte_end":13885388,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885393,"byte_end":13885396,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885401,"byte_end":13885408,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885413,"byte_end":13885444,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885449,"byte_end":13885497,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885502,"byte_end":13885505,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885510,"byte_end":13885551,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885556,"byte_end":13885591,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885596,"byte_end":13885620,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885625,"byte_end":13885647,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885652,"byte_end":13885659,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885664,"byte_end":13885686,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885691,"byte_end":13885698,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886356,"byte_end":13886369,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885823,"byte_end":13885875,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885880,"byte_end":13885883,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885888,"byte_end":13885926,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885931,"byte_end":13885934,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13885939,"byte_end":13886007,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886012,"byte_end":13886015,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886020,"byte_end":13886034,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886039,"byte_end":13886042,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886047,"byte_end":13886054,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886059,"byte_end":13886090,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886095,"byte_end":13886143,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886148,"byte_end":13886151,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886156,"byte_end":13886197,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886202,"byte_end":13886237,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886242,"byte_end":13886266,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886271,"byte_end":13886293,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886298,"byte_end":13886305,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886310,"byte_end":13886332,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886337,"byte_end":13886344,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887450,"byte_end":13887466,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886538,"byte_end":13886567,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886572,"byte_end":13886575,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886580,"byte_end":13886652,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886657,"byte_end":13886682,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886687,"byte_end":13886690,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886695,"byte_end":13886767,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886772,"byte_end":13886841,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886846,"byte_end":13886919,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886924,"byte_end":13886936,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886941,"byte_end":13886944,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13886949,"byte_end":13887024,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887029,"byte_end":13887090,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887095,"byte_end":13887098,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887103,"byte_end":13887117,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887122,"byte_end":13887125,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887130,"byte_end":13887137,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887142,"byte_end":13887173,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887178,"byte_end":13887226,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887231,"byte_end":13887234,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887239,"byte_end":13887280,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887285,"byte_end":13887320,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887325,"byte_end":13887360,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887365,"byte_end":13887387,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887392,"byte_end":13887399,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887404,"byte_end":13887426,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887431,"byte_end":13887438,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888127,"byte_end":13888146,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887563,"byte_end":13887626,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887631,"byte_end":13887634,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887639,"byte_end":13887690,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887695,"byte_end":13887698,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887703,"byte_end":13887771,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887776,"byte_end":13887779,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887784,"byte_end":13887798,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887803,"byte_end":13887806,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887811,"byte_end":13887818,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887823,"byte_end":13887854,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887859,"byte_end":13887907,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887912,"byte_end":13887915,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887920,"byte_end":13887961,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13887966,"byte_end":13888001,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888006,"byte_end":13888037,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888042,"byte_end":13888064,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888069,"byte_end":13888076,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888081,"byte_end":13888103,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888108,"byte_end":13888115,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888805,"byte_end":13888824,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888315,"byte_end":13888381,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888386,"byte_end":13888389,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888394,"byte_end":13888449,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888454,"byte_end":13888457,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888462,"byte_end":13888476,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888481,"byte_end":13888484,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888489,"byte_end":13888496,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888501,"byte_end":13888532,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888537,"byte_end":13888585,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888590,"byte_end":13888593,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888598,"byte_end":13888639,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888644,"byte_end":13888679,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888684,"byte_end":13888715,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888720,"byte_end":13888742,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888747,"byte_end":13888754,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888759,"byte_end":13888781,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888786,"byte_end":13888793,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889378,"byte_end":13889395,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13888927,"byte_end":13889000,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889005,"byte_end":13889023,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889028,"byte_end":13889031,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889036,"byte_end":13889050,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889055,"byte_end":13889058,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889063,"byte_end":13889070,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889075,"byte_end":13889106,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889111,"byte_end":13889159,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889164,"byte_end":13889167,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889172,"byte_end":13889213,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889218,"byte_end":13889253,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889258,"byte_end":13889288,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889293,"byte_end":13889315,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889320,"byte_end":13889327,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889332,"byte_end":13889354,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889359,"byte_end":13889366,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890045,"byte_end":13890053,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889496,"byte_end":13889559,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889564,"byte_end":13889567,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889572,"byte_end":13889633,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889638,"byte_end":13889641,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889646,"byte_end":13889700,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889705,"byte_end":13889708,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889713,"byte_end":13889727,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889732,"byte_end":13889735,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889740,"byte_end":13889747,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889752,"byte_end":13889783,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889788,"byte_end":13889836,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889841,"byte_end":13889844,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889849,"byte_end":13889890,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889895,"byte_end":13889930,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889935,"byte_end":13889955,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889960,"byte_end":13889982,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889987,"byte_end":13889994,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13889999,"byte_end":13890021,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890026,"byte_end":13890033,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890573,"byte_end":13890582,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890151,"byte_end":13890214,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890219,"byte_end":13890222,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890227,"byte_end":13890241,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890246,"byte_end":13890249,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890254,"byte_end":13890261,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890266,"byte_end":13890314,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890319,"byte_end":13890340,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890345,"byte_end":13890380,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890385,"byte_end":13890416,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890421,"byte_end":13890452,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890457,"byte_end":13890486,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890491,"byte_end":13890511,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890516,"byte_end":13890537,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890542,"byte_end":13890549,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890554,"byte_end":13890561,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891238,"byte_end":13891246,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890734,"byte_end":13890787,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890792,"byte_end":13890795,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890800,"byte_end":13890814,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890819,"byte_end":13890822,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890827,"byte_end":13890834,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890839,"byte_end":13890870,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890875,"byte_end":13890923,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890928,"byte_end":13890931,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890936,"byte_end":13890977,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13890982,"byte_end":13891017,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891022,"byte_end":13891053,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891058,"byte_end":13891089,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891094,"byte_end":13891123,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891128,"byte_end":13891148,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891153,"byte_end":13891175,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891180,"byte_end":13891187,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891192,"byte_end":13891214,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891219,"byte_end":13891226,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891819,"byte_end":13891828,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891410,"byte_end":13891464,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891469,"byte_end":13891472,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891477,"byte_end":13891491,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891496,"byte_end":13891499,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891504,"byte_end":13891511,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891516,"byte_end":13891548,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891553,"byte_end":13891603,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891608,"byte_end":13891652,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891657,"byte_end":13891692,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891697,"byte_end":13891728,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891733,"byte_end":13891756,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891761,"byte_end":13891768,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891773,"byte_end":13891795,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891800,"byte_end":13891807,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892437,"byte_end":13892447,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13891989,"byte_end":13892038,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892043,"byte_end":13892046,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892051,"byte_end":13892065,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892070,"byte_end":13892073,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892078,"byte_end":13892085,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892090,"byte_end":13892135,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892140,"byte_end":13892190,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892195,"byte_end":13892251,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892256,"byte_end":13892269,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892274,"byte_end":13892309,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892314,"byte_end":13892345,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892350,"byte_end":13892374,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892379,"byte_end":13892386,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892391,"byte_end":13892413,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892418,"byte_end":13892425,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13893826,"byte_end":13893836,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13893583,"byte_end":13893670,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13893671,"byte_end":13893674,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13893675,"byte_end":13893713,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13893714,"byte_end":13893752,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13894936,"byte_end":13894939,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13894517,"byte_end":13894577,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13894582,"byte_end":13894585,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13894590,"byte_end":13894600,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13894605,"byte_end":13894608,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13894613,"byte_end":13894685,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13894690,"byte_end":13894763,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13894768,"byte_end":13894835,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13894840,"byte_end":13894843,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13894848,"byte_end":13894924,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896070,"byte_end":13896089,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895097,"byte_end":13895157,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895162,"byte_end":13895165,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895170,"byte_end":13895233,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895238,"byte_end":13895316,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895321,"byte_end":13895388,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895393,"byte_end":13895465,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895470,"byte_end":13895540,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895545,"byte_end":13895568,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895573,"byte_end":13895576,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895581,"byte_end":13895591,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895596,"byte_end":13895599,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895604,"byte_end":13895679,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895684,"byte_end":13895757,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895762,"byte_end":13895838,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895843,"byte_end":13895916,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895921,"byte_end":13895991,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13895996,"byte_end":13895999,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896004,"byte_end":13896058,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896655,"byte_end":13896665,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896217,"byte_end":13896267,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896272,"byte_end":13896275,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896280,"byte_end":13896287,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896292,"byte_end":13896311,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896316,"byte_end":13896354,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896359,"byte_end":13896362,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896367,"byte_end":13896401,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896406,"byte_end":13896453,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896458,"byte_end":13896465,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896470,"byte_end":13896477,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896482,"byte_end":13896520,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896525,"byte_end":13896528,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896533,"byte_end":13896586,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896591,"byte_end":13896631,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13896636,"byte_end":13896643,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1262},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13900990,"byte_end":13901011,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1261},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13900944,"byte_end":13900985,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1264},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13901046,"byte_end":13901048,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1261},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13901017,"byte_end":13901041,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":1261},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13900922,"byte_end":13900937,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1262},{"krate":0,"index":1264}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13900840,"byte_end":13900895,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1269},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902970,"byte_end":13902987,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13901784,"byte_end":13901925,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13901926,"byte_end":13901929,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13901930,"byte_end":13901968,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13901969,"byte_end":13902007,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902008,"byte_end":13902011,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902012,"byte_end":13902025,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902026,"byte_end":13902093,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902094,"byte_end":13902097,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902098,"byte_end":13902131,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902132,"byte_end":13902161,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902162,"byte_end":13902165,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902166,"byte_end":13902173,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902174,"byte_end":13902230,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902231,"byte_end":13902265,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902266,"byte_end":13902269,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902270,"byte_end":13902275,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902276,"byte_end":13902323,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902324,"byte_end":13902377,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902378,"byte_end":13902455,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902456,"byte_end":13902491,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902492,"byte_end":13902513,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902514,"byte_end":13902564,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902565,"byte_end":13902628,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902629,"byte_end":13902692,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902693,"byte_end":13902756,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902757,"byte_end":13902813,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902814,"byte_end":13902863,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902864,"byte_end":13902876,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902877,"byte_end":13902884,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902885,"byte_end":13902892,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13902893,"byte_end":13902896,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13904322,"byte_end":13904325,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13903880,"byte_end":13903948,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13903953,"byte_end":13903956,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13903961,"byte_end":13903971,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13903976,"byte_end":13903979,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13903984,"byte_end":13904063,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13904068,"byte_end":13904142,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13904147,"byte_end":13904214,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13904219,"byte_end":13904222,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13904227,"byte_end":13904310,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905636,"byte_end":13905655,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13904605,"byte_end":13904673,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13904678,"byte_end":13904681,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13904686,"byte_end":13904756,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13904761,"byte_end":13904847,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13904852,"byte_end":13904922,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13904927,"byte_end":13905004,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905009,"byte_end":13905079,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905084,"byte_end":13905107,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905112,"byte_end":13905115,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905120,"byte_end":13905130,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905135,"byte_end":13905138,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905143,"byte_end":13905225,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905230,"byte_end":13905303,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905308,"byte_end":13905385,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905390,"byte_end":13905463,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905468,"byte_end":13905543,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905548,"byte_end":13905551,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905556,"byte_end":13905624,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13906443,"byte_end":13906453,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905912,"byte_end":13905963,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905968,"byte_end":13905971,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905976,"byte_end":13905983,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13905988,"byte_end":13906007,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13906012,"byte_end":13906057,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13906062,"byte_end":13906065,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13906070,"byte_end":13906142,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13906147,"byte_end":13906194,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13906199,"byte_end":13906206,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13906211,"byte_end":13906218,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13906223,"byte_end":13906268,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13906273,"byte_end":13906276,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13906281,"byte_end":13906374,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13906379,"byte_end":13906419,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13906424,"byte_end":13906431,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1294},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13910548,"byte_end":13910570,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1293},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13910501,"byte_end":13910543,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1296},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13910606,"byte_end":13910608,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1293},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13910576,"byte_end":13910601,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13910472,"byte_end":13910494,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1296}],"decl_id":null,"docs":" An error occured while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a chunk.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13910389,"byte_end":13910445,"line_start":237,"line_end":237,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":186},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":368}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mod.rs","byte_start":6616,"byte_end":6646,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":51},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8580,"byte_end":8597,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":52}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7362,"byte_end":7439,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7440,"byte_end":7450,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7451,"byte_end":7454,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7455,"byte_end":7520,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7521,"byte_end":7595,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7596,"byte_end":7599,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7600,"byte_end":7683,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7684,"byte_end":7687,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7688,"byte_end":7702,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7703,"byte_end":7706,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7707,"byte_end":7720,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7721,"byte_end":7743,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7744,"byte_end":7784,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7785,"byte_end":7788,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7789,"byte_end":7807,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7808,"byte_end":7829,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7830,"byte_end":7875,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7876,"byte_end":7917,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7918,"byte_end":7921,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7922,"byte_end":7973,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":7974,"byte_end":8037,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8038,"byte_end":8059,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8060,"byte_end":8109,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8110,"byte_end":8156,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8157,"byte_end":8178,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8179,"byte_end":8196,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8197,"byte_end":8278,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8279,"byte_end":8301,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8302,"byte_end":8319,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8320,"byte_end":8333,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8334,"byte_end":8345,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8346,"byte_end":8349,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8350,"byte_end":8383,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8384,"byte_end":8459,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8460,"byte_end":8487,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8488,"byte_end":8499,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8500,"byte_end":8503,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8504,"byte_end":8554,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8555,"byte_end":8560,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8561,"byte_end":8568,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":9017,"byte_end":9042,"line_start":66,"line_end":66,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8864,"byte_end":8938,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8939,"byte_end":8956,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8957,"byte_end":9005,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":11550,"byte_end":11553,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":11475,"byte_end":11538,"line_start":139,"line_end":139,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13606,"byte_end":13617,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12343,"byte_end":12414,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12419,"byte_end":12452,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12457,"byte_end":12460,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12465,"byte_end":12536,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12541,"byte_end":12573,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12578,"byte_end":12581,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12586,"byte_end":12600,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12605,"byte_end":12608,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12613,"byte_end":12626,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12631,"byte_end":12653,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12658,"byte_end":12698,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12703,"byte_end":12706,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12711,"byte_end":12729,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12734,"byte_end":12755,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12760,"byte_end":12805,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12810,"byte_end":12856,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12861,"byte_end":12864,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12869,"byte_end":12920,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12925,"byte_end":12988,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":12993,"byte_end":13014,"line_start":183,"line_end":183,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13019,"byte_end":13067,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13072,"byte_end":13118,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13123,"byte_end":13144,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13149,"byte_end":13166,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13171,"byte_end":13252,"line_start":188,"line_end":188,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13257,"byte_end":13279,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13284,"byte_end":13301,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13306,"byte_end":13319,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13324,"byte_end":13335,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13340,"byte_end":13343,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13348,"byte_end":13381,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13386,"byte_end":13461,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13466,"byte_end":13493,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13498,"byte_end":13509,"line_start":197,"line_end":197,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13514,"byte_end":13517,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13522,"byte_end":13572,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13577,"byte_end":13582,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":13587,"byte_end":13594,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":16192,"byte_end":16198,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":16003,"byte_end":16075,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":16080,"byte_end":16100,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":16105,"byte_end":16108,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":16113,"byte_end":16180,"line_start":259,"line_end":259,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":16326,"byte_end":16338,"line_start":265,"line_end":265,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":16250,"byte_end":16314,"line_start":264,"line_end":264,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":16489,"byte_end":16498,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":16403,"byte_end":16477,"line_start":269,"line_end":269,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1372},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":70044,"byte_end":70054,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":69906,"byte_end":69963,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":69964,"byte_end":69967,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":69968,"byte_end":70015,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":70777,"byte_end":70780,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":70735,"byte_end":70765,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":71495,"byte_end":71505,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":70983,"byte_end":71012,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":71017,"byte_end":71020,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":71025,"byte_end":71101,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":71106,"byte_end":71175,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":71180,"byte_end":71198,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":71203,"byte_end":71206,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":71211,"byte_end":71282,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":71287,"byte_end":71360,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":71365,"byte_end":71439,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":71444,"byte_end":71483,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":73026,"byte_end":73040,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":71929,"byte_end":72010,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72015,"byte_end":72061,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72066,"byte_end":72069,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72074,"byte_end":72122,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72127,"byte_end":72130,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72135,"byte_end":72219,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72224,"byte_end":72283,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72288,"byte_end":72373,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72378,"byte_end":72397,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72402,"byte_end":72481,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72486,"byte_end":72489,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72494,"byte_end":72569,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72574,"byte_end":72650,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72655,"byte_end":72710,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72715,"byte_end":72789,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72794,"byte_end":72867,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72872,"byte_end":72906,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72911,"byte_end":72914,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":72919,"byte_end":72995,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":73000,"byte_end":73014,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":73674,"byte_end":73682,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":73426,"byte_end":73491,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":73496,"byte_end":73499,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":73504,"byte_end":73577,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":73582,"byte_end":73592,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":73597,"byte_end":73600,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":73605,"byte_end":73662,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":73794,"byte_end":73803,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":73736,"byte_end":73782,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":74144,"byte_end":74155,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":73945,"byte_end":73979,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":73984,"byte_end":73987,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":73992,"byte_end":74065,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":74070,"byte_end":74132,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":74460,"byte_end":74469,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":74260,"byte_end":74295,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":74300,"byte_end":74303,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":74308,"byte_end":74381,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":74386,"byte_end":74448,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":75169,"byte_end":75186,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":74620,"byte_end":74689,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":74694,"byte_end":74697,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":74702,"byte_end":74772,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":74777,"byte_end":74850,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":74855,"byte_end":74901,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":74906,"byte_end":74909,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":74914,"byte_end":74989,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":74994,"byte_end":75068,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":75073,"byte_end":75099,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":75104,"byte_end":75107,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":75112,"byte_end":75157,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":75352,"byte_end":75362,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":75239,"byte_end":75286,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":75291,"byte_end":75294,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":75299,"byte_end":75340,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":283},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":77857,"byte_end":77870,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":77726,"byte_end":77799,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":77800,"byte_end":77803,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":77804,"byte_end":77845,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78056,"byte_end":78059,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78011,"byte_end":78044,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78305,"byte_end":78310,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78268,"byte_end":78293,"line_start":29,"line_end":29,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78416,"byte_end":78427,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78362,"byte_end":78404,"line_start":34,"line_end":34,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78542,"byte_end":78552,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78497,"byte_end":78530,"line_start":39,"line_end":39,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":79286,"byte_end":79298,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78613,"byte_end":78661,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78666,"byte_end":78669,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78674,"byte_end":78715,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78720,"byte_end":78723,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78728,"byte_end":78790,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78795,"byte_end":78855,"line_start":49,"line_end":49,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78860,"byte_end":78920,"line_start":50,"line_end":50,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78925,"byte_end":78928,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":78933,"byte_end":79008,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":79013,"byte_end":79081,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":79086,"byte_end":79162,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":79167,"byte_end":79235,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":79240,"byte_end":79274,"line_start":56,"line_end":56,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":336},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":80640,"byte_end":80657,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":338}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":80440,"byte_end":80497,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":80498,"byte_end":80501,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":80502,"byte_end":80569,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":80570,"byte_end":80628,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":80835,"byte_end":80838,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":80752,"byte_end":80823,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":81419,"byte_end":81422,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":81204,"byte_end":81256,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":81261,"byte_end":81264,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":81269,"byte_end":81341,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":81346,"byte_end":81407,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":81865,"byte_end":81872,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":81624,"byte_end":81676,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":81681,"byte_end":81684,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":81689,"byte_end":81762,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":81767,"byte_end":81837,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":81842,"byte_end":81853,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":83712,"byte_end":83719,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":83648,"byte_end":83700,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":84005,"byte_end":84009,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":83950,"byte_end":83993,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":371},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":1380},{"krate":0,"index":1389},{"krate":0,"index":1393},{"krate":0,"index":409},{"krate":0,"index":415},{"krate":0,"index":419},{"krate":0,"index":424},{"krate":0,"index":429},{"krate":0,"index":435}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85122,"byte_end":85157,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1383},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":87104,"byte_end":87108,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1386},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":87117,"byte_end":87122,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":87085,"byte_end":87091,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1383},{"krate":0,"index":1386}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85334,"byte_end":85440,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85441,"byte_end":85444,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85445,"byte_end":85535,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85536,"byte_end":85539,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85540,"byte_end":85575,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85576,"byte_end":85579,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85580,"byte_end":85593,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85594,"byte_end":85597,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85598,"byte_end":85635,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85636,"byte_end":85639,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85640,"byte_end":85659,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85660,"byte_end":85702,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85703,"byte_end":85753,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85754,"byte_end":85805,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85806,"byte_end":85824,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85825,"byte_end":85846,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85847,"byte_end":85889,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85890,"byte_end":85923,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85924,"byte_end":85940,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":85941,"byte_end":86035,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86036,"byte_end":86046,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86047,"byte_end":86050,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86051,"byte_end":86098,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86099,"byte_end":86104,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86105,"byte_end":86112,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86113,"byte_end":86116,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86317,"byte_end":86320,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86321,"byte_end":86407,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86408,"byte_end":86418,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86419,"byte_end":86422,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86423,"byte_end":86430,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86431,"byte_end":86466,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86467,"byte_end":86509,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86510,"byte_end":86560,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86561,"byte_end":86612,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86613,"byte_end":86616,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86617,"byte_end":86635,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86636,"byte_end":86657,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86658,"byte_end":86700,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86701,"byte_end":86748,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86749,"byte_end":86765,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86766,"byte_end":86815,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86816,"byte_end":86826,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86827,"byte_end":86830,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86831,"byte_end":86864,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86865,"byte_end":86905,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86906,"byte_end":86938,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86939,"byte_end":86944,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86945,"byte_end":86952,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":86953,"byte_end":86975,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13826227,"byte_end":13826237,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13826388,"byte_end":13826398,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13826725,"byte_end":13826735,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13835918,"byte_end":13835927,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13836127,"byte_end":13836137,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13836288,"byte_end":13836297,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13836620,"byte_end":13836630,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13836876,"byte_end":13836884,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13836981,"byte_end":13836989,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13837100,"byte_end":13837108,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13837208,"byte_end":13837216,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13837326,"byte_end":13837336,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13839282,"byte_end":13839292,"line_start":164,"line_end":164,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13842128,"byte_end":13842134,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13845656,"byte_end":13845662,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13850977,"byte_end":13850983,"line_start":248,"line_end":248,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13851299,"byte_end":13851305,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852020,"byte_end":13852026,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13853066,"byte_end":13853077,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13854004,"byte_end":13854014,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13854903,"byte_end":13854913,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13857010,"byte_end":13857020,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13857333,"byte_end":13857343,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13858069,"byte_end":13858079,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859058,"byte_end":13859069,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859425,"byte_end":13859436,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13861545,"byte_end":13861556,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13862320,"byte_end":13862331,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13862572,"byte_end":13862583,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877591,"byte_end":13877611,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13880944,"byte_end":13880964,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13881850,"byte_end":13881870,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883211,"byte_end":13883231,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883324,"byte_end":13883331,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892930,"byte_end":13892937,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13893063,"byte_end":13893088,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13893246,"byte_end":13893271,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13893406,"byte_end":13893431,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13894500,"byte_end":13894510,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13897052,"byte_end":13897062,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13900438,"byte_end":13900448,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13900771,"byte_end":13900781,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13901086,"byte_end":13901101,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13901383,"byte_end":13901398,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13901515,"byte_end":13901530,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13903856,"byte_end":13903873,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13906522,"byte_end":13906539,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13909831,"byte_end":13909848,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13910212,"byte_end":13910229,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13910646,"byte_end":13910668,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13910997,"byte_end":13911019,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13911150,"byte_end":13911172,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":77991,"byte_end":78004,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":79694,"byte_end":79707,"line_start":70,"line_end":70,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":79921,"byte_end":79934,"line_start":78,"line_end":78,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":80052,"byte_end":80065,"line_start":84,"line_end":84,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":80725,"byte_end":80742,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":84116,"byte_end":84133,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":84423,"byte_end":84440,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":84658,"byte_end":84675,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":84771,"byte_end":84788,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":84813,"byte_end":84830,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":84974,"byte_end":84991,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":87728,"byte_end":87734,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":87977,"byte_end":87983,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":88256,"byte_end":88262,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":88590,"byte_end":88596,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":88950,"byte_end":88956,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":89508,"byte_end":89514,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","byte_start":698,"byte_end":703,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":489}},{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/mod.rs","byte_start":13824639,"byte_end":13824655,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":933}},{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","byte_start":880,"byte_end":884,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/lib.rs","byte_start":895,"byte_end":901,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":371}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13826227,"byte_end":13826237,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13826388,"byte_end":13826398,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1170},"to":{"krate":0,"index":539}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/bytes_codec.rs","byte_start":13826725,"byte_end":13826735,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1170},"to":{"krate":0,"index":556}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13835918,"byte_end":13835927,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":2818}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13836127,"byte_end":13836137,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":621},"to":{"krate":2,"index":2818}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13836288,"byte_end":13836297,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13836620,"byte_end":13836630,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":621},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13836876,"byte_end":13836884,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":2439}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13836981,"byte_end":13836989,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":2442}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13837100,"byte_end":13837108,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":2439}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13837208,"byte_end":13837216,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":2442}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13837326,"byte_end":13837336,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1529},"to":{"krate":17,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_impl.rs","byte_start":13839282,"byte_end":13839292,"line_start":164,"line_end":164,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1529},"to":{"krate":18,"index":17}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13842128,"byte_end":13842134,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13845656,"byte_end":13845662,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13850977,"byte_end":13850983,"line_start":248,"line_end":248,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1479},"to":{"krate":17,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13851299,"byte_end":13851305,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1479},"to":{"krate":18,"index":17}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13852020,"byte_end":13852026,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1479},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed.rs","byte_start":13853066,"byte_end":13853077,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13854004,"byte_end":13854014,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13854903,"byte_end":13854913,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13857010,"byte_end":13857020,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1438},"to":{"krate":17,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13857333,"byte_end":13857343,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1438},"to":{"krate":18,"index":17}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_read.rs","byte_start":13858069,"byte_end":13858079,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1438},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859058,"byte_end":13859069,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13859425,"byte_end":13859436,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13861545,"byte_end":13861556,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1397},"to":{"krate":18,"index":17}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13862320,"byte_end":13862331,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1397},"to":{"krate":17,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/framed_write.rs","byte_start":13862572,"byte_end":13862583,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1397},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13877591,"byte_end":13877611,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13880944,"byte_end":13880964,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1223},"to":{"krate":0,"index":539}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13881850,"byte_end":13881870,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1223},"to":{"krate":0,"index":556}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883211,"byte_end":13883231,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":2818}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13883324,"byte_end":13883331,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13892930,"byte_end":13892937,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1211},"to":{"krate":2,"index":2818}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13893063,"byte_end":13893088,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":987},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13893246,"byte_end":13893271,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":987},"to":{"krate":2,"index":8902}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/length_delimited.rs","byte_start":13893406,"byte_end":13893431,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":987},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13894500,"byte_end":13894510,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13897052,"byte_end":13897062,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1239},"to":{"krate":0,"index":539}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13900438,"byte_end":13900448,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1239},"to":{"krate":0,"index":556}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13900771,"byte_end":13900781,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1239},"to":{"krate":2,"index":2818}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13901086,"byte_end":13901101,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":8902}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13901383,"byte_end":13901398,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/lines_codec.rs","byte_start":13901515,"byte_end":13901530,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1261},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13903856,"byte_end":13903873,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13906522,"byte_end":13906539,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1269},"to":{"krate":0,"index":539}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13909831,"byte_end":13909848,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1269},"to":{"krate":0,"index":556}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13910212,"byte_end":13910229,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2818}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13910646,"byte_end":13910668,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1293},"to":{"krate":2,"index":8902}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13910997,"byte_end":13911019,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1293},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/codec/any_delimiter_codec.rs","byte_start":13911150,"byte_end":13911172,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1293},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2840}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2852}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2840}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2461}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":3075}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2818}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":3075}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":95},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1356},"to":{"krate":2,"index":3051}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1356},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1372},"to":{"krate":2,"index":2461}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1372},"to":{"krate":18,"index":17}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":77991,"byte_end":78004,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":79694,"byte_end":79707,"line_start":70,"line_end":70,"column_start":17,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":283},"to":{"krate":17,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":79921,"byte_end":79934,"line_start":78,"line_end":78,"column_start":16,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":2461}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/poll_semaphore.rs","byte_start":80052,"byte_end":80065,"line_start":84,"line_end":84,"column_start":21,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":80725,"byte_end":80742,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":84116,"byte_end":84133,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":336},"to":{"krate":2,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":84423,"byte_end":84440,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":336},"to":{"krate":2,"index":2840}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":84658,"byte_end":84675,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":336},"to":{"krate":2,"index":2852}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":84771,"byte_end":84788,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":336},"to":{"krate":2,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":84813,"byte_end":84830,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":336},"to":{"krate":2,"index":3075}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/sync/reusable_box.rs","byte_start":84974,"byte_end":84991,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":336},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":87728,"byte_end":87734,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1380},"to":{"krate":2,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":87977,"byte_end":87983,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1380},"to":{"krate":19,"index":221}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":88256,"byte_end":88262,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1380},"to":{"krate":19,"index":179}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":88590,"byte_end":88596,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1380},"to":{"krate":19,"index":260}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":88950,"byte_end":88956,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1380},"to":{"krate":19,"index":300}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.5/src/either.rs","byte_start":89508,"byte_end":89514,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1380},"to":{"krate":17,"index":96}}]}
{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13","program":"/Users/raunak/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","-C","metadata=3d3ae45c6ca4b045","-C","extra-filename=-3d3ae45c6ca4b045","--out-dir","/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps","-L","dependency=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps","--extern","futures_core=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libfutures_core-61a1d9a5c1636d96.rmeta","--extern","futures_task=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libfutures_task-58cf0f997392b921.rmeta","--extern","pin_project_lite=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libpin_project_lite-f5cded9c988d3f4e.rmeta","--extern","pin_utils=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libpin_utils-dfd9f8c026aed411.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/raunak/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libfutures_util-3d3ae45c6ca4b045.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[10205265084472311685,726344218393000285]},"crate_root":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src","external_crates":[{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[4672134039341031826,9334730820037710618]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7812355786254722365,11069232910465240897]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[3504492067546965715,14807348065712645406]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[10363351663236916098,4373568221634206951]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":5,"id":{"name":"futures_core","disambiguator":[18240488919851695696,7631191881935903789]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":6,"id":{"name":"std","disambiguator":[2014432421693201618,6405737037534390335]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[10398940938279845199,16184156993696304634]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[724492824811583379,8144572066648184623]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[15416939533143646956,6942433971967440675]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":10,"id":{"name":"hashbrown","disambiguator":[16970633403645001861,1360756374950165595]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5199069202728777874,5034187042864704623]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[3933903632706657361,17777720043096733358]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[1064452323391549649,8830000606501382885]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":14,"id":{"name":"addr2line","disambiguator":[3322092396504496203,10665470569546149906]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":15,"id":{"name":"gimli","disambiguator":[15191776587043837065,7596571186965316671]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":16,"id":{"name":"object","disambiguator":[9467777605309881795,12208806100407000479]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[16274892358024576666,2987381920905251631]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","num":18,"id":{"name":"pin_utils","disambiguator":[15344616390240620749,4586777107936892002]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","num":19,"id":{"name":"futures_task","disambiguator":[18158833516831585402,13440795983604480994]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/flatten.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[4648493909412392768,11955802785287157020]}}],"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":0,"byte_end":12340,"line_start":1,"line_end":346,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":5,"index":169},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":1485,"byte_end":1490,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":7},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":1511,"byte_end":1518,"line_start":34,"line_end":34,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":12109},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12809,"byte_end":12815,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":5,"index":21},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12875,"byte_end":12884,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":5,"index":24},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12886,"byte_end":12900,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":5,"index":27},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12934,"byte_end":12945,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":5,"index":44},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12947,"byte_end":12956,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":19,"index":141},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12982,"byte_end":12991,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":19,"index":107},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12993,"byte_end":13007,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":19,"index":162},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13009,"byte_end":13024,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4870},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13139,"byte_end":13146,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4784},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13148,"byte_end":13152,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":240},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13154,"byte_end":13163,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5213},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13165,"byte_end":13172,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5028},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13174,"byte_end":13184,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4968},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13186,"byte_end":13189,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5273},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13191,"byte_end":13201,"line_start":24,"line_end":24,"column_start":57,"column_end":67},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5140},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13203,"byte_end":13207,"line_start":24,"line_end":24,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5321},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13209,"byte_end":13218,"line_start":24,"line_end":24,"column_start":75,"column_end":84},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5078},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13220,"byte_end":13227,"line_start":24,"line_end":24,"column_start":86,"column_end":93},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4918},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13323,"byte_end":13336,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5672},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13666,"byte_end":13673,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5819},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13675,"byte_end":13682,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5880},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13684,"byte_end":13690,"line_start":43,"line_end":43,"column_start":23,"column_end":29},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6002},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13692,"byte_end":13702,"line_start":43,"line_end":43,"column_start":31,"column_end":41},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5941},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13704,"byte_end":13713,"line_start":43,"line_end":43,"column_start":43,"column_end":52},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5372},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13715,"byte_end":13725,"line_start":43,"line_end":43,"column_start":54,"column_end":64},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6124},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13727,"byte_end":13733,"line_start":43,"line_end":43,"column_start":66,"column_end":72},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6063},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13735,"byte_end":13740,"line_start":43,"line_end":43,"column_start":74,"column_end":79},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5746},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13742,"byte_end":13748,"line_start":43,"line_end":43,"column_start":81,"column_end":87},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5621},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13750,"byte_end":13766,"line_start":43,"line_end":43,"column_start":89,"column_end":105},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":507},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13772,"byte_end":13784,"line_start":44,"line_end":44,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6259},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13786,"byte_end":13798,"line_start":44,"line_end":44,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6186},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13800,"byte_end":13811,"line_start":44,"line_end":44,"column_start":33,"column_end":44},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5500},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13813,"byte_end":13823,"line_start":44,"line_end":44,"column_start":46,"column_end":56},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":604},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":13995,"byte_end":13999,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6317},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14001,"byte_end":14005,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":650},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14046,"byte_end":14053,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6323},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14055,"byte_end":14062,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":697},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14109,"byte_end":14119,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6329},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14121,"byte_end":14130,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":749},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14185,"byte_end":14199,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6342},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14201,"byte_end":14213,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6360},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14251,"byte_end":14263,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":828},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14303,"byte_end":14310,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":823},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14312,"byte_end":14318,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":884},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14355,"byte_end":14358,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":881},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14360,"byte_end":14362,"line_start":72,"line_end":72,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":879},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14364,"byte_end":14369,"line_start":72,"line_end":72,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6394},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14371,"byte_end":14376,"line_start":72,"line_end":72,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":935},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14411,"byte_end":14415,"line_start":75,"line_end":75,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":938},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14417,"byte_end":14422,"line_start":75,"line_end":75,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":942},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14424,"byte_end":14429,"line_start":75,"line_end":75,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":947},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14431,"byte_end":14436,"line_start":75,"line_end":75,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6496},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14438,"byte_end":14442,"line_start":75,"line_end":75,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6541},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14444,"byte_end":14449,"line_start":75,"line_end":75,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6598},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14451,"byte_end":14456,"line_start":75,"line_end":75,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6667},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14458,"byte_end":14463,"line_start":75,"line_end":75,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":1024},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14558,"byte_end":14566,"line_start":80,"line_end":80,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":1018},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14568,"byte_end":14575,"line_start":80,"line_end":80,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":1073},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14614,"byte_end":14620,"line_start":83,"line_end":83,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6748},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14622,"byte_end":14628,"line_start":83,"line_end":83,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":1123},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14727,"byte_end":14737,"line_start":88,"line_end":88,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6756},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14739,"byte_end":14748,"line_start":88,"line_end":88,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":1176},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14796,"byte_end":14804,"line_start":92,"line_end":92,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":1179},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14806,"byte_end":14815,"line_start":92,"line_end":92,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":1183},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14817,"byte_end":14826,"line_start":92,"line_end":92,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":1188},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14828,"byte_end":14837,"line_start":92,"line_end":92,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6832},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14839,"byte_end":14846,"line_start":92,"line_end":92,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6877},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14848,"byte_end":14856,"line_start":92,"line_end":92,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6934},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14858,"byte_end":14866,"line_start":92,"line_end":92,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":7003},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14868,"byte_end":14876,"line_start":92,"line_end":92,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":1277},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14981,"byte_end":14993,"line_start":98,"line_end":98,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":1271},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":14995,"byte_end":15005,"line_start":98,"line_end":98,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":15052,"byte_end":15062,"line_start":101,"line_end":101,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":7084},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":15064,"byte_end":15073,"line_start":101,"line_end":101,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":1373},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":15170,"byte_end":15179,"line_start":106,"line_end":106,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":7092},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":15181,"byte_end":15189,"line_start":106,"line_end":106,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":7098},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":15227,"byte_end":15233,"line_start":109,"line_end":109,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":7156},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":15370,"byte_end":15379,"line_start":115,"line_end":115,"column_start":31,"column_end":40},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":11560},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":15381,"byte_end":15390,"line_start":115,"line_end":115,"column_start":42,"column_end":51},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":7186},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":15392,"byte_end":15403,"line_start":115,"line_end":115,"column_start":53,"column_end":64},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":7182},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":15405,"byte_end":15422,"line_start":115,"line_end":115,"column_start":66,"column_end":83},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":7197},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":15424,"byte_end":15431,"line_start":115,"line_end":115,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":7198},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":15424,"byte_end":15431,"line_start":115,"line_end":115,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":240},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":11632,"byte_end":11641,"line_start":312,"line_end":312,"column_start":25,"column_end":34},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":507},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":11643,"byte_end":11655,"line_start":312,"line_end":312,"column_start":36,"column_end":48},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":90},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129766,"byte_end":129775,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":5,"index":93},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129777,"byte_end":129791,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":5,"index":110},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129825,"byte_end":129836,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":5,"index":96},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129838,"byte_end":129844,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":5,"index":127},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129846,"byte_end":129855,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8612},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":137549,"byte_end":137555,"line_start":160,"line_end":160,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1483}},{"kind":"Use","ref_id":{"krate":0,"index":8660},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":137732,"byte_end":137743,"line_start":166,"line_end":166,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1483}},{"kind":"Use","ref_id":{"krate":0,"index":7217},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129971,"byte_end":129976,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":7266},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129978,"byte_end":129985,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":7375},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129987,"byte_end":129993,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":7415},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129995,"byte_end":130000,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":7455},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130002,"byte_end":130011,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":7494},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130013,"byte_end":130019,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":7559},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130021,"byte_end":130030,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8026},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130032,"byte_end":130039,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":7675},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130041,"byte_end":130048,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":7728},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130050,"byte_end":130054,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":7797},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130056,"byte_end":130063,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":7859},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130069,"byte_end":130073,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":7907},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130075,"byte_end":130082,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":7973},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130084,"byte_end":130087,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8105},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130089,"byte_end":130093,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8165},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130095,"byte_end":130099,"line_start":22,"line_end":22,"column_start":31,"column_end":35},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8126},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130101,"byte_end":130109,"line_start":22,"line_end":22,"column_start":37,"column_end":45},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8703},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130111,"byte_end":130115,"line_start":22,"line_end":22,"column_start":47,"column_end":51},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8113},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130117,"byte_end":130131,"line_start":22,"line_end":22,"column_start":53,"column_end":67},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8211},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130133,"byte_end":130137,"line_start":22,"line_end":22,"column_start":69,"column_end":73},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8250},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130139,"byte_end":130148,"line_start":22,"line_end":22,"column_start":75,"column_end":84},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":2889},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130150,"byte_end":130159,"line_start":22,"line_end":22,"column_start":86,"column_end":95},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":7898},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130165,"byte_end":130177,"line_start":23,"line_end":23,"column_start":5,"column_end":17},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8324},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130179,"byte_end":130183,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8432},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130185,"byte_end":130194,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8363},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130196,"byte_end":130205,"line_start":23,"line_end":23,"column_start":36,"column_end":45},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8489},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130207,"byte_end":130211,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":7317},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130213,"byte_end":130218,"line_start":23,"line_end":23,"column_start":53,"column_end":58},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8557},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130220,"byte_end":130223,"line_start":23,"line_end":23,"column_start":60,"column_end":63},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8612},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130337,"byte_end":130343,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8660},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130394,"byte_end":130405,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":11514},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130641,"byte_end":130656,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":11473},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130658,"byte_end":130666,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":11412},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130668,"byte_end":130685,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":3717},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130978,"byte_end":130988,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":8946},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130990,"byte_end":130997,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9010},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":130999,"byte_end":131006,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9148},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131008,"byte_end":131018,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9079},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131020,"byte_end":131029,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9219},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131031,"byte_end":131041,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9326},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131043,"byte_end":131049,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9257},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131051,"byte_end":131056,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9392},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131058,"byte_end":131064,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9695},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131070,"byte_end":131080,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9742},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131082,"byte_end":131091,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9518},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131093,"byte_end":131102,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9583},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131104,"byte_end":131116,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9649},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131118,"byte_end":131128,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9777},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131130,"byte_end":131137,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9461},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131139,"byte_end":131149,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9453},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131151,"byte_end":131158,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9903},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131164,"byte_end":131176,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":3859},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131178,"byte_end":131190,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9972},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131192,"byte_end":131204,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":9846},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131206,"byte_end":131215,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":11373},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131488,"byte_end":131506,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":11329},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131508,"byte_end":131519,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":11263},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131521,"byte_end":131541,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":4004},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131598,"byte_end":131602,"line_start":68,"line_end":68,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":10222},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131604,"byte_end":131608,"line_start":68,"line_end":68,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":4039},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131647,"byte_end":131653,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":10231},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131655,"byte_end":131661,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":4092},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131710,"byte_end":131721,"line_start":74,"line_end":74,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":10240},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131723,"byte_end":131733,"line_start":74,"line_end":74,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":4126},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131770,"byte_end":131775,"line_start":77,"line_end":77,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":10249},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131777,"byte_end":131782,"line_start":77,"line_end":77,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":4178},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131817,"byte_end":131821,"line_start":80,"line_end":80,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":10260},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131823,"byte_end":131827,"line_start":80,"line_end":80,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":4222},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131868,"byte_end":131875,"line_start":83,"line_end":83,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":10291},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131877,"byte_end":131884,"line_start":83,"line_end":83,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":4272},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131925,"byte_end":131932,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":4264},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131934,"byte_end":131940,"line_start":86,"line_end":86,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":4318},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131979,"byte_end":131985,"line_start":89,"line_end":89,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":10304},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":131987,"byte_end":131993,"line_start":89,"line_end":89,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":4383},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":132032,"byte_end":132038,"line_start":92,"line_end":92,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":10350},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":132040,"byte_end":132046,"line_start":92,"line_end":92,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":10473},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":132195,"byte_end":132209,"line_start":98,"line_end":98,"column_start":36,"column_end":50},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":10984},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10325886,"byte_end":10325890,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":10513}},{"kind":"Use","ref_id":{"krate":0,"index":10985},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10325886,"byte_end":10325890,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":10513}},{"kind":"Use","ref_id":{"krate":0,"index":10964},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10325892,"byte_end":10325899,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":10513}},{"kind":"Use","ref_id":{"krate":0,"index":10965},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10325892,"byte_end":10325899,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":10513}},{"kind":"Use","ref_id":{"krate":0,"index":10954},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10325901,"byte_end":10325911,"line_start":25,"line_end":25,"column_start":37,"column_end":47},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":10513}},{"kind":"Use","ref_id":{"krate":0,"index":10973},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10325913,"byte_end":10325923,"line_start":25,"line_end":25,"column_start":49,"column_end":59},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":10513}},{"kind":"Use","ref_id":{"krate":0,"index":10804},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":132359,"byte_end":132375,"line_start":104,"line_end":104,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":10937},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":132489,"byte_end":132499,"line_start":109,"line_end":109,"column_start":32,"column_end":42},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":10915},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":132501,"byte_end":132510,"line_start":109,"line_end":109,"column_start":44,"column_end":53},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1465}},{"kind":"Use","ref_id":{"krate":0,"index":2889},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":11714,"byte_end":11723,"line_start":316,"line_end":316,"column_start":25,"column_end":34},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3859},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":11725,"byte_end":11737,"line_start":316,"line_end":316,"column_start":36,"column_end":48},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":12361},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":344968,"byte_end":344975,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":1,"index":42662},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":344977,"byte_end":344981,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":1,"index":12371},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":344983,"byte_end":344988,"line_start":14,"line_end":14,"column_start":37,"column_end":42},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":1,"index":42698},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":344990,"byte_end":344998,"line_start":14,"line_end":14,"column_start":44,"column_end":52},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":1,"index":42707},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":345000,"byte_end":345014,"line_start":14,"line_end":14,"column_start":54,"column_end":68},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":19,"index":17},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":345046,"byte_end":345051,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":19,"index":20},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":345053,"byte_end":345063,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":19,"index":23},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":345065,"byte_end":345075,"line_start":17,"line_end":17,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":19,"index":141},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":345081,"byte_end":345090,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":19,"index":107},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":345092,"byte_end":345106,"line_start":18,"line_end":18,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":19,"index":162},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":345108,"byte_end":345123,"line_start":18,"line_end":18,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":19,"index":282},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":345151,"byte_end":345161,"line_start":21,"line_end":21,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":19,"index":327},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":345307,"byte_end":345314,"line_start":27,"line_end":27,"column_start":27,"column_end":34},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":19,"index":355},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":345373,"byte_end":345378,"line_start":30,"line_end":30,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":19,"index":404},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":345438,"byte_end":345447,"line_start":33,"line_end":33,"column_start":28,"column_end":37},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":19,"index":413},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":345449,"byte_end":345457,"line_start":33,"line_end":33,"column_start":39,"column_end":47},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":5,"index":194},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":345505,"byte_end":345516,"line_start":35,"line_end":35,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":0,"index":4490},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":345554,"byte_end":345562,"line_start":39,"line_end":39,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":0,"index":4493},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":345564,"byte_end":345577,"line_start":39,"line_end":39,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":4423}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":0,"byte_end":12340,"line_start":1,"line_end":346,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":16},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1462},{"krate":0,"index":1465},{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4420},{"krate":0,"index":4423},{"krate":0,"index":4503},{"krate":0,"index":4505},{"krate":0,"index":4506},{"krate":0,"index":4720}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"no_std","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":384,"byte_end":390,"line_start":7,"line_end":7,"column_start":35,"column_end":41}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":393,"byte_end":499,"line_start":8,"line_end":13,"column_start":1,"column_end":3}},{"value":"warn(clippy :: all)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":667,"byte_end":688,"line_start":16,"line_end":16,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1089},{"krate":0,"index":1092},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1138},{"krate":0,"index":1141},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1204},{"krate":0,"index":1207},{"krate":0,"index":1210},{"krate":0,"index":1213},{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1292},{"krate":0,"index":1295},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":1452},{"krate":0,"index":7115},{"krate":0,"index":7166},{"krate":0,"index":7167},{"krate":0,"index":7170},{"krate":0,"index":7173},{"krate":0,"index":7176},{"krate":0,"index":7179},{"krate":0,"index":7180},{"krate":0,"index":1455}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12342,"byte_end":12366,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12367,"byte_end":12370,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12371,"byte_end":12396,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12397,"byte_end":12400,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12401,"byte_end":12428,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12429,"byte_end":12508,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12509,"byte_end":12546,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12547,"byte_end":12626,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12627,"byte_end":12702,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/mod.rs","byte_start":12703,"byte_end":12767,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":4739},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/flatten.rs","byte_start":35957,"byte_end":35962,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":4736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4741},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/flatten.rs","byte_start":35991,"byte_end":35997,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":4736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4743},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/flatten.rs","byte_start":36026,"byte_end":36031,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":4736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4736},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/flatten.rs","byte_start":35927,"byte_end":35934,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4739},{"krate":0,"index":4741},{"krate":0,"index":4743}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4784},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":40466,"byte_end":40470,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":4786}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":42289,"byte_end":42299,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":40667,"byte_end":40735,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":40740,"byte_end":40743,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":40748,"byte_end":40816,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":40821,"byte_end":40866,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":40871,"byte_end":40874,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":40879,"byte_end":40893,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":40898,"byte_end":40901,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":40906,"byte_end":40913,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":40918,"byte_end":40959,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":40964,"byte_end":40995,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41000,"byte_end":41056,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41061,"byte_end":41085,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41090,"byte_end":41125,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41130,"byte_end":41155,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41160,"byte_end":41163,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41168,"byte_end":41217,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41222,"byte_end":41225,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41230,"byte_end":41272,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41277,"byte_end":41316,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41321,"byte_end":41360,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41365,"byte_end":41382,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41387,"byte_end":41390,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41395,"byte_end":41465,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41470,"byte_end":41509,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41514,"byte_end":41555,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41560,"byte_end":41586,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41591,"byte_end":41594,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41599,"byte_end":41609,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41614,"byte_end":41631,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41636,"byte_end":41670,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41675,"byte_end":41722,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41727,"byte_end":41776,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41781,"byte_end":41843,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41848,"byte_end":41872,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41877,"byte_end":41920,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41925,"byte_end":41982,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":41987,"byte_end":42062,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":42067,"byte_end":42097,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":42102,"byte_end":42119,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":42124,"byte_end":42138,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":42143,"byte_end":42227,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":42232,"byte_end":42241,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":42246,"byte_end":42251,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":42256,"byte_end":42265,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":42270,"byte_end":42277,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":4822},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/map.rs","byte_start":43358,"byte_end":43368,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":4819},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4825},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/map.rs","byte_start":43452,"byte_end":43460,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":4819},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4819},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/map.rs","byte_start":43336,"byte_end":43339,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":4822},{"krate":0,"index":4825}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10253694,"byte_end":10253703,"line_start":542,"line_end":542,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4870},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":16383,"byte_end":16390,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":4872}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4918},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":16641,"byte_end":16654,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":4920}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4968},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":16994,"byte_end":16997,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":4971}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5028},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":17204,"byte_end":17214,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":5030}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5078},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":17420,"byte_end":17427,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":5081}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5140},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":17620,"byte_end":17624,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":5144}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5213},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":17869,"byte_end":17876,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5216}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5273},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":18117,"byte_end":18127,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":5275}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5321},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":18340,"byte_end":18349,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":5323}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":240},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19331,"byte_end":19340,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19232,"byte_end":19306,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19307,"byte_end":19320,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20172,"byte_end":20175,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19355,"byte_end":19430,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19435,"byte_end":19458,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19463,"byte_end":19466,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19471,"byte_end":19545,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19550,"byte_end":19621,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19626,"byte_end":19688,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19693,"byte_end":19696,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19701,"byte_end":19772,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19777,"byte_end":19848,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19853,"byte_end":19874,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19879,"byte_end":19882,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19887,"byte_end":19901,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19906,"byte_end":19909,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19914,"byte_end":19921,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19926,"byte_end":19967,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19972,"byte_end":20007,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20012,"byte_end":20015,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20020,"byte_end":20049,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20054,"byte_end":20097,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20102,"byte_end":20138,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20143,"byte_end":20152,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20157,"byte_end":20164,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20572,"byte_end":20580,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20345,"byte_end":20420,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20425,"byte_end":20448,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20453,"byte_end":20456,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20461,"byte_end":20539,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20544,"byte_end":20564,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21592,"byte_end":21596,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20739,"byte_end":20815,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20820,"byte_end":20863,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20868,"byte_end":20871,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20876,"byte_end":20947,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":20952,"byte_end":21026,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21031,"byte_end":21047,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21052,"byte_end":21055,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21060,"byte_end":21135,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21140,"byte_end":21151,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21156,"byte_end":21159,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21164,"byte_end":21235,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21240,"byte_end":21266,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21271,"byte_end":21274,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21279,"byte_end":21293,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21298,"byte_end":21301,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21306,"byte_end":21313,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21318,"byte_end":21359,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21364,"byte_end":21399,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21404,"byte_end":21407,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21412,"byte_end":21446,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21451,"byte_end":21516,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21521,"byte_end":21558,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21563,"byte_end":21572,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21577,"byte_end":21584,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22466,"byte_end":22477,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21808,"byte_end":21883,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21888,"byte_end":21909,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21914,"byte_end":21917,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":21922,"byte_end":22002,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22007,"byte_end":22079,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22084,"byte_end":22087,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22092,"byte_end":22106,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22111,"byte_end":22114,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22119,"byte_end":22126,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22131,"byte_end":22172,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22177,"byte_end":22212,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22217,"byte_end":22220,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22225,"byte_end":22239,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22244,"byte_end":22272,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22277,"byte_end":22313,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22318,"byte_end":22330,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22335,"byte_end":22373,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22378,"byte_end":22384,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22389,"byte_end":22392,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22397,"byte_end":22432,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22437,"byte_end":22446,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22451,"byte_end":22458,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23316,"byte_end":23328,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22657,"byte_end":22733,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22738,"byte_end":22759,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22764,"byte_end":22767,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22772,"byte_end":22851,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22856,"byte_end":22928,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22933,"byte_end":22936,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22941,"byte_end":22955,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22960,"byte_end":22963,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22968,"byte_end":22975,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":22980,"byte_end":23021,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23026,"byte_end":23061,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23066,"byte_end":23069,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23074,"byte_end":23088,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23093,"byte_end":23121,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23126,"byte_end":23162,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23167,"byte_end":23179,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23184,"byte_end":23222,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23227,"byte_end":23233,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23238,"byte_end":23241,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23246,"byte_end":23282,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23287,"byte_end":23296,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23301,"byte_end":23308,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24107,"byte_end":24118,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23509,"byte_end":23562,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23567,"byte_end":23570,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23575,"byte_end":23649,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23654,"byte_end":23717,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23722,"byte_end":23725,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23730,"byte_end":23744,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23749,"byte_end":23752,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23757,"byte_end":23764,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23769,"byte_end":23810,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23815,"byte_end":23850,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23855,"byte_end":23890,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23895,"byte_end":23898,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23903,"byte_end":23933,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23938,"byte_end":23976,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":23981,"byte_end":24032,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24037,"byte_end":24073,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24078,"byte_end":24087,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24092,"byte_end":24099,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24983,"byte_end":24990,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24257,"byte_end":24321,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24326,"byte_end":24362,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24367,"byte_end":24370,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24375,"byte_end":24444,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24449,"byte_end":24486,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24491,"byte_end":24494,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24499,"byte_end":24559,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24564,"byte_end":24567,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24572,"byte_end":24643,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24648,"byte_end":24674,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24679,"byte_end":24682,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24687,"byte_end":24701,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24706,"byte_end":24709,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24714,"byte_end":24721,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24726,"byte_end":24767,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24772,"byte_end":24807,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24812,"byte_end":24815,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24820,"byte_end":24866,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24871,"byte_end":24912,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24917,"byte_end":24949,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24954,"byte_end":24963,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":24968,"byte_end":24975,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26095,"byte_end":26109,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25204,"byte_end":25279,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25284,"byte_end":25307,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25312,"byte_end":25315,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25320,"byte_end":25392,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25397,"byte_end":25470,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25475,"byte_end":25489,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25494,"byte_end":25497,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25502,"byte_end":25572,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25577,"byte_end":25595,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25600,"byte_end":25603,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25608,"byte_end":25622,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25627,"byte_end":25630,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25635,"byte_end":25642,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25647,"byte_end":25688,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25693,"byte_end":25728,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25733,"byte_end":25776,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25781,"byte_end":25784,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25789,"byte_end":25829,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25834,"byte_end":25900,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25905,"byte_end":25908,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25913,"byte_end":25966,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":25971,"byte_end":26017,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26022,"byte_end":26061,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26066,"byte_end":26075,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26080,"byte_end":26087,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27197,"byte_end":27201,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26302,"byte_end":26375,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26380,"byte_end":26446,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26451,"byte_end":26469,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26474,"byte_end":26477,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26482,"byte_end":26549,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26554,"byte_end":26619,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26624,"byte_end":26696,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26701,"byte_end":26775,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26780,"byte_end":26806,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26811,"byte_end":26814,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26819,"byte_end":26890,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26895,"byte_end":26970,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":26975,"byte_end":27029,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27034,"byte_end":27037,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27042,"byte_end":27116,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27121,"byte_end":27189,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":28041,"byte_end":28048,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27347,"byte_end":27413,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27418,"byte_end":27421,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27426,"byte_end":27501,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27506,"byte_end":27579,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27584,"byte_end":27653,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27658,"byte_end":27708,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27713,"byte_end":27716,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27721,"byte_end":27735,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27740,"byte_end":27743,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27748,"byte_end":27755,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27760,"byte_end":27801,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27806,"byte_end":27841,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27846,"byte_end":27849,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27854,"byte_end":27883,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27888,"byte_end":27966,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":27971,"byte_end":28007,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":28012,"byte_end":28021,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":28026,"byte_end":28033,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":32518,"byte_end":32523,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":32289,"byte_end":32330,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":32335,"byte_end":32338,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":32343,"byte_end":32418,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":32423,"byte_end":32480,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":32485,"byte_end":32510,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":32983,"byte_end":32994,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":32682,"byte_end":32723,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":32728,"byte_end":32731,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":32736,"byte_end":32795,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":32800,"byte_end":32803,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":32808,"byte_end":32883,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":32888,"byte_end":32945,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":32950,"byte_end":32975,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":33284,"byte_end":33294,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":33151,"byte_end":33200,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":33205,"byte_end":33276,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":33579,"byte_end":33590,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":33443,"byte_end":33492,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":33497,"byte_end":33571,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":33821,"byte_end":33831,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":33744,"byte_end":33813,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":35227,"byte_end":35239,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":33967,"byte_end":34039,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34044,"byte_end":34107,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34112,"byte_end":34115,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34120,"byte_end":34186,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34191,"byte_end":34194,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34199,"byte_end":34272,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34277,"byte_end":34346,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34351,"byte_end":34421,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34426,"byte_end":34429,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34434,"byte_end":34448,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34453,"byte_end":34456,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34461,"byte_end":34468,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34473,"byte_end":34503,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34508,"byte_end":34558,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34563,"byte_end":34602,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34607,"byte_end":34658,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34663,"byte_end":34666,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34671,"byte_end":34731,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34736,"byte_end":34788,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34793,"byte_end":34800,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34805,"byte_end":34808,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34813,"byte_end":34882,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34887,"byte_end":34960,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":34965,"byte_end":34997,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":35002,"byte_end":35005,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":35010,"byte_end":35017,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":35022,"byte_end":35069,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":35074,"byte_end":35113,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":35118,"byte_end":35121,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":35126,"byte_end":35207,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":35212,"byte_end":35219,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5372},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/into_future.rs","byte_start":66658,"byte_end":66668,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":5374}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":5410},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten.rs","byte_start":67653,"byte_end":67658,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":5407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5412},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten.rs","byte_start":67687,"byte_end":67693,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":5407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5414},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten.rs","byte_start":67722,"byte_end":67727,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":5407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5407},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten.rs","byte_start":67620,"byte_end":67630,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":5410},{"krate":0,"index":5412},{"krate":0,"index":5414}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5457},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten_err.rs","byte_start":72852,"byte_end":72857,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":5454},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5459},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten_err.rs","byte_start":72886,"byte_end":72892,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":5454},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5461},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten_err.rs","byte_start":72921,"byte_end":72926,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":5454},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5454},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten_err.rs","byte_start":72816,"byte_end":72829,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":5457},{"krate":0,"index":5459},{"krate":0,"index":5461}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5500},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":45493,"byte_end":45503,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":5503}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5561},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":45751,"byte_end":45764,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":5564}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5621},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":46032,"byte_end":46048,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":5623}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5672},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":46636,"byte_end":46643,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":5676}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5746},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":46883,"byte_end":46889,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":5750}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5819},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":47139,"byte_end":47146,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":5822}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5880},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":47354,"byte_end":47360,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":5883}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5941},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":47579,"byte_end":47588,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":5944}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6002},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":47860,"byte_end":47870,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":6005}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6063},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":48243,"byte_end":48248,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":6066}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6124},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":48489,"byte_end":48495,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":6127}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6186},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":48752,"byte_end":48763,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":6190}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6259},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":49047,"byte_end":49059,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":6262}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":507},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":49349,"byte_end":49361,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":537}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":49285,"byte_end":49338,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":52121,"byte_end":52127,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":50749,"byte_end":50807,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":50812,"byte_end":50815,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":50820,"byte_end":50895,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":50900,"byte_end":50970,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":50975,"byte_end":51048,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51053,"byte_end":51082,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51087,"byte_end":51090,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51095,"byte_end":51170,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51175,"byte_end":51250,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51255,"byte_end":51302,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51307,"byte_end":51310,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51315,"byte_end":51390,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51395,"byte_end":51421,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51426,"byte_end":51429,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51434,"byte_end":51448,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51453,"byte_end":51456,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51461,"byte_end":51468,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51473,"byte_end":51511,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51516,"byte_end":51519,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51524,"byte_end":51565,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51570,"byte_end":51615,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51620,"byte_end":51662,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51667,"byte_end":51703,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51708,"byte_end":51717,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51722,"byte_end":51729,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51734,"byte_end":51737,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51742,"byte_end":51814,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51819,"byte_end":51830,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51835,"byte_end":51838,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51843,"byte_end":51850,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51855,"byte_end":51893,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51898,"byte_end":51901,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51906,"byte_end":51947,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":51952,"byte_end":51998,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":52003,"byte_end":52045,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":52050,"byte_end":52087,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":52092,"byte_end":52101,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":52106,"byte_end":52113,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53686,"byte_end":53700,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":52318,"byte_end":52435,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":52440,"byte_end":52443,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":52448,"byte_end":52570,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":52575,"byte_end":52625,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":52630,"byte_end":52633,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":52638,"byte_end":52713,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":52718,"byte_end":52793,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":52798,"byte_end":52845,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":52850,"byte_end":52853,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":52858,"byte_end":52933,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":52938,"byte_end":53013,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53018,"byte_end":53065,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53070,"byte_end":53073,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53078,"byte_end":53153,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53158,"byte_end":53184,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53189,"byte_end":53192,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53197,"byte_end":53211,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53216,"byte_end":53219,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53224,"byte_end":53231,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53236,"byte_end":53274,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53279,"byte_end":53282,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53287,"byte_end":53328,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53333,"byte_end":53378,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53383,"byte_end":53444,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53449,"byte_end":53481,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53486,"byte_end":53489,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53494,"byte_end":53540,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53545,"byte_end":53606,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53611,"byte_end":53644,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53649,"byte_end":53658,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53663,"byte_end":53670,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53675,"byte_end":53678,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55383,"byte_end":55390,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53934,"byte_end":53990,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":53995,"byte_end":53998,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54003,"byte_end":54077,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54082,"byte_end":54143,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54148,"byte_end":54218,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54223,"byte_end":54298,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54303,"byte_end":54338,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54343,"byte_end":54346,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54351,"byte_end":54426,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54431,"byte_end":54506,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54511,"byte_end":54558,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54563,"byte_end":54566,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54571,"byte_end":54646,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54651,"byte_end":54677,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54682,"byte_end":54685,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54690,"byte_end":54704,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54709,"byte_end":54712,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54717,"byte_end":54724,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54729,"byte_end":54767,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54772,"byte_end":54775,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54780,"byte_end":54821,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54826,"byte_end":54872,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54877,"byte_end":54920,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54925,"byte_end":54962,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54967,"byte_end":54976,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54981,"byte_end":54988,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":54993,"byte_end":54996,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55001,"byte_end":55074,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55079,"byte_end":55093,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55098,"byte_end":55101,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55106,"byte_end":55113,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55118,"byte_end":55156,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55161,"byte_end":55164,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55169,"byte_end":55210,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55215,"byte_end":55260,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55265,"byte_end":55308,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55313,"byte_end":55349,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55354,"byte_end":55363,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55368,"byte_end":55375,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56480,"byte_end":56488,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55583,"byte_end":55653,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55658,"byte_end":55707,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55712,"byte_end":55715,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55720,"byte_end":55783,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55788,"byte_end":55856,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55861,"byte_end":55934,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":55939,"byte_end":56015,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56020,"byte_end":56065,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56070,"byte_end":56073,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56078,"byte_end":56153,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56158,"byte_end":56184,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56189,"byte_end":56192,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56197,"byte_end":56211,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56216,"byte_end":56219,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56224,"byte_end":56231,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56236,"byte_end":56274,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56279,"byte_end":56282,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56287,"byte_end":56328,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56333,"byte_end":56384,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56389,"byte_end":56446,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56451,"byte_end":56460,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56465,"byte_end":56472,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56784,"byte_end":56791,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56664,"byte_end":56722,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56727,"byte_end":56776,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58346,"byte_end":58354,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":56965,"byte_end":57034,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57039,"byte_end":57113,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57118,"byte_end":57121,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57126,"byte_end":57201,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57206,"byte_end":57276,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57281,"byte_end":57346,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57351,"byte_end":57417,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57422,"byte_end":57456,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57461,"byte_end":57464,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57469,"byte_end":57544,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57549,"byte_end":57575,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57580,"byte_end":57583,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57588,"byte_end":57602,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57607,"byte_end":57610,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57615,"byte_end":57622,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57627,"byte_end":57665,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57670,"byte_end":57673,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57678,"byte_end":57719,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57724,"byte_end":57769,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57774,"byte_end":57849,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57854,"byte_end":57890,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57895,"byte_end":57904,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57909,"byte_end":57916,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57921,"byte_end":57924,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":57929,"byte_end":58005,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58010,"byte_end":58021,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58026,"byte_end":58029,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58034,"byte_end":58041,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58046,"byte_end":58084,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58089,"byte_end":58092,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58097,"byte_end":58138,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58143,"byte_end":58189,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58194,"byte_end":58270,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58275,"byte_end":58312,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58317,"byte_end":58326,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58331,"byte_end":58338,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59975,"byte_end":59982,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58608,"byte_end":58673,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58678,"byte_end":58750,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58755,"byte_end":58758,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58763,"byte_end":58838,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58843,"byte_end":58913,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58918,"byte_end":58983,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":58988,"byte_end":59064,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59069,"byte_end":59087,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59092,"byte_end":59095,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59100,"byte_end":59175,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59180,"byte_end":59206,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59211,"byte_end":59214,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59219,"byte_end":59233,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59238,"byte_end":59241,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59246,"byte_end":59253,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59258,"byte_end":59296,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59301,"byte_end":59304,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59309,"byte_end":59350,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59355,"byte_end":59401,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59406,"byte_end":59481,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59486,"byte_end":59523,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59528,"byte_end":59537,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59542,"byte_end":59549,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59554,"byte_end":59557,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59562,"byte_end":59635,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59640,"byte_end":59654,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59659,"byte_end":59662,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59667,"byte_end":59674,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59679,"byte_end":59717,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59722,"byte_end":59725,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59730,"byte_end":59771,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59776,"byte_end":59821,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59826,"byte_end":59900,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59905,"byte_end":59941,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59946,"byte_end":59955,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":59960,"byte_end":59967,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60958,"byte_end":60968,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60231,"byte_end":60304,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60309,"byte_end":60312,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60317,"byte_end":60392,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60397,"byte_end":60470,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60475,"byte_end":60544,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60549,"byte_end":60602,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60607,"byte_end":60610,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60615,"byte_end":60629,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60634,"byte_end":60637,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60642,"byte_end":60649,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60654,"byte_end":60695,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60700,"byte_end":60738,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60743,"byte_end":60746,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60751,"byte_end":60793,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60798,"byte_end":60879,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60884,"byte_end":60924,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60929,"byte_end":60938,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":60943,"byte_end":60950,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61894,"byte_end":61905,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61167,"byte_end":61238,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61243,"byte_end":61246,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61251,"byte_end":61326,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61331,"byte_end":61404,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61409,"byte_end":61478,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61483,"byte_end":61537,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61542,"byte_end":61545,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61550,"byte_end":61564,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61569,"byte_end":61572,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61577,"byte_end":61584,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61589,"byte_end":61630,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61635,"byte_end":61673,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61678,"byte_end":61681,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61686,"byte_end":61729,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61734,"byte_end":61814,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61819,"byte_end":61860,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61865,"byte_end":61874,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":61879,"byte_end":61886,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62290,"byte_end":62301,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62109,"byte_end":62184,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62189,"byte_end":62218,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62223,"byte_end":62226,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62231,"byte_end":62282,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63480,"byte_end":63498,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62536,"byte_end":62611,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62616,"byte_end":62639,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62644,"byte_end":62647,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62652,"byte_end":62724,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62729,"byte_end":62802,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62807,"byte_end":62821,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62826,"byte_end":62829,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62834,"byte_end":62904,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62909,"byte_end":62927,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62932,"byte_end":62935,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62940,"byte_end":62954,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62959,"byte_end":62962,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62967,"byte_end":62974,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":62979,"byte_end":63020,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63025,"byte_end":63063,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63068,"byte_end":63114,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63119,"byte_end":63122,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63127,"byte_end":63187,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63192,"byte_end":63271,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63276,"byte_end":63279,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63284,"byte_end":63341,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63346,"byte_end":63398,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63403,"byte_end":63446,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63451,"byte_end":63460,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63465,"byte_end":63472,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64589,"byte_end":64603,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63758,"byte_end":63829,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63834,"byte_end":63871,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63876,"byte_end":63925,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63930,"byte_end":63933,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":63938,"byte_end":64007,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64012,"byte_end":64085,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64090,"byte_end":64160,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64165,"byte_end":64183,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64188,"byte_end":64191,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64196,"byte_end":64264,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64269,"byte_end":64272,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64277,"byte_end":64291,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64296,"byte_end":64299,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64304,"byte_end":64311,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64316,"byte_end":64354,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64359,"byte_end":64362,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64367,"byte_end":64408,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64413,"byte_end":64465,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64470,"byte_end":64517,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64522,"byte_end":64555,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64560,"byte_end":64569,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":64574,"byte_end":64581,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65858,"byte_end":65869,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65157,"byte_end":65210,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65215,"byte_end":65251,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65256,"byte_end":65259,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65264,"byte_end":65313,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65318,"byte_end":65385,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65390,"byte_end":65403,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65408,"byte_end":65411,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65416,"byte_end":65430,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65435,"byte_end":65438,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65443,"byte_end":65450,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65455,"byte_end":65514,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65519,"byte_end":65522,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65527,"byte_end":65546,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65551,"byte_end":65569,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65574,"byte_end":65646,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65651,"byte_end":65683,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65688,"byte_end":65695,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65700,"byte_end":65776,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65781,"byte_end":65784,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65789,"byte_end":65838,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":65843,"byte_end":65850,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":66128,"byte_end":66142,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":66025,"byte_end":66098,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":66103,"byte_end":66120,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":6317},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":74651,"byte_end":74655,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":6319}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":74517,"byte_end":74554,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":74572,"byte_end":74639,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":604},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":75196,"byte_end":75200,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":74759,"byte_end":74827,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":74828,"byte_end":74831,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":74832,"byte_end":74895,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":74896,"byte_end":74899,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":74900,"byte_end":74914,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":74915,"byte_end":74918,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":74919,"byte_end":74926,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":74927,"byte_end":74968,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":74969,"byte_end":74993,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":74994,"byte_end":74997,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":74998,"byte_end":75030,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":75031,"byte_end":75058,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":75059,"byte_end":75062,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":75063,"byte_end":75100,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":75101,"byte_end":75125,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":75126,"byte_end":75133,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":75134,"byte_end":75170,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":75171,"byte_end":75180,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":75181,"byte_end":75188,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6323},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76015,"byte_end":76022,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":6325}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":75876,"byte_end":75918,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":75936,"byte_end":76003,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":650},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76541,"byte_end":76548,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76163,"byte_end":76243,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76244,"byte_end":76257,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76258,"byte_end":76261,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76262,"byte_end":76324,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76325,"byte_end":76328,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76329,"byte_end":76343,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76344,"byte_end":76347,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76348,"byte_end":76361,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76362,"byte_end":76403,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76404,"byte_end":76428,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76429,"byte_end":76432,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76433,"byte_end":76468,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76469,"byte_end":76495,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76496,"byte_end":76515,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76516,"byte_end":76525,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76526,"byte_end":76533,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6331},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77334,"byte_end":77340,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":6329},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77299,"byte_end":77329,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6334},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77407,"byte_end":77411,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":6329},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77364,"byte_end":77402,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6337},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77573,"byte_end":77577,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":6329},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77430,"byte_end":77496,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77501,"byte_end":77568,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":6329},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77270,"byte_end":77279,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":6331},{"krate":0,"index":6334},{"krate":0,"index":6337}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77148,"byte_end":77185,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77186,"byte_end":77189,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77190,"byte_end":77243,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":697},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":78098,"byte_end":78108,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77637,"byte_end":77674,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77675,"byte_end":77678,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77679,"byte_end":77693,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77694,"byte_end":77697,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77698,"byte_end":77705,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77706,"byte_end":77747,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77748,"byte_end":77772,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77773,"byte_end":77798,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77799,"byte_end":77802,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77803,"byte_end":77852,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77853,"byte_end":77874,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77875,"byte_end":77927,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77928,"byte_end":77963,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77964,"byte_end":78019,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":78020,"byte_end":78072,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":78073,"byte_end":78082,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":78083,"byte_end":78090,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":78549,"byte_end":78559,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":78251,"byte_end":78336,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":78341,"byte_end":78412,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":78417,"byte_end":78490,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":78495,"byte_end":78523,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":78528,"byte_end":78537,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":78907,"byte_end":78918,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":78787,"byte_end":78853,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":78858,"byte_end":78881,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":78886,"byte_end":78895,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6344},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":80543,"byte_end":80549,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":6342},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":80508,"byte_end":80538,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6347},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":80616,"byte_end":80620,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":6342},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":80573,"byte_end":80611,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6350},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":80828,"byte_end":80832,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":6342},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":80635,"byte_end":80704,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":80709,"byte_end":80779,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":80784,"byte_end":80823,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":6342},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":80473,"byte_end":80485,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> { Future(Fut), Done(Fut::Ok), Gone, }","parent":null,"children":[{"krate":0,"index":6344},{"krate":0,"index":6347},{"krate":0,"index":6350}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":80333,"byte_end":80384,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":80385,"byte_end":80388,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":80389,"byte_end":80446,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":749},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":80946,"byte_end":80960,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":80898,"byte_end":80938,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":81447,"byte_end":81457,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":81138,"byte_end":81223,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":81228,"byte_end":81299,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":81304,"byte_end":81388,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":81393,"byte_end":81421,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":81426,"byte_end":81435,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":81807,"byte_end":81818,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":81684,"byte_end":81753,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":81758,"byte_end":81781,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":81786,"byte_end":81795,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6360},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/option.rs","byte_start":84094,"byte_end":84106,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":6362}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":823},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85144,"byte_end":85150,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":825}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85024,"byte_end":85064,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85065,"byte_end":85132,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":828},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85737,"byte_end":85744,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85201,"byte_end":85272,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85273,"byte_end":85276,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85277,"byte_end":85343,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85344,"byte_end":85347,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85348,"byte_end":85362,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85363,"byte_end":85366,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85367,"byte_end":85374,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85375,"byte_end":85416,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85417,"byte_end":85450,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85451,"byte_end":85490,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85491,"byte_end":85494,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85495,"byte_end":85552,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85553,"byte_end":85596,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85597,"byte_end":85602,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85603,"byte_end":85606,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85607,"byte_end":85648,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85649,"byte_end":85711,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85712,"byte_end":85721,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85722,"byte_end":85729,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6394},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":86513,"byte_end":86518,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":86362,"byte_end":86409,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":86434,"byte_end":86501,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":86641,"byte_end":86651,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":86558,"byte_end":86615,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":86620,"byte_end":86629,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":879},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87317,"byte_end":87322,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87071,"byte_end":87131,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87132,"byte_end":87135,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87136,"byte_end":87150,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87151,"byte_end":87154,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87155,"byte_end":87162,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87163,"byte_end":87204,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87205,"byte_end":87229,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87230,"byte_end":87233,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87234,"byte_end":87263,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87264,"byte_end":87291,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87292,"byte_end":87301,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87302,"byte_end":87309,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":881},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87657,"byte_end":87659,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87391,"byte_end":87458,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87459,"byte_end":87462,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87463,"byte_end":87477,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87478,"byte_end":87481,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87482,"byte_end":87489,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87490,"byte_end":87531,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87532,"byte_end":87556,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87557,"byte_end":87560,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87561,"byte_end":87599,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87600,"byte_end":87631,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87632,"byte_end":87641,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87642,"byte_end":87649,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":884},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87990,"byte_end":87993,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87723,"byte_end":87789,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87790,"byte_end":87793,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87794,"byte_end":87808,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87809,"byte_end":87812,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87813,"byte_end":87820,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87821,"byte_end":87862,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87863,"byte_end":87887,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87888,"byte_end":87891,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87892,"byte_end":87931,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87932,"byte_end":87964,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87965,"byte_end":87974,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":87975,"byte_end":87982,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6496},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90279,"byte_end":90283,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":6499},{"krate":0,"index":6500}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6541},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90349,"byte_end":90354,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":6545},{"krate":0,"index":6546},{"krate":0,"index":6547}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6598},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90426,"byte_end":90431,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":6603},{"krate":0,"index":6604},{"krate":0,"index":6605},{"krate":0,"index":6606}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6667},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90509,"byte_end":90514,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":6673},{"krate":0,"index":6674},{"krate":0,"index":6675},{"krate":0,"index":6676},{"krate":0,"index":6677}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":935},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91129,"byte_end":91133,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90552,"byte_end":90623,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90624,"byte_end":90627,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90628,"byte_end":90699,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90700,"byte_end":90775,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90776,"byte_end":90779,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90780,"byte_end":90849,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90850,"byte_end":90876,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90877,"byte_end":90880,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90881,"byte_end":90895,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90896,"byte_end":90899,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90900,"byte_end":90907,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90908,"byte_end":90949,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90950,"byte_end":90974,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90975,"byte_end":90978,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":90979,"byte_end":91003,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91004,"byte_end":91028,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91029,"byte_end":91063,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91064,"byte_end":91067,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91068,"byte_end":91103,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91104,"byte_end":91113,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91114,"byte_end":91121,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":938},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91679,"byte_end":91684,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91340,"byte_end":91392,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91393,"byte_end":91396,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91397,"byte_end":91411,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91412,"byte_end":91415,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91416,"byte_end":91423,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91424,"byte_end":91465,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91466,"byte_end":91490,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91491,"byte_end":91494,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91495,"byte_end":91519,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91520,"byte_end":91544,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91545,"byte_end":91569,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91570,"byte_end":91609,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91610,"byte_end":91613,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91614,"byte_end":91653,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91654,"byte_end":91663,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91664,"byte_end":91671,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":942},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92346,"byte_end":92351,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":91976,"byte_end":92028,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92029,"byte_end":92032,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92033,"byte_end":92047,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92048,"byte_end":92051,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92052,"byte_end":92059,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92060,"byte_end":92101,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92102,"byte_end":92126,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92127,"byte_end":92130,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92131,"byte_end":92155,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92156,"byte_end":92180,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92181,"byte_end":92205,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92206,"byte_end":92230,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92231,"byte_end":92273,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92274,"byte_end":92277,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92278,"byte_end":92320,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92321,"byte_end":92330,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92331,"byte_end":92338,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":947},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":93116,"byte_end":93121,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92715,"byte_end":92767,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92768,"byte_end":92771,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92772,"byte_end":92786,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92787,"byte_end":92790,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92791,"byte_end":92798,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92799,"byte_end":92840,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92841,"byte_end":92865,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92866,"byte_end":92869,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92870,"byte_end":92894,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92895,"byte_end":92919,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92920,"byte_end":92944,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92945,"byte_end":92969,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92970,"byte_end":92994,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":92995,"byte_end":93040,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":93041,"byte_end":93044,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":93045,"byte_end":93090,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":93091,"byte_end":93100,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join.rs","byte_start":93101,"byte_end":93108,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1018},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":94500,"byte_end":94507,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1020}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":94379,"byte_end":94420,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":94421,"byte_end":94488,"line_start":25,"line_end":25,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":96147,"byte_end":96155,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":94840,"byte_end":94920,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":94921,"byte_end":94931,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":94932,"byte_end":94935,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":94936,"byte_end":95015,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95016,"byte_end":95096,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95097,"byte_end":95115,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95116,"byte_end":95119,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95120,"byte_end":95197,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95198,"byte_end":95255,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95256,"byte_end":95259,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95260,"byte_end":95274,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95275,"byte_end":95278,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This is purposefully a very simple API for basic use-cases. In a lot of","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95279,"byte_end":95354,"line_start":57,"line_end":57,"column_start":1,"column_end":76}},{"value":"/ cases you will want to use the more powerful","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95355,"byte_end":95403,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/ [`FuturesOrdered`][crate::stream::FuturesOrdered] APIs, or, if order does","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95404,"byte_end":95481,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ not matter, [`FuturesUnordered`][crate::stream::FuturesUnordered].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95482,"byte_end":95552,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95553,"byte_end":95556,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95557,"byte_end":95626,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95627,"byte_end":95630,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95631,"byte_end":95699,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95700,"byte_end":95703,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95704,"byte_end":95781,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95782,"byte_end":95863,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95864,"byte_end":95867,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95868,"byte_end":95882,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95883,"byte_end":95886,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95887,"byte_end":95894,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95895,"byte_end":95936,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95937,"byte_end":95971,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95972,"byte_end":95975,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":95976,"byte_end":96013,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":96014,"byte_end":96017,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":96018,"byte_end":96065,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":96066,"byte_end":96069,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":96070,"byte_end":96121,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":96122,"byte_end":96131,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":96132,"byte_end":96139,"line_start":81,"line_end":81,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6748},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":97548,"byte_end":97554,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":6751}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":97410,"byte_end":97451,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":97452,"byte_end":97519,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99820,"byte_end":99826,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":97645,"byte_end":97715,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":97716,"byte_end":97719,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":97720,"byte_end":97798,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":97799,"byte_end":97875,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":97876,"byte_end":97948,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":97949,"byte_end":97952,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":97953,"byte_end":98025,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98026,"byte_end":98054,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98055,"byte_end":98058,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98059,"byte_end":98126,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98127,"byte_end":98191,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98192,"byte_end":98242,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98243,"byte_end":98246,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98247,"byte_end":98261,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98262,"byte_end":98265,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98266,"byte_end":98286,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98287,"byte_end":98290,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98291,"byte_end":98298,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98299,"byte_end":98340,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98341,"byte_end":98359,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98360,"byte_end":98376,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98377,"byte_end":98400,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98401,"byte_end":98422,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98423,"byte_end":98429,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/ ","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98430,"byte_end":98434,"line_start":40,"line_end":40,"column_start":1,"column_end":5}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98435,"byte_end":98526,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98527,"byte_end":98552,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98553,"byte_end":98612,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98613,"byte_end":98622,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98623,"byte_end":98629,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async { ","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98630,"byte_end":98656,"line_start":46,"line_end":46,"column_start":1,"column_end":27}},{"value":"/     future::ready(2).await","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98657,"byte_end":98687,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98688,"byte_end":98694,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98695,"byte_end":98698,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98699,"byte_end":98745,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98746,"byte_end":98768,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98769,"byte_end":98791,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98792,"byte_end":98795,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98796,"byte_end":98858,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98859,"byte_end":98943,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":98944,"byte_end":99017,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99018,"byte_end":99102,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99103,"byte_end":99176,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99177,"byte_end":99183,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99184,"byte_end":99187,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99188,"byte_end":99212,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99213,"byte_end":99222,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99223,"byte_end":99230,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99231,"byte_end":99234,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99235,"byte_end":99261,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99262,"byte_end":99265,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99266,"byte_end":99273,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99274,"byte_end":99333,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99334,"byte_end":99337,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99338,"byte_end":99391,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99392,"byte_end":99395,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99396,"byte_end":99471,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99472,"byte_end":99504,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99505,"byte_end":99537,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99538,"byte_end":99543,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99544,"byte_end":99588,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99589,"byte_end":99615,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99616,"byte_end":99693,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99694,"byte_end":99773,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99774,"byte_end":99787,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99788,"byte_end":99798,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99799,"byte_end":99804,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":99805,"byte_end":99812,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6756},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101264,"byte_end":101273,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":6758}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101124,"byte_end":101167,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101185,"byte_end":101252,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1123},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":102053,"byte_end":102063,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101351,"byte_end":101417,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101418,"byte_end":101421,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101422,"byte_end":101502,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101503,"byte_end":101581,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101582,"byte_end":101650,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101651,"byte_end":101654,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101655,"byte_end":101735,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101736,"byte_end":101810,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101811,"byte_end":101814,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101815,"byte_end":101892,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101893,"byte_end":101950,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101951,"byte_end":101954,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101955,"byte_end":101967,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101968,"byte_end":101971,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101972,"byte_end":102045,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6832},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106104,"byte_end":106111,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":6835},{"krate":0,"index":6836}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6877},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106181,"byte_end":106189,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":6881},{"krate":0,"index":6882},{"krate":0,"index":6883}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6934},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106265,"byte_end":106273,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":6939},{"krate":0,"index":6940},{"krate":0,"index":6941},{"krate":0,"index":6942}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7003},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106355,"byte_end":106363,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":7009},{"krate":0,"index":7010},{"krate":0,"index":7011},{"krate":0,"index":7012},{"krate":0,"index":7013}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107636,"byte_end":107644,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106401,"byte_end":106474,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106475,"byte_end":106507,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106508,"byte_end":106511,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106512,"byte_end":106583,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106584,"byte_end":106660,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106661,"byte_end":106733,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106734,"byte_end":106750,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106751,"byte_end":106754,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106755,"byte_end":106824,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106825,"byte_end":106851,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106852,"byte_end":106855,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106856,"byte_end":106870,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106871,"byte_end":106874,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106875,"byte_end":106951,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106952,"byte_end":106988,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106989,"byte_end":106992,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":106993,"byte_end":107000,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107001,"byte_end":107042,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107043,"byte_end":107067,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107068,"byte_end":107071,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107072,"byte_end":107117,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107118,"byte_end":107163,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107164,"byte_end":107202,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107203,"byte_end":107206,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107207,"byte_end":107246,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107247,"byte_end":107256,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107257,"byte_end":107264,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107265,"byte_end":107268,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107269,"byte_end":107339,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107340,"byte_end":107355,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107356,"byte_end":107359,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107360,"byte_end":107367,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107368,"byte_end":107409,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107410,"byte_end":107434,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107435,"byte_end":107438,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107439,"byte_end":107484,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107485,"byte_end":107531,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107532,"byte_end":107570,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107571,"byte_end":107574,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107575,"byte_end":107610,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107611,"byte_end":107620,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107621,"byte_end":107628,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108300,"byte_end":108309,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107882,"byte_end":107942,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107943,"byte_end":107946,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107947,"byte_end":107961,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107962,"byte_end":107965,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107966,"byte_end":107973,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":107974,"byte_end":108015,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108016,"byte_end":108040,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108041,"byte_end":108044,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108045,"byte_end":108090,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108091,"byte_end":108136,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108137,"byte_end":108182,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108183,"byte_end":108226,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108227,"byte_end":108230,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108231,"byte_end":108274,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108275,"byte_end":108284,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108285,"byte_end":108292,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109137,"byte_end":109146,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108667,"byte_end":108727,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108728,"byte_end":108731,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108732,"byte_end":108746,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108747,"byte_end":108750,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108751,"byte_end":108758,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108759,"byte_end":108800,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108801,"byte_end":108825,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108826,"byte_end":108829,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108830,"byte_end":108875,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108876,"byte_end":108921,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108922,"byte_end":108967,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":108968,"byte_end":109013,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109014,"byte_end":109060,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109061,"byte_end":109064,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109065,"byte_end":109111,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109112,"byte_end":109121,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109122,"byte_end":109129,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":110118,"byte_end":110127,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109596,"byte_end":109656,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109657,"byte_end":109660,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109661,"byte_end":109675,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109676,"byte_end":109679,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109680,"byte_end":109687,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109688,"byte_end":109729,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109730,"byte_end":109754,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109755,"byte_end":109758,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109759,"byte_end":109804,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109805,"byte_end":109850,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109851,"byte_end":109896,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109897,"byte_end":109942,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109943,"byte_end":109988,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":109989,"byte_end":110038,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":110039,"byte_end":110042,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":110043,"byte_end":110092,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":110093,"byte_end":110102,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join.rs","byte_start":110103,"byte_end":110110,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1271},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":111636,"byte_end":111646,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1273}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":111511,"byte_end":111556,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":111557,"byte_end":111624,"line_start":31,"line_end":31,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1277},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":113265,"byte_end":113277,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112016,"byte_end":112095,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112096,"byte_end":112126,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112127,"byte_end":112130,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112131,"byte_end":112210,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112211,"byte_end":112291,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112292,"byte_end":112310,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112311,"byte_end":112314,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112315,"byte_end":112393,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112394,"byte_end":112474,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112475,"byte_end":112549,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112550,"byte_end":112573,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112574,"byte_end":112577,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112578,"byte_end":112655,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112656,"byte_end":112713,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112714,"byte_end":112717,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112718,"byte_end":112732,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112733,"byte_end":112736,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112737,"byte_end":112744,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112745,"byte_end":112786,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112787,"byte_end":112833,"line_start":71,"line_end":71,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112834,"byte_end":112837,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112838,"byte_end":112861,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112862,"byte_end":112896,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112897,"byte_end":112931,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112932,"byte_end":112966,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112967,"byte_end":112973,"line_start":77,"line_end":77,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112974,"byte_end":112977,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":112978,"byte_end":113041,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":113042,"byte_end":113045,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":113046,"byte_end":113069,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":113070,"byte_end":113104,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":113105,"byte_end":113140,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":113141,"byte_end":113175,"line_start":84,"line_end":84,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":113176,"byte_end":113182,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":113183,"byte_end":113186,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":113187,"byte_end":113239,"line_start":87,"line_end":87,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":113240,"byte_end":113249,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":113250,"byte_end":113257,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7084},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115198,"byte_end":115207,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":7087}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115056,"byte_end":115101,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115102,"byte_end":115169,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116792,"byte_end":116802,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115301,"byte_end":115371,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115372,"byte_end":115375,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115376,"byte_end":115454,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115455,"byte_end":115531,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115532,"byte_end":115604,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115605,"byte_end":115608,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115609,"byte_end":115681,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115682,"byte_end":115710,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115711,"byte_end":115714,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115715,"byte_end":115782,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115783,"byte_end":115854,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115855,"byte_end":115905,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115906,"byte_end":115909,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115910,"byte_end":115924,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115925,"byte_end":115928,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115929,"byte_end":115936,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115937,"byte_end":116021,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116022,"byte_end":116025,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116026,"byte_end":116083,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116084,"byte_end":116087,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116088,"byte_end":116170,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116171,"byte_end":116228,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116229,"byte_end":116286,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116287,"byte_end":116313,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116314,"byte_end":116319,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116320,"byte_end":116415,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116416,"byte_end":116439,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116440,"byte_end":116520,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116521,"byte_end":116602,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116603,"byte_end":116673,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116674,"byte_end":116745,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116746,"byte_end":116759,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116760,"byte_end":116770,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116771,"byte_end":116776,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":116777,"byte_end":116784,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7092},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":118445,"byte_end":118453,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":7094}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":118306,"byte_end":118348,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":118366,"byte_end":118433,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":119175,"byte_end":119184,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":118530,"byte_end":118624,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":118625,"byte_end":118628,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":118629,"byte_end":118718,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":118719,"byte_end":118803,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":118804,"byte_end":118885,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":118886,"byte_end":118931,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":118932,"byte_end":118935,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":118936,"byte_end":119014,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":119015,"byte_end":119072,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":119073,"byte_end":119076,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":119077,"byte_end":119089,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":119090,"byte_end":119093,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":119094,"byte_end":119167,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7101},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":121556,"byte_end":121560,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":7098},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":121523,"byte_end":121551,"line_start":12,"line_end":12,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7104},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":121616,"byte_end":121621,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":7098},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":121582,"byte_end":121611,"line_start":14,"line_end":14,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":7098},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":121504,"byte_end":121510,"line_start":11,"line_end":11,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":7101},{"krate":0,"index":7104}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":121360,"byte_end":121460,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"/ type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":121461,"byte_end":121470,"line_start":9,"line_end":9,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":122175,"byte_end":122187,"line_start":33,"line_end":33,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":122027,"byte_end":122085,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":122090,"byte_end":122093,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":122098,"byte_end":122163,"line_start":32,"line_end":32,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":122567,"byte_end":122580,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":122418,"byte_end":122476,"line_start":42,"line_end":42,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":122481,"byte_end":122484,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":122489,"byte_end":122555,"line_start":44,"line_end":44,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":122868,"byte_end":122878,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":122795,"byte_end":122856,"line_start":54,"line_end":54,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":11560},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10292906,"byte_end":10292915,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::future::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":11562},{"krate":0,"index":11563}],"decl_id":null,"docs":" A future which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7153},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293816,"byte_end":10293819,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<Fut>>::new","value":"pub fn new(Fut, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future using an existing `AbortRegistration`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293049,"byte_end":10293124,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293129,"byte_end":10293197,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293202,"byte_end":10293205,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293210,"byte_end":10293282,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future will complete immediately without making","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293287,"byte_end":10293363,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ any further progress.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293368,"byte_end":10293393,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293398,"byte_end":10293401,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293406,"byte_end":10293418,"line_start":30,"line_end":30,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293423,"byte_end":10293426,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293431,"byte_end":10293438,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293443,"byte_end":10293484,"line_start":33,"line_end":33,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293489,"byte_end":10293548,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293553,"byte_end":10293556,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293561,"byte_end":10293630,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293635,"byte_end":10293700,"line_start":37,"line_end":37,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293705,"byte_end":10293730,"line_start":38,"line_end":38,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293735,"byte_end":10293778,"line_start":39,"line_end":39,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293783,"byte_end":10293792,"line_start":40,"line_end":40,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293797,"byte_end":10293804,"line_start":41,"line_end":41,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7182},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294192,"byte_end":10294209,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::future::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":7183}],"decl_id":null,"docs":" A registration handle for a `Abortable` future.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for a `Abortable` future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294001,"byte_end":10294052,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294053,"byte_end":10294129,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294130,"byte_end":10294163,"line_start":52,"line_end":52,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":7186},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294316,"byte_end":10294327,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::future::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":7187}],"decl_id":null,"docs":" A handle to a `Abortable` future.\n","sig":null,"attributes":[{"value":"/ A handle to a `Abortable` future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294243,"byte_end":10294280,"line_start":58,"line_end":58,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7155},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294997,"byte_end":10295005,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294384,"byte_end":10294458,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ to abort a running future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294463,"byte_end":10294493,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294498,"byte_end":10294501,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to `Abortable::new`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294506,"byte_end":10294574,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294579,"byte_end":10294582,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294587,"byte_end":10294599,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294604,"byte_end":10294607,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294612,"byte_end":10294619,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294624,"byte_end":10294665,"line_start":73,"line_end":73,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294670,"byte_end":10294729,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294734,"byte_end":10294737,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294742,"byte_end":10294811,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294816,"byte_end":10294881,"line_start":77,"line_end":77,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294886,"byte_end":10294911,"line_start":78,"line_end":78,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294916,"byte_end":10294959,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294964,"byte_end":10294973,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294978,"byte_end":10294985,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":7156},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10295901,"byte_end":10295910,"line_start":114,"line_end":114,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10295532,"byte_end":10295618,"line_start":107,"line_end":107,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10295619,"byte_end":10295622,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10295623,"byte_end":10295699,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10295700,"byte_end":10295753,"line_start":110,"line_end":110,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10295754,"byte_end":10295757,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10295758,"byte_end":10295835,"line_start":112,"line_end":112,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10295836,"byte_end":10295893,"line_start":113,"line_end":113,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7197},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10296214,"byte_end":10296221,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::future::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` future was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` future was aborted.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10296103,"byte_end":10296157,"line_start":124,"line_end":124,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7165},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10297834,"byte_end":10297839,"line_start":173,"line_end":173,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` future associated with this handle.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10297470,"byte_end":10297531,"line_start":167,"line_end":167,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10297536,"byte_end":10297539,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable future associated with this handle that it","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10297544,"byte_end":10297613,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ should abort. Note that if the future is currently being polled on","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10297618,"byte_end":10297688,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10297693,"byte_end":10297767,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10297772,"byte_end":10297822,"line_start":172,"line_end":172,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1470},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1477},{"krate":0,"index":1480},{"krate":0,"index":1483},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":2972},{"krate":0,"index":2975},{"krate":0,"index":2978},{"krate":0,"index":2981},{"krate":0,"index":2984},{"krate":0,"index":2987},{"krate":0,"index":2990},{"krate":0,"index":2993},{"krate":0,"index":2996},{"krate":0,"index":2999},{"krate":0,"index":3002},{"krate":0,"index":3005},{"krate":0,"index":3008},{"krate":0,"index":3011},{"krate":0,"index":3014},{"krate":0,"index":3017},{"krate":0,"index":3020},{"krate":0,"index":3023},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3032},{"krate":0,"index":3035},{"krate":0,"index":3038},{"krate":0,"index":3041},{"krate":0,"index":3044},{"krate":0,"index":3047},{"krate":0,"index":3050},{"krate":0,"index":3053},{"krate":0,"index":3056},{"krate":0,"index":3059},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3066},{"krate":0,"index":3069},{"krate":0,"index":3072},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3915},{"krate":0,"index":3918},{"krate":0,"index":3921},{"krate":0,"index":3924},{"krate":0,"index":3927},{"krate":0,"index":3930},{"krate":0,"index":3933},{"krate":0,"index":3936},{"krate":0,"index":3939},{"krate":0,"index":3942},{"krate":0,"index":3945},{"krate":0,"index":3948},{"krate":0,"index":3951},{"krate":0,"index":3954},{"krate":0,"index":3957},{"krate":0,"index":3960},{"krate":0,"index":3963},{"krate":0,"index":3966},{"krate":0,"index":3969},{"krate":0,"index":3972},{"krate":0,"index":3975},{"krate":0,"index":3976},{"krate":0,"index":3979},{"krate":0,"index":3982},{"krate":0,"index":3985},{"krate":0,"index":4011},{"krate":0,"index":4012},{"krate":0,"index":4015},{"krate":0,"index":4018},{"krate":0,"index":4051},{"krate":0,"index":4052},{"krate":0,"index":4055},{"krate":0,"index":4058},{"krate":0,"index":4095},{"krate":0,"index":4096},{"krate":0,"index":4099},{"krate":0,"index":4102},{"krate":0,"index":4141},{"krate":0,"index":4142},{"krate":0,"index":4145},{"krate":0,"index":4148},{"krate":0,"index":4191},{"krate":0,"index":4192},{"krate":0,"index":4195},{"krate":0,"index":4198},{"krate":0,"index":4237},{"krate":0,"index":4238},{"krate":0,"index":4241},{"krate":0,"index":4244},{"krate":0,"index":4280},{"krate":0,"index":4281},{"krate":0,"index":4284},{"krate":0,"index":4287},{"krate":0,"index":4340},{"krate":0,"index":4341},{"krate":0,"index":4344},{"krate":0,"index":4347},{"krate":0,"index":4406},{"krate":0,"index":4407},{"krate":0,"index":4410},{"krate":0,"index":10403},{"krate":0,"index":10510},{"krate":0,"index":10513},{"krate":0,"index":10868},{"krate":0,"index":10871},{"krate":0,"index":10947},{"krate":0,"index":10948},{"krate":0,"index":10951},{"krate":0,"index":4413}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129325,"byte_end":129350,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129351,"byte_end":129354,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129355,"byte_end":129380,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129381,"byte_end":129384,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129385,"byte_end":129458,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129459,"byte_end":129484,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129485,"byte_end":129564,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129565,"byte_end":129602,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129603,"byte_end":129676,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":129677,"byte_end":129707,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7217},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/chain.rs","byte_start":183787,"byte_end":183792,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":7220},{"krate":0,"index":7221}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7266},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/collect.rs","byte_start":185961,"byte_end":185968,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":7269},{"krate":0,"index":7270}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7317},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/unzip.rs","byte_start":187431,"byte_end":187436,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":7321},{"krate":0,"index":7322},{"krate":0,"index":7323}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7375},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/concat.rs","byte_start":189351,"byte_end":189357,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":7377},{"krate":0,"index":7378}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7415},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/cycle.rs","byte_start":191112,"byte_end":191117,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":7417},{"krate":0,"index":7418}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7455},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/enumerate.rs","byte_start":192797,"byte_end":192806,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":7457},{"krate":0,"index":7458}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7494},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter.rs","byte_start":194494,"byte_end":194500,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":7498},{"krate":0,"index":7499},{"krate":0,"index":7500},{"krate":0,"index":7501}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7559},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter_map.rs","byte_start":198006,"byte_end":198015,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7563},{"krate":0,"index":7564},{"krate":0,"index":7565}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7627},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/flatten.rs","byte_start":201086,"byte_end":201093,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7630},{"krate":0,"index":7631}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7675},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":134478,"byte_end":134485,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7677}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7728},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fold.rs","byte_start":202910,"byte_end":202914,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":7733},{"krate":0,"index":7734},{"krate":0,"index":7735},{"krate":0,"index":7736}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7797},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each.rs","byte_start":205477,"byte_end":205484,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":7801},{"krate":0,"index":7802},{"krate":0,"index":7803}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7859},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fuse.rs","byte_start":207510,"byte_end":207514,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7861},{"krate":0,"index":7862}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fuse.rs","byte_start":207966,"byte_end":207973,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fuse.rs","byte_start":207697,"byte_end":207759,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fuse.rs","byte_start":207764,"byte_end":207767,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fuse.rs","byte_start":207772,"byte_end":207840,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fuse.rs","byte_start":207845,"byte_end":207911,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fuse.rs","byte_start":207916,"byte_end":207954,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7898},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":209355,"byte_end":209367,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":7900}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":209185,"byte_end":209258,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":209276,"byte_end":209343,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":209930,"byte_end":209937,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":209538,"byte_end":209611,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":209616,"byte_end":209633,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":209638,"byte_end":209641,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":209646,"byte_end":209727,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":209732,"byte_end":209814,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":209819,"byte_end":209898,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":209903,"byte_end":209918,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210548,"byte_end":210555,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210002,"byte_end":210069,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210074,"byte_end":210105,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210110,"byte_end":210113,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210118,"byte_end":210191,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210196,"byte_end":210251,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210256,"byte_end":210259,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210264,"byte_end":210345,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210350,"byte_end":210432,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210437,"byte_end":210516,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210521,"byte_end":210536,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":211181,"byte_end":211192,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210628,"byte_end":210702,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210707,"byte_end":210738,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210743,"byte_end":210746,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210751,"byte_end":210824,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210829,"byte_end":210884,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210889,"byte_end":210892,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210897,"byte_end":210978,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":210983,"byte_end":211065,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":211070,"byte_end":211149,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":211154,"byte_end":211169,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":211825,"byte_end":211835,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":211305,"byte_end":211367,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":211372,"byte_end":211375,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":211380,"byte_end":211452,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":211457,"byte_end":211528,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":211533,"byte_end":211536,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":211541,"byte_end":211622,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":211627,"byte_end":211709,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":211714,"byte_end":211793,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":211798,"byte_end":211813,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7907},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":135605,"byte_end":135612,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7910}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7973},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/map.rs","byte_start":212882,"byte_end":212885,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7976},{"krate":0,"index":7977}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8026},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":135973,"byte_end":135980,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":8030}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8105},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/next.rs","byte_start":214612,"byte_end":214616,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":8108}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/next.rs","byte_start":214456,"byte_end":214515,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/next.rs","byte_start":214533,"byte_end":214600,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8113},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/select_next_some.rs","byte_start":215647,"byte_end":215661,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":8116}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/select_next_some.rs","byte_start":215463,"byte_end":215538,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/select_next_some.rs","byte_start":215539,"byte_end":215550,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/select_next_some.rs","byte_start":215568,"byte_end":215635,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8126},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":217196,"byte_end":217204,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":8128},{"krate":0,"index":8129}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":217677,"byte_end":217681,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":217522,"byte_end":217595,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":217600,"byte_end":217665,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2344},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":218006,"byte_end":218015,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":217768,"byte_end":217830,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":217835,"byte_end":217838,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":217843,"byte_end":217916,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":217921,"byte_end":217994,"line_start":46,"line_end":46,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":8165},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":219737,"byte_end":219741,"line_start":108,"line_end":108,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":8168}],"decl_id":null,"docs":" Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8211},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/skip.rs","byte_start":221049,"byte_end":221053,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":8213},{"krate":0,"index":8214}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8250},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/skip_while.rs","byte_start":222955,"byte_end":222964,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":8254},{"krate":0,"index":8255},{"krate":0,"index":8256},{"krate":0,"index":8257},{"krate":0,"index":8258}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8324},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take.rs","byte_start":226608,"byte_end":226612,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8326},{"krate":0,"index":8327}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8363},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_while.rs","byte_start":228703,"byte_end":228712,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":8367},{"krate":0,"index":8368},{"krate":0,"index":8369},{"krate":0,"index":8370},{"krate":0,"index":8371}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8432},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":232320,"byte_end":232329,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8435},{"krate":0,"index":8436},{"krate":0,"index":8437},{"krate":0,"index":8438}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2598},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":233709,"byte_end":233720,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":233409,"byte_end":233463,"line_start":60,"line_end":60,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":233468,"byte_end":233562,"line_start":61,"line_end":61,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":233567,"byte_end":233630,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":233635,"byte_end":233697,"line_start":63,"line_end":63,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":235004,"byte_end":235015,"line_start":108,"line_end":108,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":233857,"byte_end":233922,"line_start":72,"line_end":72,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":233927,"byte_end":233984,"line_start":73,"line_end":73,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":233989,"byte_end":233992,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":233997,"byte_end":234062,"line_start":75,"line_end":75,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234067,"byte_end":234127,"line_start":76,"line_end":76,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234132,"byte_end":234135,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234140,"byte_end":234208,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234213,"byte_end":234256,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234261,"byte_end":234264,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234269,"byte_end":234283,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234288,"byte_end":234291,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234296,"byte_end":234303,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234308,"byte_end":234349,"line_start":84,"line_end":84,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234354,"byte_end":234378,"line_start":85,"line_end":85,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234383,"byte_end":234426,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234431,"byte_end":234459,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234464,"byte_end":234467,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234472,"byte_end":234510,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234515,"byte_end":234518,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234523,"byte_end":234541,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234546,"byte_end":234588,"line_start":92,"line_end":92,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234593,"byte_end":234608,"line_start":93,"line_end":93,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234613,"byte_end":234632,"line_start":94,"line_end":94,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234637,"byte_end":234662,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234667,"byte_end":234683,"line_start":96,"line_end":96,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234688,"byte_end":234721,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234726,"byte_end":234735,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234740,"byte_end":234747,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234752,"byte_end":234755,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234760,"byte_end":234809,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234814,"byte_end":234868,"line_start":102,"line_end":102,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234873,"byte_end":234876,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234881,"byte_end":234928,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234933,"byte_end":234966,"line_start":105,"line_end":105,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234971,"byte_end":234980,"line_start":106,"line_end":106,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":234985,"byte_end":234992,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":235191,"byte_end":235201,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":235094,"byte_end":235155,"line_start":112,"line_end":112,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":235160,"byte_end":235179,"line_start":113,"line_end":113,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8489},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/then.rs","byte_start":237133,"byte_end":237137,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":8493},{"krate":0,"index":8494},{"krate":0,"index":8495}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8557},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":239814,"byte_end":239817,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":8560},{"krate":0,"index":8561},{"krate":0,"index":8562},{"krate":0,"index":8563}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":240392,"byte_end":240399,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":240284,"byte_end":240358,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":240363,"byte_end":240380,"line_start":33,"line_end":33,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":240755,"byte_end":240762,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":240493,"byte_end":240561,"line_start":38,"line_end":38,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":240566,"byte_end":240597,"line_start":39,"line_end":39,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":240602,"byte_end":240605,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":240610,"byte_end":240683,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":240688,"byte_end":240743,"line_start":42,"line_end":42,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":241137,"byte_end":241148,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":240868,"byte_end":240943,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":240948,"byte_end":240979,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":240984,"byte_end":240987,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":240992,"byte_end":241065,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":241070,"byte_end":241125,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":241554,"byte_end":241564,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":241318,"byte_end":241381,"line_start":57,"line_end":57,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":241386,"byte_end":241389,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":241394,"byte_end":241466,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":241471,"byte_end":241542,"line_start":60,"line_end":60,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":8612},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/chunks.rs","byte_start":244406,"byte_end":244412,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":8614},{"krate":0,"index":8615},{"krate":0,"index":8616}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8660},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/ready_chunks.rs","byte_start":247532,"byte_end":247543,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":8662},{"krate":0,"index":8663},{"krate":0,"index":8664}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8703},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/scan.rs","byte_start":251023,"byte_end":251027,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":8708},{"krate":0,"index":8709},{"krate":0,"index":8710}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11514},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/buffer_unordered.rs","byte_start":10298428,"byte_end":10298443,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11516},{"krate":0,"index":11517},{"krate":0,"index":11518}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11473},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/buffered.rs","byte_start":10301777,"byte_end":10301785,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":11475},{"krate":0,"index":11476},{"krate":0,"index":11477}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11412},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each_concurrent.rs","byte_start":10304847,"byte_end":10304864,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11416},{"krate":0,"index":11417},{"krate":0,"index":11418},{"krate":0,"index":11419}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2889},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139261,"byte_end":139270,"line_start":212,"line_end":212,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2899},{"krate":0,"index":2903},{"krate":0,"index":2906},{"krate":0,"index":2908},{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":2923},{"krate":0,"index":2928},{"krate":0,"index":2931},{"krate":0,"index":2934},{"krate":0,"index":2936},{"krate":0,"index":2939},{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2949},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2955},{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2962},{"krate":0,"index":2964},{"krate":0,"index":2966},{"krate":0,"index":2967}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139150,"byte_end":139224,"line_start":210,"line_end":210,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139225,"byte_end":139250,"line_start":211,"line_end":211,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2890},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140180,"byte_end":140184,"line_start":236,"line_end":236,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139285,"byte_end":139351,"line_start":213,"line_end":213,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139356,"byte_end":139359,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139364,"byte_end":139432,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139437,"byte_end":139512,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139517,"byte_end":139592,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139597,"byte_end":139651,"line_start":218,"line_end":218,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139656,"byte_end":139731,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139736,"byte_end":139746,"line_start":220,"line_end":220,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139751,"byte_end":139754,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139759,"byte_end":139773,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139778,"byte_end":139781,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139786,"byte_end":139793,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139798,"byte_end":139839,"line_start":225,"line_end":225,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139844,"byte_end":139887,"line_start":226,"line_end":226,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139892,"byte_end":139895,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139900,"byte_end":139941,"line_start":228,"line_end":228,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139946,"byte_end":139949,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139954,"byte_end":139999,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140004,"byte_end":140049,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140054,"byte_end":140099,"line_start":232,"line_end":232,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140104,"byte_end":140146,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140151,"byte_end":140160,"line_start":234,"line_end":234,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140165,"byte_end":140172,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2891},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141423,"byte_end":141434,"line_start":271,"line_end":271,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140326,"byte_end":140398,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140403,"byte_end":140464,"line_start":244,"line_end":244,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140469,"byte_end":140472,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140477,"byte_end":140552,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140557,"byte_end":140611,"line_start":247,"line_end":247,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140616,"byte_end":140619,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140624,"byte_end":140697,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140702,"byte_end":140764,"line_start":250,"line_end":250,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140769,"byte_end":140844,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140849,"byte_end":140903,"line_start":252,"line_end":252,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140908,"byte_end":140983,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":140988,"byte_end":140998,"line_start":254,"line_end":254,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141003,"byte_end":141006,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141011,"byte_end":141025,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141030,"byte_end":141033,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141038,"byte_end":141045,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141050,"byte_end":141091,"line_start":259,"line_end":259,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141096,"byte_end":141139,"line_start":260,"line_end":260,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141144,"byte_end":141147,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141152,"byte_end":141189,"line_start":262,"line_end":262,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141194,"byte_end":141197,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141202,"byte_end":141254,"line_start":264,"line_end":264,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141259,"byte_end":141289,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141294,"byte_end":141297,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141302,"byte_end":141354,"line_start":267,"line_end":267,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141359,"byte_end":141389,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141394,"byte_end":141403,"line_start":269,"line_end":269,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141408,"byte_end":141415,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2892},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142435,"byte_end":142438,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141599,"byte_end":141674,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141679,"byte_end":141702,"line_start":279,"line_end":279,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141707,"byte_end":141710,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141715,"byte_end":141787,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141792,"byte_end":141856,"line_start":282,"line_end":282,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141861,"byte_end":141898,"line_start":283,"line_end":283,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141903,"byte_end":141906,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141911,"byte_end":141987,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":141992,"byte_end":142063,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142068,"byte_end":142089,"line_start":287,"line_end":287,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142094,"byte_end":142097,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142102,"byte_end":142116,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142121,"byte_end":142124,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142129,"byte_end":142136,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142141,"byte_end":142182,"line_start":292,"line_end":292,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142187,"byte_end":142230,"line_start":293,"line_end":293,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142235,"byte_end":142238,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142243,"byte_end":142280,"line_start":295,"line_end":295,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142285,"byte_end":142324,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142329,"byte_end":142332,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142337,"byte_end":142401,"line_start":298,"line_end":298,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142406,"byte_end":142415,"line_start":299,"line_end":299,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142420,"byte_end":142427,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2895},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143998,"byte_end":144007,"line_start":347,"line_end":347,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142605,"byte_end":142676,"line_start":309,"line_end":309,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142681,"byte_end":142700,"line_start":310,"line_end":310,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142705,"byte_end":142708,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142713,"byte_end":142778,"line_start":312,"line_end":312,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142783,"byte_end":142852,"line_start":313,"line_end":313,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142857,"byte_end":142868,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142873,"byte_end":142876,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142881,"byte_end":142956,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":142961,"byte_end":143043,"line_start":317,"line_end":317,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143048,"byte_end":143066,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143071,"byte_end":143074,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143079,"byte_end":143102,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143107,"byte_end":143110,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143115,"byte_end":143190,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143195,"byte_end":143282,"line_start":323,"line_end":323,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143287,"byte_end":143343,"line_start":324,"line_end":324,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143348,"byte_end":143351,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143356,"byte_end":143368,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143373,"byte_end":143376,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143381,"byte_end":143450,"line_start":328,"line_end":328,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143455,"byte_end":143480,"line_start":329,"line_end":329,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143485,"byte_end":143488,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143493,"byte_end":143507,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143512,"byte_end":143515,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143520,"byte_end":143527,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143532,"byte_end":143573,"line_start":334,"line_end":334,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143578,"byte_end":143621,"line_start":335,"line_end":335,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143626,"byte_end":143629,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143634,"byte_end":143685,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143690,"byte_end":143693,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143698,"byte_end":143738,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143743,"byte_end":143746,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143751,"byte_end":143803,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143808,"byte_end":143860,"line_start":342,"line_end":342,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143865,"byte_end":143917,"line_start":343,"line_end":343,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143922,"byte_end":143964,"line_start":344,"line_end":344,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143969,"byte_end":143978,"line_start":345,"line_end":345,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":143983,"byte_end":143990,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145236,"byte_end":145242,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144151,"byte_end":144223,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144228,"byte_end":144255,"line_start":355,"line_end":355,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144260,"byte_end":144263,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144268,"byte_end":144343,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144348,"byte_end":144419,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144424,"byte_end":144496,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144501,"byte_end":144575,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144580,"byte_end":144638,"line_start":361,"line_end":361,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144643,"byte_end":144646,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144651,"byte_end":144727,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144732,"byte_end":144806,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144811,"byte_end":144832,"line_start":365,"line_end":365,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144837,"byte_end":144840,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144845,"byte_end":144859,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144864,"byte_end":144867,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144872,"byte_end":144879,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144884,"byte_end":144925,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144930,"byte_end":144954,"line_start":371,"line_end":371,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":144959,"byte_end":145002,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145007,"byte_end":145010,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145015,"byte_end":145053,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145058,"byte_end":145119,"line_start":375,"line_end":375,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145124,"byte_end":145127,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145132,"byte_end":145202,"line_start":377,"line_end":377,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145207,"byte_end":145216,"line_start":378,"line_end":378,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145221,"byte_end":145228,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2899},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146567,"byte_end":146577,"line_start":414,"line_end":414,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145470,"byte_end":145545,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145550,"byte_end":145626,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145631,"byte_end":145634,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145639,"byte_end":145714,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145719,"byte_end":145794,"line_start":393,"line_end":393,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145799,"byte_end":145875,"line_start":394,"line_end":394,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145880,"byte_end":145945,"line_start":395,"line_end":395,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145950,"byte_end":145953,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":145958,"byte_end":146034,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146039,"byte_end":146113,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146118,"byte_end":146143,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146148,"byte_end":146151,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146156,"byte_end":146170,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146175,"byte_end":146182,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146187,"byte_end":146228,"line_start":403,"line_end":403,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146233,"byte_end":146276,"line_start":404,"line_end":404,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146281,"byte_end":146284,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146289,"byte_end":146327,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146332,"byte_end":146382,"line_start":407,"line_end":407,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146387,"byte_end":146438,"line_start":408,"line_end":408,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146443,"byte_end":146450,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146455,"byte_end":146458,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146463,"byte_end":146533,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146538,"byte_end":146547,"line_start":412,"line_end":412,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146552,"byte_end":146559,"line_start":413,"line_end":413,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2903},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147606,"byte_end":147610,"line_start":445,"line_end":445,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146809,"byte_end":146882,"line_start":423,"line_end":423,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146887,"byte_end":146915,"line_start":424,"line_end":424,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146920,"byte_end":146923,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":146928,"byte_end":147002,"line_start":426,"line_end":426,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147007,"byte_end":147074,"line_start":427,"line_end":427,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147079,"byte_end":147124,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147129,"byte_end":147132,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147137,"byte_end":147213,"line_start":430,"line_end":430,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147218,"byte_end":147244,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147249,"byte_end":147252,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147257,"byte_end":147271,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147276,"byte_end":147279,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147284,"byte_end":147291,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147296,"byte_end":147337,"line_start":436,"line_end":436,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147342,"byte_end":147385,"line_start":437,"line_end":437,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147390,"byte_end":147393,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147398,"byte_end":147435,"line_start":439,"line_end":439,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147440,"byte_end":147495,"line_start":440,"line_end":440,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147500,"byte_end":147503,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147508,"byte_end":147572,"line_start":442,"line_end":442,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147577,"byte_end":147586,"line_start":443,"line_end":443,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147591,"byte_end":147598,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2906},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148544,"byte_end":148551,"line_start":479,"line_end":479,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147819,"byte_end":147873,"line_start":454,"line_end":454,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147878,"byte_end":147933,"line_start":455,"line_end":455,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147938,"byte_end":147941,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":147946,"byte_end":148014,"line_start":457,"line_end":457,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148019,"byte_end":148022,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148027,"byte_end":148041,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148046,"byte_end":148049,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148054,"byte_end":148061,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148066,"byte_end":148107,"line_start":462,"line_end":462,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148112,"byte_end":148143,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148148,"byte_end":148183,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148188,"byte_end":148208,"line_start":465,"line_end":465,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148213,"byte_end":148216,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148221,"byte_end":148258,"line_start":467,"line_end":467,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148263,"byte_end":148266,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148271,"byte_end":148298,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148303,"byte_end":148327,"line_start":470,"line_end":470,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148332,"byte_end":148374,"line_start":471,"line_end":471,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148379,"byte_end":148388,"line_start":472,"line_end":472,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148393,"byte_end":148400,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148405,"byte_end":148408,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148413,"byte_end":148461,"line_start":475,"line_end":475,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148466,"byte_end":148510,"line_start":476,"line_end":476,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148515,"byte_end":148524,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148529,"byte_end":148536,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2908},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149670,"byte_end":149675,"line_start":516,"line_end":516,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148709,"byte_end":148760,"line_start":486,"line_end":486,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148765,"byte_end":148800,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148805,"byte_end":148808,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148813,"byte_end":148867,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148872,"byte_end":148929,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148934,"byte_end":148970,"line_start":491,"line_end":491,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148975,"byte_end":148978,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":148983,"byte_end":149051,"line_start":493,"line_end":493,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149056,"byte_end":149059,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149064,"byte_end":149078,"line_start":495,"line_end":495,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149083,"byte_end":149086,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149091,"byte_end":149098,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149103,"byte_end":149144,"line_start":498,"line_end":498,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149149,"byte_end":149180,"line_start":499,"line_end":499,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149185,"byte_end":149220,"line_start":500,"line_end":500,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149225,"byte_end":149245,"line_start":501,"line_end":501,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149250,"byte_end":149253,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149258,"byte_end":149295,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149300,"byte_end":149303,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149308,"byte_end":149335,"line_start":505,"line_end":505,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149340,"byte_end":149383,"line_start":506,"line_end":506,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149388,"byte_end":149431,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149436,"byte_end":149479,"line_start":508,"line_end":508,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149484,"byte_end":149491,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149496,"byte_end":149499,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149504,"byte_end":149558,"line_start":511,"line_end":511,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149563,"byte_end":149597,"line_start":512,"line_end":512,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149602,"byte_end":149636,"line_start":513,"line_end":513,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149641,"byte_end":149650,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149655,"byte_end":149662,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150971,"byte_end":150977,"line_start":557,"line_end":557,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":149936,"byte_end":149998,"line_start":525,"line_end":525,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150003,"byte_end":150067,"line_start":526,"line_end":526,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150072,"byte_end":150075,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150080,"byte_end":150144,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150149,"byte_end":150214,"line_start":529,"line_end":529,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150219,"byte_end":150265,"line_start":530,"line_end":530,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150270,"byte_end":150273,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150278,"byte_end":150327,"line_start":532,"line_end":532,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150332,"byte_end":150372,"line_start":533,"line_end":533,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150377,"byte_end":150380,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150385,"byte_end":150399,"line_start":535,"line_end":535,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150404,"byte_end":150407,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150412,"byte_end":150419,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150424,"byte_end":150465,"line_start":538,"line_end":538,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150470,"byte_end":150501,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150506,"byte_end":150541,"line_start":540,"line_end":540,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150546,"byte_end":150566,"line_start":541,"line_end":541,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150571,"byte_end":150574,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150579,"byte_end":150616,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150621,"byte_end":150624,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150629,"byte_end":150656,"line_start":545,"line_end":545,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150661,"byte_end":150692,"line_start":546,"line_end":546,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150697,"byte_end":150723,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150728,"byte_end":150794,"line_start":548,"line_end":548,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150799,"byte_end":150808,"line_start":549,"line_end":549,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150813,"byte_end":150820,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150825,"byte_end":150828,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150833,"byte_end":150868,"line_start":552,"line_end":552,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150873,"byte_end":150876,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150881,"byte_end":150937,"line_start":554,"line_end":554,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150942,"byte_end":150951,"line_start":555,"line_end":555,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":150956,"byte_end":150963,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152041,"byte_end":152046,"line_start":588,"line_end":588,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151207,"byte_end":151238,"line_start":565,"line_end":565,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151243,"byte_end":151246,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151251,"byte_end":151318,"line_start":567,"line_end":567,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151323,"byte_end":151395,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151400,"byte_end":151457,"line_start":569,"line_end":569,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151462,"byte_end":151465,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151470,"byte_end":151484,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151489,"byte_end":151492,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151497,"byte_end":151504,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151509,"byte_end":151550,"line_start":574,"line_end":574,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151555,"byte_end":151598,"line_start":575,"line_end":575,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151603,"byte_end":151625,"line_start":576,"line_end":576,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151630,"byte_end":151677,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151682,"byte_end":151685,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151690,"byte_end":151731,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151736,"byte_end":151777,"line_start":580,"line_end":580,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151782,"byte_end":151823,"line_start":581,"line_end":581,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151828,"byte_end":151869,"line_start":582,"line_end":582,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151874,"byte_end":151915,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151920,"byte_end":151961,"line_start":584,"line_end":584,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":151966,"byte_end":152007,"line_start":585,"line_end":585,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152012,"byte_end":152021,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152026,"byte_end":152033,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152996,"byte_end":153000,"line_start":615,"line_end":615,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152181,"byte_end":152248,"line_start":595,"line_end":595,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152253,"byte_end":152305,"line_start":596,"line_end":596,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152310,"byte_end":152313,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152318,"byte_end":152388,"line_start":598,"line_end":598,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152393,"byte_end":152469,"line_start":599,"line_end":599,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152474,"byte_end":152550,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152555,"byte_end":152625,"line_start":601,"line_end":601,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152630,"byte_end":152656,"line_start":602,"line_end":602,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152661,"byte_end":152664,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152669,"byte_end":152683,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152688,"byte_end":152691,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152696,"byte_end":152703,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152708,"byte_end":152749,"line_start":607,"line_end":607,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152754,"byte_end":152797,"line_start":608,"line_end":608,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152802,"byte_end":152805,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152810,"byte_end":152853,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152858,"byte_end":152927,"line_start":611,"line_end":611,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152932,"byte_end":152962,"line_start":612,"line_end":612,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152967,"byte_end":152976,"line_start":613,"line_end":613,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":152981,"byte_end":152988,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2919},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154194,"byte_end":154201,"line_start":655,"line_end":655,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153235,"byte_end":153300,"line_start":624,"line_end":624,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153305,"byte_end":153308,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153313,"byte_end":153327,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153332,"byte_end":153335,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153340,"byte_end":153347,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153352,"byte_end":153393,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153398,"byte_end":153429,"line_start":630,"line_end":630,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153434,"byte_end":153469,"line_start":631,"line_end":631,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153474,"byte_end":153494,"line_start":632,"line_end":632,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153499,"byte_end":153502,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153507,"byte_end":153546,"line_start":634,"line_end":634,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153551,"byte_end":153590,"line_start":635,"line_end":635,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153595,"byte_end":153634,"line_start":636,"line_end":636,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153639,"byte_end":153642,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153647,"byte_end":153674,"line_start":638,"line_end":638,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153679,"byte_end":153718,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153723,"byte_end":153762,"line_start":640,"line_end":640,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153767,"byte_end":153774,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153779,"byte_end":153806,"line_start":642,"line_end":642,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153811,"byte_end":153850,"line_start":643,"line_end":643,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153855,"byte_end":153894,"line_start":644,"line_end":644,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153899,"byte_end":153906,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153911,"byte_end":153938,"line_start":646,"line_end":646,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153943,"byte_end":153984,"line_start":647,"line_end":647,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":153989,"byte_end":154030,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154035,"byte_end":154042,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154047,"byte_end":154050,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154055,"byte_end":154114,"line_start":651,"line_end":651,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154119,"byte_end":154160,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154165,"byte_end":154174,"line_start":653,"line_end":653,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154179,"byte_end":154186,"line_start":654,"line_end":654,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2920},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155463,"byte_end":155471,"line_start":688,"line_end":688,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154378,"byte_end":154450,"line_start":663,"line_end":663,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154455,"byte_end":154458,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154463,"byte_end":154540,"line_start":665,"line_end":665,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154545,"byte_end":154620,"line_start":666,"line_end":666,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154625,"byte_end":154701,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154706,"byte_end":154709,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154714,"byte_end":154796,"line_start":669,"line_end":669,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154801,"byte_end":154884,"line_start":670,"line_end":670,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154889,"byte_end":154892,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154897,"byte_end":154973,"line_start":672,"line_end":672,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":154978,"byte_end":155054,"line_start":673,"line_end":673,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155059,"byte_end":155080,"line_start":674,"line_end":674,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155085,"byte_end":155088,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155093,"byte_end":155107,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155112,"byte_end":155115,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155120,"byte_end":155127,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155132,"byte_end":155173,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155178,"byte_end":155221,"line_start":680,"line_end":680,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155226,"byte_end":155229,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155234,"byte_end":155271,"line_start":682,"line_end":682,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155276,"byte_end":155343,"line_start":683,"line_end":683,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155348,"byte_end":155351,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155356,"byte_end":155429,"line_start":685,"line_end":685,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155434,"byte_end":155443,"line_start":686,"line_end":686,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155448,"byte_end":155455,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2923},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156483,"byte_end":156487,"line_start":721,"line_end":721,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155674,"byte_end":155745,"line_start":697,"line_end":697,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155750,"byte_end":155780,"line_start":698,"line_end":698,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155785,"byte_end":155788,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155793,"byte_end":155868,"line_start":700,"line_end":700,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155873,"byte_end":155944,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155949,"byte_end":155989,"line_start":702,"line_end":702,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":155994,"byte_end":155997,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156002,"byte_end":156016,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156021,"byte_end":156024,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156029,"byte_end":156036,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156041,"byte_end":156082,"line_start":707,"line_end":707,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156087,"byte_end":156111,"line_start":708,"line_end":708,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156116,"byte_end":156159,"line_start":709,"line_end":709,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156164,"byte_end":156167,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156172,"byte_end":156210,"line_start":711,"line_end":711,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156215,"byte_end":156218,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156223,"byte_end":156267,"line_start":713,"line_end":713,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156272,"byte_end":156292,"line_start":714,"line_end":714,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156297,"byte_end":156360,"line_start":715,"line_end":715,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156365,"byte_end":156372,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156377,"byte_end":156380,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156385,"byte_end":156449,"line_start":718,"line_end":718,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156454,"byte_end":156463,"line_start":719,"line_end":719,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156468,"byte_end":156475,"line_start":720,"line_end":720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157534,"byte_end":157544,"line_start":752,"line_end":752,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156756,"byte_end":156830,"line_start":730,"line_end":730,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156835,"byte_end":156858,"line_start":731,"line_end":731,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156863,"byte_end":156866,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156871,"byte_end":156944,"line_start":733,"line_end":733,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":156949,"byte_end":157021,"line_start":734,"line_end":734,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157026,"byte_end":157103,"line_start":735,"line_end":735,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157108,"byte_end":157119,"line_start":736,"line_end":736,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157124,"byte_end":157127,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157132,"byte_end":157146,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157151,"byte_end":157154,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157159,"byte_end":157166,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157171,"byte_end":157212,"line_start":741,"line_end":741,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157217,"byte_end":157241,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157246,"byte_end":157289,"line_start":743,"line_end":743,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157294,"byte_end":157297,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157302,"byte_end":157340,"line_start":745,"line_end":745,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157345,"byte_end":157348,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157353,"byte_end":157416,"line_start":747,"line_end":747,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157421,"byte_end":157424,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157429,"byte_end":157500,"line_start":749,"line_end":749,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157505,"byte_end":157514,"line_start":750,"line_end":750,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157519,"byte_end":157526,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2931},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158533,"byte_end":158543,"line_start":782,"line_end":782,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157778,"byte_end":157854,"line_start":761,"line_end":761,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157859,"byte_end":157882,"line_start":762,"line_end":762,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157887,"byte_end":157890,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157895,"byte_end":157970,"line_start":764,"line_end":764,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":157975,"byte_end":158047,"line_start":765,"line_end":765,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158052,"byte_end":158119,"line_start":766,"line_end":766,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158124,"byte_end":158127,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158132,"byte_end":158146,"line_start":768,"line_end":768,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158151,"byte_end":158154,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158159,"byte_end":158166,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158171,"byte_end":158212,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158217,"byte_end":158241,"line_start":772,"line_end":772,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158246,"byte_end":158289,"line_start":773,"line_end":773,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158294,"byte_end":158297,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158302,"byte_end":158340,"line_start":775,"line_end":775,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158345,"byte_end":158348,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158353,"byte_end":158416,"line_start":777,"line_end":777,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158421,"byte_end":158424,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158429,"byte_end":158499,"line_start":779,"line_end":779,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158504,"byte_end":158513,"line_start":780,"line_end":780,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158518,"byte_end":158525,"line_start":781,"line_end":781,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2934},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160059,"byte_end":160069,"line_start":827,"line_end":827,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158777,"byte_end":158847,"line_start":791,"line_end":791,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158852,"byte_end":158855,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158860,"byte_end":158931,"line_start":793,"line_end":793,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":158936,"byte_end":159008,"line_start":794,"line_end":794,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159013,"byte_end":159083,"line_start":795,"line_end":795,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159088,"byte_end":159091,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159096,"byte_end":159167,"line_start":797,"line_end":797,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159172,"byte_end":159258,"line_start":798,"line_end":798,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159263,"byte_end":159330,"line_start":799,"line_end":799,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159335,"byte_end":159399,"line_start":800,"line_end":800,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159404,"byte_end":159407,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159412,"byte_end":159426,"line_start":802,"line_end":802,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159431,"byte_end":159434,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159439,"byte_end":159446,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159451,"byte_end":159492,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159497,"byte_end":159521,"line_start":806,"line_end":806,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159526,"byte_end":159569,"line_start":807,"line_end":807,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159574,"byte_end":159602,"line_start":808,"line_end":808,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159607,"byte_end":159610,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159615,"byte_end":159653,"line_start":810,"line_end":810,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159658,"byte_end":159661,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159666,"byte_end":159684,"line_start":812,"line_end":812,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159689,"byte_end":159731,"line_start":813,"line_end":813,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159736,"byte_end":159751,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159756,"byte_end":159775,"line_start":815,"line_end":815,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159780,"byte_end":159805,"line_start":816,"line_end":816,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159810,"byte_end":159826,"line_start":817,"line_end":817,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159831,"byte_end":159858,"line_start":818,"line_end":818,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159863,"byte_end":159872,"line_start":819,"line_end":819,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159877,"byte_end":159884,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159889,"byte_end":159892,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159897,"byte_end":159942,"line_start":822,"line_end":822,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159947,"byte_end":159950,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":159955,"byte_end":160025,"line_start":824,"line_end":824,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160030,"byte_end":160039,"line_start":825,"line_end":825,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160044,"byte_end":160051,"line_start":826,"line_end":826,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2936},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161308,"byte_end":161316,"line_start":868,"line_end":868,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160250,"byte_end":160321,"line_start":835,"line_end":835,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160326,"byte_end":160369,"line_start":836,"line_end":836,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160374,"byte_end":160377,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160382,"byte_end":160457,"line_start":838,"line_end":838,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160462,"byte_end":160532,"line_start":839,"line_end":839,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160537,"byte_end":160575,"line_start":840,"line_end":840,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160580,"byte_end":160583,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160588,"byte_end":160663,"line_start":842,"line_end":842,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160668,"byte_end":160711,"line_start":843,"line_end":843,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160716,"byte_end":160719,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160724,"byte_end":160797,"line_start":845,"line_end":845,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160802,"byte_end":160845,"line_start":846,"line_end":846,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160850,"byte_end":160853,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160858,"byte_end":160872,"line_start":848,"line_end":848,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160877,"byte_end":160880,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160885,"byte_end":160892,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160897,"byte_end":160938,"line_start":851,"line_end":851,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160943,"byte_end":160967,"line_start":852,"line_end":852,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":160972,"byte_end":161015,"line_start":853,"line_end":853,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161020,"byte_end":161023,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161028,"byte_end":161046,"line_start":855,"line_end":855,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161051,"byte_end":161054,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161059,"byte_end":161064,"line_start":857,"line_end":857,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161069,"byte_end":161130,"line_start":858,"line_end":858,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161135,"byte_end":161157,"line_start":859,"line_end":859,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161162,"byte_end":161191,"line_start":860,"line_end":860,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161196,"byte_end":161207,"line_start":861,"line_end":861,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161212,"byte_end":161230,"line_start":862,"line_end":862,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161235,"byte_end":161240,"line_start":863,"line_end":863,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161245,"byte_end":161248,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161253,"byte_end":161274,"line_start":865,"line_end":865,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161279,"byte_end":161288,"line_start":866,"line_end":866,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161293,"byte_end":161300,"line_start":867,"line_end":867,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2939},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163522,"byte_end":163541,"line_start":924,"line_end":924,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161535,"byte_end":161606,"line_start":877,"line_end":877,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161611,"byte_end":161685,"line_start":878,"line_end":878,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161690,"byte_end":161704,"line_start":879,"line_end":879,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161709,"byte_end":161712,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161717,"byte_end":161780,"line_start":881,"line_end":881,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161785,"byte_end":161856,"line_start":882,"line_end":882,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161861,"byte_end":161913,"line_start":883,"line_end":883,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161918,"byte_end":161921,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":161926,"byte_end":162001,"line_start":885,"line_end":885,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162006,"byte_end":162076,"line_start":886,"line_end":886,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162081,"byte_end":162145,"line_start":887,"line_end":887,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162150,"byte_end":162153,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162158,"byte_end":162229,"line_start":889,"line_end":889,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162234,"byte_end":162304,"line_start":890,"line_end":890,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162309,"byte_end":162370,"line_start":891,"line_end":891,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162375,"byte_end":162442,"line_start":892,"line_end":892,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162447,"byte_end":162516,"line_start":893,"line_end":893,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162521,"byte_end":162593,"line_start":894,"line_end":894,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162598,"byte_end":162601,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162606,"byte_end":162681,"line_start":896,"line_end":896,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162686,"byte_end":162743,"line_start":897,"line_end":897,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162748,"byte_end":162751,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162756,"byte_end":162770,"line_start":899,"line_end":899,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162775,"byte_end":162778,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162783,"byte_end":162790,"line_start":901,"line_end":901,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162795,"byte_end":162836,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162841,"byte_end":162875,"line_start":903,"line_end":903,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162880,"byte_end":162923,"line_start":904,"line_end":904,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162928,"byte_end":162931,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162936,"byte_end":162976,"line_start":906,"line_end":906,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":162981,"byte_end":163021,"line_start":907,"line_end":907,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163026,"byte_end":163066,"line_start":908,"line_end":908,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163071,"byte_end":163074,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163079,"byte_end":163147,"line_start":910,"line_end":910,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163152,"byte_end":163174,"line_start":911,"line_end":911,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163179,"byte_end":163204,"line_start":912,"line_end":912,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163209,"byte_end":163239,"line_start":913,"line_end":913,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163244,"byte_end":163253,"line_start":914,"line_end":914,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163258,"byte_end":163264,"line_start":915,"line_end":915,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163269,"byte_end":163295,"line_start":916,"line_end":916,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163300,"byte_end":163326,"line_start":917,"line_end":917,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163331,"byte_end":163357,"line_start":918,"line_end":918,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163362,"byte_end":163376,"line_start":919,"line_end":919,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163381,"byte_end":163389,"line_start":920,"line_end":920,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163394,"byte_end":163401,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163489,"byte_end":163514,"line_start":923,"line_end":923,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2943},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164366,"byte_end":164370,"line_start":953,"line_end":953,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163858,"byte_end":163929,"line_start":937,"line_end":937,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163934,"byte_end":163937,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":163942,"byte_end":164015,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164020,"byte_end":164055,"line_start":940,"line_end":940,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164060,"byte_end":164063,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164068,"byte_end":164082,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164087,"byte_end":164090,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164095,"byte_end":164102,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164107,"byte_end":164148,"line_start":945,"line_end":945,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164153,"byte_end":164196,"line_start":946,"line_end":946,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164201,"byte_end":164204,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164209,"byte_end":164255,"line_start":948,"line_end":948,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164260,"byte_end":164263,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164268,"byte_end":164332,"line_start":950,"line_end":950,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164337,"byte_end":164346,"line_start":951,"line_end":951,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164351,"byte_end":164358,"line_start":952,"line_end":952,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2944},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165035,"byte_end":165039,"line_start":976,"line_end":976,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164508,"byte_end":164580,"line_start":960,"line_end":960,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164585,"byte_end":164588,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164593,"byte_end":164666,"line_start":962,"line_end":962,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164671,"byte_end":164717,"line_start":963,"line_end":963,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164722,"byte_end":164725,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164730,"byte_end":164744,"line_start":965,"line_end":965,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164749,"byte_end":164752,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164757,"byte_end":164764,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164769,"byte_end":164810,"line_start":968,"line_end":968,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164815,"byte_end":164858,"line_start":969,"line_end":969,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164863,"byte_end":164866,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164871,"byte_end":164917,"line_start":971,"line_end":971,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164922,"byte_end":164925,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":164930,"byte_end":165001,"line_start":973,"line_end":973,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165006,"byte_end":165015,"line_start":974,"line_end":974,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165020,"byte_end":165027,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166660,"byte_end":166664,"line_start":1022,"line_end":1022,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165177,"byte_end":165248,"line_start":983,"line_end":983,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165253,"byte_end":165326,"line_start":984,"line_end":984,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165331,"byte_end":165369,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165374,"byte_end":165377,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165382,"byte_end":165436,"line_start":987,"line_end":987,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165441,"byte_end":165513,"line_start":988,"line_end":988,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165518,"byte_end":165594,"line_start":989,"line_end":989,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165599,"byte_end":165667,"line_start":990,"line_end":990,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165672,"byte_end":165748,"line_start":991,"line_end":991,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165753,"byte_end":165775,"line_start":992,"line_end":992,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165780,"byte_end":165783,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165788,"byte_end":165855,"line_start":994,"line_end":994,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165860,"byte_end":165928,"line_start":995,"line_end":995,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165933,"byte_end":165946,"line_start":996,"line_end":996,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165951,"byte_end":165954,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165959,"byte_end":165973,"line_start":998,"line_end":998,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165978,"byte_end":165981,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165986,"byte_end":165993,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":165998,"byte_end":166041,"line_start":1001,"line_end":1001,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166046,"byte_end":166089,"line_start":1002,"line_end":1002,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166094,"byte_end":166122,"line_start":1003,"line_end":1003,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166127,"byte_end":166130,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166135,"byte_end":166153,"line_start":1005,"line_end":1005,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166158,"byte_end":166196,"line_start":1006,"line_end":1006,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166201,"byte_end":166216,"line_start":1007,"line_end":1007,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166221,"byte_end":166238,"line_start":1008,"line_end":1008,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166243,"byte_end":166285,"line_start":1009,"line_end":1009,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166290,"byte_end":166325,"line_start":1010,"line_end":1010,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166330,"byte_end":166374,"line_start":1011,"line_end":1011,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166379,"byte_end":166388,"line_start":1012,"line_end":1012,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166393,"byte_end":166407,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166412,"byte_end":166415,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166420,"byte_end":166463,"line_start":1015,"line_end":1015,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166468,"byte_end":166505,"line_start":1016,"line_end":1016,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166510,"byte_end":166547,"line_start":1017,"line_end":1017,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166552,"byte_end":166586,"line_start":1018,"line_end":1018,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166591,"byte_end":166625,"line_start":1019,"line_end":1019,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166630,"byte_end":166640,"line_start":1020,"line_end":1020,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166645,"byte_end":166652,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2946},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167593,"byte_end":167599,"line_start":1055,"line_end":1055,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166789,"byte_end":166836,"line_start":1029,"line_end":1029,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166841,"byte_end":166844,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166849,"byte_end":166923,"line_start":1031,"line_end":1031,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166928,"byte_end":166965,"line_start":1032,"line_end":1032,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166970,"byte_end":166973,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166978,"byte_end":166992,"line_start":1034,"line_end":1034,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":166997,"byte_end":167000,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167005,"byte_end":167012,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167017,"byte_end":167058,"line_start":1037,"line_end":1037,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167063,"byte_end":167106,"line_start":1038,"line_end":1038,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167111,"byte_end":167114,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167119,"byte_end":167159,"line_start":1040,"line_end":1040,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167164,"byte_end":167167,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167172,"byte_end":167201,"line_start":1042,"line_end":1042,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167206,"byte_end":167234,"line_start":1043,"line_end":1043,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167239,"byte_end":167296,"line_start":1044,"line_end":1044,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167301,"byte_end":167328,"line_start":1045,"line_end":1045,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167333,"byte_end":167356,"line_start":1046,"line_end":1046,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167361,"byte_end":167364,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167369,"byte_end":167404,"line_start":1048,"line_end":1048,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167409,"byte_end":167437,"line_start":1049,"line_end":1049,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167442,"byte_end":167499,"line_start":1050,"line_end":1050,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167504,"byte_end":167531,"line_start":1051,"line_end":1051,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167536,"byte_end":167559,"line_start":1052,"line_end":1052,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167564,"byte_end":167573,"line_start":1053,"line_end":1053,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":167578,"byte_end":167585,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2947},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":169746,"byte_end":169751,"line_start":1112,"line_end":1112,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":169517,"byte_end":169558,"line_start":1107,"line_end":1107,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":169563,"byte_end":169566,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":169571,"byte_end":169646,"line_start":1109,"line_end":1109,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":169651,"byte_end":169708,"line_start":1110,"line_end":1110,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":169713,"byte_end":169738,"line_start":1111,"line_end":1111,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2949},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170207,"byte_end":170218,"line_start":1126,"line_end":1126,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":169906,"byte_end":169947,"line_start":1119,"line_end":1119,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":169952,"byte_end":169955,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":169960,"byte_end":170019,"line_start":1121,"line_end":1121,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170024,"byte_end":170027,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170032,"byte_end":170107,"line_start":1123,"line_end":1123,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170112,"byte_end":170169,"line_start":1124,"line_end":1124,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170174,"byte_end":170199,"line_start":1125,"line_end":1125,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":171155,"byte_end":171163,"line_start":1147,"line_end":1147,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170371,"byte_end":170434,"line_start":1133,"line_end":1133,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170439,"byte_end":170442,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170447,"byte_end":170522,"line_start":1135,"line_end":1135,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170527,"byte_end":170603,"line_start":1136,"line_end":1136,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170608,"byte_end":170681,"line_start":1137,"line_end":1137,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170686,"byte_end":170759,"line_start":1138,"line_end":1138,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170764,"byte_end":170806,"line_start":1139,"line_end":1139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170811,"byte_end":170814,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170819,"byte_end":170884,"line_start":1141,"line_end":1141,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170889,"byte_end":170892,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170897,"byte_end":170972,"line_start":1143,"line_end":1143,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":170977,"byte_end":171034,"line_start":1144,"line_end":1144,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":171122,"byte_end":171147,"line_start":1146,"line_end":1146,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2952},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172887,"byte_end":172903,"line_start":1192,"line_end":1192,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":171357,"byte_end":171432,"line_start":1155,"line_end":1155,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":171437,"byte_end":171440,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":171445,"byte_end":171520,"line_start":1157,"line_end":1157,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":171525,"byte_end":171599,"line_start":1158,"line_end":1158,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":171604,"byte_end":171676,"line_start":1159,"line_end":1159,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":171681,"byte_end":171755,"line_start":1160,"line_end":1160,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":171760,"byte_end":171789,"line_start":1161,"line_end":1161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":171794,"byte_end":171797,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":171802,"byte_end":171867,"line_start":1163,"line_end":1163,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":171872,"byte_end":171875,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":171880,"byte_end":171955,"line_start":1165,"line_end":1165,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":171960,"byte_end":172017,"line_start":1166,"line_end":1166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172022,"byte_end":172025,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172030,"byte_end":172044,"line_start":1168,"line_end":1168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172049,"byte_end":172052,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172057,"byte_end":172064,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172069,"byte_end":172110,"line_start":1171,"line_end":1171,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172115,"byte_end":172149,"line_start":1172,"line_end":1172,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172154,"byte_end":172197,"line_start":1173,"line_end":1173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172202,"byte_end":172205,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172210,"byte_end":172260,"line_start":1175,"line_end":1175,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172265,"byte_end":172315,"line_start":1176,"line_end":1176,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172320,"byte_end":172323,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172328,"byte_end":172395,"line_start":1178,"line_end":1178,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172400,"byte_end":172462,"line_start":1179,"line_end":1179,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172467,"byte_end":172470,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172475,"byte_end":172500,"line_start":1181,"line_end":1181,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172505,"byte_end":172559,"line_start":1182,"line_end":1182,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172564,"byte_end":172567,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172572,"byte_end":172597,"line_start":1184,"line_end":1184,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172602,"byte_end":172656,"line_start":1185,"line_end":1185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172661,"byte_end":172664,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172669,"byte_end":172713,"line_start":1187,"line_end":1187,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172718,"byte_end":172754,"line_start":1188,"line_end":1188,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172759,"byte_end":172766,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":172854,"byte_end":172879,"line_start":1191,"line_end":1191,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173799,"byte_end":173802,"line_start":1222,"line_end":1222,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173111,"byte_end":173159,"line_start":1200,"line_end":1200,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173164,"byte_end":173167,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173172,"byte_end":173245,"line_start":1202,"line_end":1202,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173250,"byte_end":173322,"line_start":1203,"line_end":1203,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173327,"byte_end":173340,"line_start":1204,"line_end":1204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173345,"byte_end":173348,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173353,"byte_end":173367,"line_start":1206,"line_end":1206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173372,"byte_end":173375,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173380,"byte_end":173387,"line_start":1208,"line_end":1208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173392,"byte_end":173433,"line_start":1209,"line_end":1209,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173438,"byte_end":173481,"line_start":1210,"line_end":1210,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173486,"byte_end":173489,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173494,"byte_end":173532,"line_start":1212,"line_end":1212,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173537,"byte_end":173576,"line_start":1213,"line_end":1213,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173581,"byte_end":173584,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173589,"byte_end":173623,"line_start":1215,"line_end":1215,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173628,"byte_end":173669,"line_start":1216,"line_end":1216,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173674,"byte_end":173702,"line_start":1217,"line_end":1217,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173707,"byte_end":173757,"line_start":1218,"line_end":1218,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173762,"byte_end":173771,"line_start":1219,"line_end":1219,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173776,"byte_end":173783,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173788,"byte_end":173791,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2955},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174710,"byte_end":174715,"line_start":1253,"line_end":1253,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":173983,"byte_end":174020,"line_start":1230,"line_end":1230,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174025,"byte_end":174028,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174033,"byte_end":174104,"line_start":1232,"line_end":1232,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174109,"byte_end":174185,"line_start":1233,"line_end":1233,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174190,"byte_end":174193,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174198,"byte_end":174205,"line_start":1235,"line_end":1235,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174210,"byte_end":174251,"line_start":1236,"line_end":1236,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174256,"byte_end":174299,"line_start":1237,"line_end":1237,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174304,"byte_end":174307,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174312,"byte_end":174369,"line_start":1239,"line_end":1239,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174374,"byte_end":174430,"line_start":1240,"line_end":1240,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174435,"byte_end":174438,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174443,"byte_end":174483,"line_start":1242,"line_end":1242,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174488,"byte_end":174491,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174496,"byte_end":174544,"line_start":1244,"line_end":1244,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174549,"byte_end":174577,"line_start":1245,"line_end":1245,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174582,"byte_end":174597,"line_start":1246,"line_end":1246,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174602,"byte_end":174621,"line_start":1247,"line_end":1247,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174626,"byte_end":174644,"line_start":1248,"line_end":1248,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174649,"byte_end":174664,"line_start":1249,"line_end":1249,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174669,"byte_end":174676,"line_start":1250,"line_end":1250,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174681,"byte_end":174690,"line_start":1251,"line_end":1251,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174695,"byte_end":174702,"line_start":1252,"line_end":1252,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175053,"byte_end":175061,"line_start":1264,"line_end":1264,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174907,"byte_end":174962,"line_start":1261,"line_end":1261,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174967,"byte_end":174970,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":174975,"byte_end":175045,"line_start":1263,"line_end":1263,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2958},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176096,"byte_end":176102,"line_start":1290,"line_end":1290,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175194,"byte_end":175261,"line_start":1271,"line_end":1271,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175266,"byte_end":175269,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175274,"byte_end":175348,"line_start":1273,"line_end":1273,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175353,"byte_end":175425,"line_start":1274,"line_end":1274,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175430,"byte_end":175482,"line_start":1275,"line_end":1275,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175487,"byte_end":175490,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175495,"byte_end":175568,"line_start":1277,"line_end":1277,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175573,"byte_end":175647,"line_start":1278,"line_end":1278,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175652,"byte_end":175727,"line_start":1279,"line_end":1279,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175732,"byte_end":175804,"line_start":1280,"line_end":1280,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175809,"byte_end":175821,"line_start":1281,"line_end":1281,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175826,"byte_end":175829,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175834,"byte_end":175909,"line_start":1283,"line_end":1283,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175914,"byte_end":175971,"line_start":1284,"line_end":1284,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175976,"byte_end":175979,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":175984,"byte_end":175996,"line_start":1286,"line_end":1286,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176001,"byte_end":176004,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176009,"byte_end":176058,"line_start":1288,"line_end":1288,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176063,"byte_end":176088,"line_start":1289,"line_end":1289,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2959},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":177199,"byte_end":177211,"line_start":1316,"line_end":1316,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176263,"byte_end":176336,"line_start":1297,"line_end":1297,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176341,"byte_end":176344,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176349,"byte_end":176422,"line_start":1299,"line_end":1299,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176427,"byte_end":176497,"line_start":1300,"line_end":1300,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176502,"byte_end":176577,"line_start":1301,"line_end":1301,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176582,"byte_end":176659,"line_start":1302,"line_end":1302,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176664,"byte_end":176692,"line_start":1303,"line_end":1303,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176697,"byte_end":176700,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176705,"byte_end":176778,"line_start":1305,"line_end":1305,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176783,"byte_end":176858,"line_start":1306,"line_end":1306,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176863,"byte_end":176924,"line_start":1307,"line_end":1307,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176929,"byte_end":176932,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":176937,"byte_end":177012,"line_start":1309,"line_end":1309,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":177017,"byte_end":177074,"line_start":1310,"line_end":1310,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":177079,"byte_end":177082,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":177087,"byte_end":177099,"line_start":1312,"line_end":1312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":177104,"byte_end":177107,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":177112,"byte_end":177161,"line_start":1314,"line_end":1314,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":177166,"byte_end":177191,"line_start":1315,"line_end":1315,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":179933,"byte_end":179940,"line_start":1375,"line_end":1375,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":179630,"byte_end":179703,"line_start":1370,"line_end":1370,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":179708,"byte_end":179711,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":179716,"byte_end":179785,"line_start":1372,"line_end":1372,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":179790,"byte_end":179859,"line_start":1373,"line_end":1373,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":179864,"byte_end":179925,"line_start":1374,"line_end":1374,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2962},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":180396,"byte_end":180407,"line_start":1388,"line_end":1388,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":180117,"byte_end":180192,"line_start":1383,"line_end":1383,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":180197,"byte_end":180218,"line_start":1384,"line_end":1384,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":180223,"byte_end":180226,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":180231,"byte_end":180311,"line_start":1386,"line_end":1386,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":180316,"byte_end":180388,"line_start":1387,"line_end":1387,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2964},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":180860,"byte_end":180872,"line_start":1401,"line_end":1401,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":180581,"byte_end":180657,"line_start":1396,"line_end":1396,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":180662,"byte_end":180683,"line_start":1397,"line_end":1397,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":180688,"byte_end":180691,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":180696,"byte_end":180775,"line_start":1399,"line_end":1399,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":180780,"byte_end":180852,"line_start":1400,"line_end":1400,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2966},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":181148,"byte_end":181163,"line_start":1411,"line_end":1411,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":181047,"byte_end":181118,"line_start":1409,"line_end":1409,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":181123,"byte_end":181140,"line_start":1410,"line_end":1410,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2967},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":183264,"byte_end":183280,"line_start":1466,"line_end":1466,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":181310,"byte_end":181385,"line_start":1418,"line_end":1418,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":181390,"byte_end":181400,"line_start":1419,"line_end":1419,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":181405,"byte_end":181408,"line_start":1420,"line_end":1420,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":181413,"byte_end":181486,"line_start":1421,"line_end":1421,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":181491,"byte_end":181559,"line_start":1422,"line_end":1422,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":181564,"byte_end":181612,"line_start":1423,"line_end":1423,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":181617,"byte_end":181692,"line_start":1424,"line_end":1424,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":181697,"byte_end":181773,"line_start":1425,"line_end":1425,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":181778,"byte_end":181804,"line_start":1426,"line_end":1426,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":181809,"byte_end":181812,"line_start":1427,"line_end":1427,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":181817,"byte_end":181890,"line_start":1428,"line_end":1428,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":181895,"byte_end":181965,"line_start":1429,"line_end":1429,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":181970,"byte_end":182010,"line_start":1430,"line_end":1430,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182015,"byte_end":182018,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182023,"byte_end":182077,"line_start":1432,"line_end":1432,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182082,"byte_end":182166,"line_start":1433,"line_end":1433,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182171,"byte_end":182174,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182179,"byte_end":182193,"line_start":1435,"line_end":1435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182198,"byte_end":182201,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182206,"byte_end":182213,"line_start":1437,"line_end":1437,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182218,"byte_end":182259,"line_start":1438,"line_end":1438,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182264,"byte_end":182298,"line_start":1439,"line_end":1439,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182303,"byte_end":182358,"line_start":1440,"line_end":1440,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182363,"byte_end":182366,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182371,"byte_end":182406,"line_start":1442,"line_end":1442,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182411,"byte_end":182461,"line_start":1443,"line_end":1443,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182466,"byte_end":182488,"line_start":1444,"line_end":1444,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182493,"byte_end":182503,"line_start":1445,"line_end":1445,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182508,"byte_end":182525,"line_start":1446,"line_end":1446,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182530,"byte_end":182556,"line_start":1447,"line_end":1447,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182561,"byte_end":182616,"line_start":1448,"line_end":1448,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182621,"byte_end":182650,"line_start":1449,"line_end":1449,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182655,"byte_end":182718,"line_start":1450,"line_end":1450,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182723,"byte_end":182769,"line_start":1451,"line_end":1451,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182774,"byte_end":182788,"line_start":1452,"line_end":1452,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182793,"byte_end":182862,"line_start":1453,"line_end":1453,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182867,"byte_end":182892,"line_start":1454,"line_end":1454,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182897,"byte_end":182950,"line_start":1455,"line_end":1455,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182955,"byte_end":182984,"line_start":1456,"line_end":1456,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":182989,"byte_end":183002,"line_start":1457,"line_end":1457,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":183007,"byte_end":183077,"line_start":1458,"line_end":1458,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":183082,"byte_end":183141,"line_start":1459,"line_end":1459,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":183146,"byte_end":183176,"line_start":1460,"line_end":1460,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":183181,"byte_end":183190,"line_start":1461,"line_end":1461,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":183195,"byte_end":183200,"line_start":1462,"line_end":1462,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":183205,"byte_end":183230,"line_start":1463,"line_end":1463,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":183235,"byte_end":183244,"line_start":1464,"line_end":1464,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":183249,"byte_end":183256,"line_start":1465,"line_end":1465,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8946},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/and_then.rs","byte_start":290762,"byte_end":290769,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":8950},{"krate":0,"index":8951},{"krate":0,"index":8952}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9010},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":254862,"byte_end":254869,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":9013}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9079},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":255117,"byte_end":255126,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":9082}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9148},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":255427,"byte_end":255437,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":9151}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9219},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/into_stream.rs","byte_start":293570,"byte_end":293580,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":9221}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9257},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":255863,"byte_end":255868,"line_start":52,"line_end":52,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":9260}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9326},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":256145,"byte_end":256151,"line_start":59,"line_end":59,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":9329}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9392},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/or_else.rs","byte_start":294951,"byte_end":294957,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9396},{"krate":0,"index":9397},{"krate":0,"index":9398}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9453},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_next.rs","byte_start":297853,"byte_end":297860,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":9456}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_next.rs","byte_start":297686,"byte_end":297756,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_next.rs","byte_start":297774,"byte_end":297841,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9461},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_for_each.rs","byte_start":298968,"byte_end":298978,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":9465},{"krate":0,"index":9466},{"krate":0,"index":9467}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9518},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter.rs","byte_start":300921,"byte_end":300930,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":9522},{"krate":0,"index":9523},{"krate":0,"index":9524},{"krate":0,"index":9525}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9583},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter_map.rs","byte_start":304170,"byte_end":304182,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":9587},{"krate":0,"index":9588},{"krate":0,"index":9589}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9649},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_flatten.rs","byte_start":307234,"byte_end":307244,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9651},{"krate":0,"index":9652}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9695},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_collect.rs","byte_start":309422,"byte_end":309432,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":9698},{"krate":0,"index":9699}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9742},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_concat.rs","byte_start":310837,"byte_end":310846,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":9744},{"krate":0,"index":9745}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9777},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_fold.rs","byte_start":312293,"byte_end":312300,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":9782},{"krate":0,"index":9783},{"krate":0,"index":9784},{"krate":0,"index":9785}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3717},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316829,"byte_end":316839,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":314972,"byte_end":315048,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315049,"byte_end":315052,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315053,"byte_end":315129,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315130,"byte_end":315200,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315201,"byte_end":315260,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315261,"byte_end":315264,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315265,"byte_end":315343,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315344,"byte_end":315421,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315422,"byte_end":315486,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315487,"byte_end":315490,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315491,"byte_end":315563,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315564,"byte_end":315642,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315643,"byte_end":315672,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315673,"byte_end":315676,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315677,"byte_end":315754,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315755,"byte_end":315819,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315820,"byte_end":315872,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315873,"byte_end":315876,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315877,"byte_end":315954,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":315955,"byte_end":316027,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316028,"byte_end":316097,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316098,"byte_end":316176,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316177,"byte_end":316180,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316181,"byte_end":316194,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316195,"byte_end":316198,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316199,"byte_end":316206,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316207,"byte_end":316240,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316241,"byte_end":316264,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316265,"byte_end":316306,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316307,"byte_end":316353,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316354,"byte_end":316357,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316358,"byte_end":316417,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316418,"byte_end":316440,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316441,"byte_end":316475,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316476,"byte_end":316485,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316486,"byte_end":316489,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316490,"byte_end":316513,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316514,"byte_end":316553,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316554,"byte_end":316590,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316591,"byte_end":316634,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316635,"byte_end":316651,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316652,"byte_end":316672,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316673,"byte_end":316682,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316683,"byte_end":316690,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316691,"byte_end":316694,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316695,"byte_end":316760,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316761,"byte_end":316803,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316804,"byte_end":316813,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":316814,"byte_end":316821,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9846},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":317231,"byte_end":317240,"line_start":74,"line_end":74,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":9850},{"krate":0,"index":9851},{"krate":0,"index":9852}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9903},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_skip_while.rs","byte_start":319210,"byte_end":319222,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":9907},{"krate":0,"index":9908},{"krate":0,"index":9909},{"krate":0,"index":9910},{"krate":0,"index":9911}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9972},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_take_while.rs","byte_start":322894,"byte_end":322906,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":9976},{"krate":0,"index":9977},{"krate":0,"index":9978},{"krate":0,"index":9979},{"krate":0,"index":9980}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11373},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_buffer_unordered.rs","byte_start":10308541,"byte_end":10308559,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11375},{"krate":0,"index":11376},{"krate":0,"index":11377}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11329},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_buffered.rs","byte_start":10311140,"byte_end":10311151,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":11331},{"krate":0,"index":11332},{"krate":0,"index":11333}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11263},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10313706,"byte_end":10313726,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11267},{"krate":0,"index":11268},{"krate":0,"index":11269},{"krate":0,"index":11270}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3859},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259037,"byte_end":259049,"line_start":144,"line_end":144,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":3860},{"krate":0,"index":3862},{"krate":0,"index":3865},{"krate":0,"index":3868},{"krate":0,"index":3871},{"krate":0,"index":3874},{"krate":0,"index":3876},{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3883},{"krate":0,"index":3886},{"krate":0,"index":3889},{"krate":0,"index":3893},{"krate":0,"index":3895},{"krate":0,"index":3898},{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":3910}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":258975,"byte_end":259026,"line_start":143,"line_end":143,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3860},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259591,"byte_end":259599,"line_start":162,"line_end":162,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259067,"byte_end":259141,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259146,"byte_end":259172,"line_start":146,"line_end":146,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259177,"byte_end":259180,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259185,"byte_end":259199,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259204,"byte_end":259207,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259212,"byte_end":259219,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259224,"byte_end":259265,"line_start":151,"line_end":151,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259270,"byte_end":259316,"line_start":152,"line_end":152,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259321,"byte_end":259324,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259329,"byte_end":259349,"line_start":154,"line_end":154,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259354,"byte_end":259399,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259404,"byte_end":259435,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259440,"byte_end":259443,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259448,"byte_end":259502,"line_start":158,"line_end":158,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259507,"byte_end":259558,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259563,"byte_end":259571,"line_start":160,"line_end":160,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259576,"byte_end":259583,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3862},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260295,"byte_end":260301,"line_start":187,"line_end":187,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259775,"byte_end":259848,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259853,"byte_end":259884,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259889,"byte_end":259892,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259897,"byte_end":259911,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259916,"byte_end":259919,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259924,"byte_end":259931,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259936,"byte_end":259977,"line_start":176,"line_end":176,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259982,"byte_end":260028,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260033,"byte_end":260036,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260041,"byte_end":260061,"line_start":179,"line_end":179,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260066,"byte_end":260107,"line_start":180,"line_end":180,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260112,"byte_end":260143,"line_start":181,"line_end":181,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260148,"byte_end":260151,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260156,"byte_end":260209,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260214,"byte_end":260262,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260267,"byte_end":260275,"line_start":185,"line_end":185,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260280,"byte_end":260287,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3865},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261010,"byte_end":261017,"line_start":212,"line_end":212,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260491,"byte_end":260562,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260567,"byte_end":260598,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260603,"byte_end":260606,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260611,"byte_end":260625,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260630,"byte_end":260633,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260638,"byte_end":260645,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260650,"byte_end":260691,"line_start":201,"line_end":201,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260696,"byte_end":260742,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260747,"byte_end":260750,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260755,"byte_end":260775,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260780,"byte_end":260821,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260826,"byte_end":260858,"line_start":206,"line_end":206,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260863,"byte_end":260866,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260871,"byte_end":260924,"line_start":208,"line_end":208,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260929,"byte_end":260977,"line_start":209,"line_end":209,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260982,"byte_end":260990,"line_start":210,"line_end":210,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":260995,"byte_end":261002,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3868},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262622,"byte_end":262630,"line_start":258,"line_end":258,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261209,"byte_end":261285,"line_start":220,"line_end":220,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261290,"byte_end":261330,"line_start":221,"line_end":221,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261335,"byte_end":261338,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261343,"byte_end":261419,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261424,"byte_end":261500,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261505,"byte_end":261578,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261583,"byte_end":261625,"line_start":226,"line_end":226,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261630,"byte_end":261633,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261638,"byte_end":261711,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261716,"byte_end":261747,"line_start":229,"line_end":229,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261752,"byte_end":261755,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261760,"byte_end":261834,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261839,"byte_end":261913,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261918,"byte_end":261934,"line_start":233,"line_end":233,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261939,"byte_end":261942,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":261947,"byte_end":262018,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262023,"byte_end":262049,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262054,"byte_end":262057,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262062,"byte_end":262134,"line_start":238,"line_end":238,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262139,"byte_end":262188,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262193,"byte_end":262196,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262201,"byte_end":262215,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262220,"byte_end":262223,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262228,"byte_end":262235,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262240,"byte_end":262271,"line_start":244,"line_end":244,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262276,"byte_end":262300,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262305,"byte_end":262343,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262348,"byte_end":262351,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262356,"byte_end":262412,"line_start":248,"line_end":248,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262417,"byte_end":262420,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262425,"byte_end":262460,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262465,"byte_end":262504,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262509,"byte_end":262533,"line_start":252,"line_end":252,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262538,"byte_end":262554,"line_start":253,"line_end":253,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262559,"byte_end":262575,"line_start":254,"line_end":254,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262580,"byte_end":262590,"line_start":255,"line_end":255,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262595,"byte_end":262602,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262607,"byte_end":262614,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3871},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":263782,"byte_end":263789,"line_start":284,"line_end":284,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262883,"byte_end":262948,"line_start":267,"line_end":267,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":262953,"byte_end":263002,"line_start":268,"line_end":268,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":263007,"byte_end":263010,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":263015,"byte_end":263094,"line_start":270,"line_end":270,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":263099,"byte_end":263173,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":263178,"byte_end":263254,"line_start":272,"line_end":272,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":263259,"byte_end":263304,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":263309,"byte_end":263312,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":263317,"byte_end":263392,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":263397,"byte_end":263437,"line_start":276,"line_end":276,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":263442,"byte_end":263445,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":263450,"byte_end":263559,"line_start":278,"line_end":278,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":263564,"byte_end":263638,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":263643,"byte_end":263659,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":263664,"byte_end":263667,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":263672,"byte_end":263743,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":263748,"byte_end":263774,"line_start":283,"line_end":283,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3874},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":264341,"byte_end":264351,"line_start":299,"line_end":299,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":264038,"byte_end":264112,"line_start":293,"line_end":293,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":264117,"byte_end":264127,"line_start":294,"line_end":294,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":264132,"byte_end":264135,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":264140,"byte_end":264210,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":264215,"byte_end":264291,"line_start":297,"line_end":297,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":264296,"byte_end":264333,"line_start":298,"line_end":298,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3876},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":264840,"byte_end":264851,"line_start":312,"line_end":312,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":264549,"byte_end":264628,"line_start":307,"line_end":307,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":264633,"byte_end":264636,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":264641,"byte_end":264711,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":264716,"byte_end":264790,"line_start":310,"line_end":310,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":264795,"byte_end":264832,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3878},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265772,"byte_end":265783,"line_start":341,"line_end":341,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265054,"byte_end":265107,"line_start":320,"line_end":320,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265112,"byte_end":265156,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265161,"byte_end":265164,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265169,"byte_end":265218,"line_start":323,"line_end":323,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265223,"byte_end":265296,"line_start":324,"line_end":324,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265301,"byte_end":265321,"line_start":325,"line_end":325,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265326,"byte_end":265329,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265334,"byte_end":265348,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265353,"byte_end":265356,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265361,"byte_end":265368,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265373,"byte_end":265432,"line_start":330,"line_end":330,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265437,"byte_end":265440,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265445,"byte_end":265464,"line_start":332,"line_end":332,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265469,"byte_end":265487,"line_start":333,"line_end":333,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265492,"byte_end":265564,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265569,"byte_end":265599,"line_start":335,"line_end":335,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265604,"byte_end":265611,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265616,"byte_end":265690,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265695,"byte_end":265698,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265703,"byte_end":265752,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265757,"byte_end":265764,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3879},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266678,"byte_end":266686,"line_start":368,"line_end":368,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":265939,"byte_end":266013,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266018,"byte_end":266092,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266097,"byte_end":266109,"line_start":350,"line_end":350,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266114,"byte_end":266117,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266122,"byte_end":266189,"line_start":352,"line_end":352,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266194,"byte_end":266266,"line_start":353,"line_end":353,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266271,"byte_end":266310,"line_start":354,"line_end":354,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266315,"byte_end":266318,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266323,"byte_end":266337,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266342,"byte_end":266345,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266350,"byte_end":266357,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266362,"byte_end":266403,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266408,"byte_end":266454,"line_start":360,"line_end":360,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266459,"byte_end":266462,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266467,"byte_end":266524,"line_start":362,"line_end":362,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266529,"byte_end":266532,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266537,"byte_end":266591,"line_start":364,"line_end":364,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266596,"byte_end":266645,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266650,"byte_end":266658,"line_start":366,"line_end":366,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266663,"byte_end":266670,"line_start":367,"line_end":367,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3880},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268038,"byte_end":268050,"line_start":408,"line_end":408,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266853,"byte_end":266922,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266927,"byte_end":266983,"line_start":376,"line_end":376,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266988,"byte_end":266991,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":266996,"byte_end":267071,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267076,"byte_end":267146,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267151,"byte_end":267189,"line_start":380,"line_end":380,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267194,"byte_end":267197,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267202,"byte_end":267280,"line_start":382,"line_end":382,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267285,"byte_end":267345,"line_start":383,"line_end":383,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267350,"byte_end":267407,"line_start":384,"line_end":384,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267412,"byte_end":267479,"line_start":385,"line_end":385,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267484,"byte_end":267514,"line_start":386,"line_end":386,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267519,"byte_end":267522,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267527,"byte_end":267541,"line_start":388,"line_end":388,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267546,"byte_end":267549,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267554,"byte_end":267561,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267566,"byte_end":267607,"line_start":391,"line_end":391,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267612,"byte_end":267636,"line_start":392,"line_end":392,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267641,"byte_end":267687,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267692,"byte_end":267695,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267700,"byte_end":267721,"line_start":395,"line_end":395,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267726,"byte_end":267729,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267734,"byte_end":267739,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267744,"byte_end":267805,"line_start":398,"line_end":398,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267810,"byte_end":267832,"line_start":399,"line_end":399,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267837,"byte_end":267901,"line_start":400,"line_end":400,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267906,"byte_end":267917,"line_start":401,"line_end":401,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267922,"byte_end":267961,"line_start":402,"line_end":402,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267966,"byte_end":267971,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267976,"byte_end":267979,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":267984,"byte_end":268005,"line_start":405,"line_end":405,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268010,"byte_end":268018,"line_start":406,"line_end":406,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268023,"byte_end":268030,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3883},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269063,"byte_end":269077,"line_start":438,"line_end":438,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268314,"byte_end":268388,"line_start":417,"line_end":417,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268393,"byte_end":268416,"line_start":418,"line_end":418,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268421,"byte_end":268424,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268429,"byte_end":268460,"line_start":420,"line_end":420,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268465,"byte_end":268542,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268547,"byte_end":268576,"line_start":422,"line_end":422,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268581,"byte_end":268584,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268589,"byte_end":268603,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268608,"byte_end":268611,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268616,"byte_end":268623,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268628,"byte_end":268669,"line_start":427,"line_end":427,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268674,"byte_end":268698,"line_start":428,"line_end":428,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268703,"byte_end":268749,"line_start":429,"line_end":429,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268754,"byte_end":268757,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268762,"byte_end":268831,"line_start":431,"line_end":431,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268836,"byte_end":268906,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268911,"byte_end":268914,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268919,"byte_end":268986,"line_start":434,"line_end":434,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":268991,"byte_end":269030,"line_start":435,"line_end":435,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269035,"byte_end":269043,"line_start":436,"line_end":436,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269048,"byte_end":269055,"line_start":437,"line_end":437,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3886},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":270110,"byte_end":270124,"line_start":468,"line_end":468,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269354,"byte_end":269428,"line_start":447,"line_end":447,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269433,"byte_end":269456,"line_start":448,"line_end":448,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269461,"byte_end":269464,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269469,"byte_end":269500,"line_start":450,"line_end":450,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269505,"byte_end":269582,"line_start":451,"line_end":451,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269587,"byte_end":269616,"line_start":452,"line_end":452,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269621,"byte_end":269624,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269629,"byte_end":269643,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269648,"byte_end":269651,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269656,"byte_end":269663,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269668,"byte_end":269709,"line_start":457,"line_end":457,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269714,"byte_end":269738,"line_start":458,"line_end":458,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269743,"byte_end":269789,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269794,"byte_end":269797,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269802,"byte_end":269878,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269883,"byte_end":269953,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269958,"byte_end":269961,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":269966,"byte_end":270033,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":270038,"byte_end":270077,"line_start":465,"line_end":465,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":270082,"byte_end":270090,"line_start":466,"line_end":466,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":270095,"byte_end":270102,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3889},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":272083,"byte_end":272106,"line_start":520,"line_end":520,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":270401,"byte_end":270483,"line_start":477,"line_end":477,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":270488,"byte_end":270562,"line_start":478,"line_end":478,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":270567,"byte_end":270617,"line_start":479,"line_end":479,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":270622,"byte_end":270625,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":270630,"byte_end":270652,"line_start":481,"line_end":481,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":270657,"byte_end":270743,"line_start":482,"line_end":482,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":270748,"byte_end":270833,"line_start":483,"line_end":483,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":270838,"byte_end":270866,"line_start":484,"line_end":484,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":270871,"byte_end":270874,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":270879,"byte_end":270954,"line_start":486,"line_end":486,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":270959,"byte_end":271016,"line_start":487,"line_end":487,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271021,"byte_end":271024,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271029,"byte_end":271043,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271048,"byte_end":271051,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271056,"byte_end":271063,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271068,"byte_end":271109,"line_start":492,"line_end":492,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271114,"byte_end":271148,"line_start":493,"line_end":493,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271153,"byte_end":271210,"line_start":494,"line_end":494,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271215,"byte_end":271218,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271223,"byte_end":271263,"line_start":496,"line_end":496,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271268,"byte_end":271308,"line_start":497,"line_end":497,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271313,"byte_end":271354,"line_start":498,"line_end":498,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271359,"byte_end":271362,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271367,"byte_end":271418,"line_start":500,"line_end":500,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271423,"byte_end":271476,"line_start":501,"line_end":501,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271481,"byte_end":271503,"line_start":502,"line_end":502,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271508,"byte_end":271533,"line_start":503,"line_end":503,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271538,"byte_end":271600,"line_start":504,"line_end":504,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271605,"byte_end":271620,"line_start":505,"line_end":505,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271625,"byte_end":271634,"line_start":506,"line_end":506,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271639,"byte_end":271645,"line_start":507,"line_end":507,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271650,"byte_end":271653,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271658,"byte_end":271684,"line_start":509,"line_end":509,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271689,"byte_end":271756,"line_start":510,"line_end":510,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271761,"byte_end":271775,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271780,"byte_end":271783,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271788,"byte_end":271849,"line_start":513,"line_end":513,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271854,"byte_end":271882,"line_start":514,"line_end":514,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271887,"byte_end":271937,"line_start":515,"line_end":515,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271942,"byte_end":271950,"line_start":516,"line_end":516,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":271955,"byte_end":271962,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":272050,"byte_end":272075,"line_start":519,"line_end":519,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3893},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273555,"byte_end":273566,"line_start":567,"line_end":567,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":272516,"byte_end":272568,"line_start":537,"line_end":537,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":272573,"byte_end":272640,"line_start":538,"line_end":538,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":272645,"byte_end":272648,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":272653,"byte_end":272727,"line_start":540,"line_end":540,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":272732,"byte_end":272813,"line_start":541,"line_end":541,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":272818,"byte_end":272888,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":272893,"byte_end":272896,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":272901,"byte_end":272969,"line_start":544,"line_end":544,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":272974,"byte_end":272977,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":272982,"byte_end":272996,"line_start":546,"line_end":546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273001,"byte_end":273004,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273009,"byte_end":273016,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273021,"byte_end":273062,"line_start":549,"line_end":549,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273067,"byte_end":273098,"line_start":550,"line_end":550,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273103,"byte_end":273141,"line_start":551,"line_end":551,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273146,"byte_end":273166,"line_start":552,"line_end":552,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273171,"byte_end":273174,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273179,"byte_end":273216,"line_start":554,"line_end":554,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273221,"byte_end":273224,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273229,"byte_end":273256,"line_start":556,"line_end":556,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273261,"byte_end":273285,"line_start":557,"line_end":557,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273290,"byte_end":273336,"line_start":558,"line_end":558,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273341,"byte_end":273350,"line_start":559,"line_end":559,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273355,"byte_end":273398,"line_start":560,"line_end":560,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273403,"byte_end":273410,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273415,"byte_end":273418,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273423,"byte_end":273486,"line_start":563,"line_end":563,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273491,"byte_end":273522,"line_start":564,"line_end":564,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273527,"byte_end":273535,"line_start":565,"line_end":565,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273540,"byte_end":273547,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3895},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":275037,"byte_end":275047,"line_start":604,"line_end":604,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273749,"byte_end":273822,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273827,"byte_end":273861,"line_start":575,"line_end":575,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273866,"byte_end":273869,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273874,"byte_end":273949,"line_start":577,"line_end":577,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":273954,"byte_end":274029,"line_start":578,"line_end":578,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274034,"byte_end":274107,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274112,"byte_end":274183,"line_start":580,"line_end":580,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274188,"byte_end":274238,"line_start":581,"line_end":581,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274243,"byte_end":274246,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274251,"byte_end":274322,"line_start":583,"line_end":583,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274327,"byte_end":274330,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274335,"byte_end":274411,"line_start":585,"line_end":585,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274416,"byte_end":274486,"line_start":586,"line_end":586,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274491,"byte_end":274516,"line_start":587,"line_end":587,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274521,"byte_end":274524,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274529,"byte_end":274543,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274548,"byte_end":274555,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274560,"byte_end":274601,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274606,"byte_end":274630,"line_start":592,"line_end":592,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274635,"byte_end":274692,"line_start":593,"line_end":593,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274697,"byte_end":274700,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274705,"byte_end":274785,"line_start":595,"line_end":595,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274790,"byte_end":274833,"line_start":596,"line_end":596,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274838,"byte_end":274871,"line_start":597,"line_end":597,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274876,"byte_end":274883,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274888,"byte_end":274891,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274896,"byte_end":274944,"line_start":600,"line_end":600,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":274949,"byte_end":275004,"line_start":601,"line_end":601,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":275009,"byte_end":275017,"line_start":602,"line_end":602,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":275022,"byte_end":275029,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3898},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276674,"byte_end":276688,"line_start":645,"line_end":645,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":275298,"byte_end":275360,"line_start":613,"line_end":613,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":275365,"byte_end":275433,"line_start":614,"line_end":614,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":275438,"byte_end":275472,"line_start":615,"line_end":615,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":275477,"byte_end":275480,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":275485,"byte_end":275560,"line_start":617,"line_end":617,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":275565,"byte_end":275640,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":275645,"byte_end":275721,"line_start":619,"line_end":619,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":275726,"byte_end":275791,"line_start":620,"line_end":620,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":275796,"byte_end":275799,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":275804,"byte_end":275875,"line_start":622,"line_end":622,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":275880,"byte_end":275883,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":275888,"byte_end":275964,"line_start":624,"line_end":624,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":275969,"byte_end":276043,"line_start":625,"line_end":625,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276048,"byte_end":276073,"line_start":626,"line_end":626,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276078,"byte_end":276081,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276086,"byte_end":276100,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276105,"byte_end":276112,"line_start":629,"line_end":629,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276117,"byte_end":276158,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276163,"byte_end":276220,"line_start":631,"line_end":631,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276225,"byte_end":276250,"line_start":632,"line_end":632,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276255,"byte_end":276258,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276263,"byte_end":276333,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276338,"byte_end":276393,"line_start":635,"line_end":635,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276398,"byte_end":276460,"line_start":636,"line_end":636,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276465,"byte_end":276480,"line_start":637,"line_end":637,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276485,"byte_end":276492,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276497,"byte_end":276500,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276505,"byte_end":276526,"line_start":640,"line_end":640,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276531,"byte_end":276580,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276585,"byte_end":276641,"line_start":642,"line_end":642,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276646,"byte_end":276654,"line_start":643,"line_end":643,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276659,"byte_end":276666,"line_start":644,"line_end":644,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3902},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":278380,"byte_end":278391,"line_start":692,"line_end":692,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":276965,"byte_end":277030,"line_start":654,"line_end":654,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277035,"byte_end":277038,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277043,"byte_end":277116,"line_start":656,"line_end":656,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277121,"byte_end":277194,"line_start":657,"line_end":657,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277199,"byte_end":277272,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277277,"byte_end":277347,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277352,"byte_end":277355,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277360,"byte_end":277374,"line_start":661,"line_end":661,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277379,"byte_end":277382,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277387,"byte_end":277394,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277399,"byte_end":277440,"line_start":664,"line_end":664,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277445,"byte_end":277476,"line_start":665,"line_end":665,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277481,"byte_end":277532,"line_start":666,"line_end":666,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277537,"byte_end":277557,"line_start":667,"line_end":667,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277562,"byte_end":277565,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277570,"byte_end":277609,"line_start":669,"line_end":669,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277614,"byte_end":277653,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277658,"byte_end":277697,"line_start":671,"line_end":671,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277702,"byte_end":277705,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277710,"byte_end":277737,"line_start":673,"line_end":673,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277742,"byte_end":277785,"line_start":674,"line_end":674,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277790,"byte_end":277797,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277802,"byte_end":277829,"line_start":676,"line_end":676,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277834,"byte_end":277877,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277882,"byte_end":277926,"line_start":678,"line_end":678,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277931,"byte_end":277938,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277943,"byte_end":277970,"line_start":680,"line_end":680,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":277975,"byte_end":278020,"line_start":681,"line_end":681,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":278025,"byte_end":278070,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":278075,"byte_end":278119,"line_start":683,"line_end":683,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":278124,"byte_end":278131,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":278136,"byte_end":278139,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":278144,"byte_end":278183,"line_start":686,"line_end":686,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":278188,"byte_end":278237,"line_start":687,"line_end":687,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":278242,"byte_end":278291,"line_start":688,"line_end":688,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":278296,"byte_end":278346,"line_start":689,"line_end":689,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":278351,"byte_end":278360,"line_start":690,"line_end":690,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":278365,"byte_end":278372,"line_start":691,"line_end":691,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3903},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279983,"byte_end":279991,"line_start":731,"line_end":731,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":278696,"byte_end":278766,"line_start":703,"line_end":703,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":278771,"byte_end":278831,"line_start":704,"line_end":704,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":278836,"byte_end":278839,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":278844,"byte_end":278914,"line_start":706,"line_end":706,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":278919,"byte_end":278995,"line_start":707,"line_end":707,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279000,"byte_end":279076,"line_start":708,"line_end":708,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279081,"byte_end":279151,"line_start":709,"line_end":709,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279156,"byte_end":279182,"line_start":710,"line_end":710,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279187,"byte_end":279190,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279195,"byte_end":279275,"line_start":712,"line_end":712,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279280,"byte_end":279349,"line_start":713,"line_end":713,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279354,"byte_end":279375,"line_start":714,"line_end":714,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279380,"byte_end":279383,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279388,"byte_end":279402,"line_start":716,"line_end":716,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279407,"byte_end":279410,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279415,"byte_end":279422,"line_start":718,"line_end":718,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279427,"byte_end":279468,"line_start":719,"line_end":719,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279473,"byte_end":279519,"line_start":720,"line_end":720,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279524,"byte_end":279527,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279532,"byte_end":279601,"line_start":722,"line_end":722,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279606,"byte_end":279683,"line_start":723,"line_end":723,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279688,"byte_end":279721,"line_start":724,"line_end":724,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279726,"byte_end":279729,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279734,"byte_end":279820,"line_start":726,"line_end":726,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279825,"byte_end":279911,"line_start":727,"line_end":727,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279916,"byte_end":279950,"line_start":728,"line_end":728,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279955,"byte_end":279963,"line_start":729,"line_end":729,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":279968,"byte_end":279975,"line_start":730,"line_end":730,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281517,"byte_end":281527,"line_start":774,"line_end":774,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280271,"byte_end":280333,"line_start":740,"line_end":740,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280338,"byte_end":280413,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280418,"byte_end":280421,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280426,"byte_end":280497,"line_start":743,"line_end":743,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280502,"byte_end":280578,"line_start":744,"line_end":744,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280583,"byte_end":280622,"line_start":745,"line_end":745,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280627,"byte_end":280630,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280635,"byte_end":280721,"line_start":747,"line_end":747,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280726,"byte_end":280729,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280734,"byte_end":280818,"line_start":749,"line_end":749,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280823,"byte_end":280879,"line_start":750,"line_end":750,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280884,"byte_end":280887,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280892,"byte_end":280906,"line_start":752,"line_end":752,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280911,"byte_end":280914,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280919,"byte_end":280926,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280931,"byte_end":280972,"line_start":755,"line_end":755,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":280977,"byte_end":281008,"line_start":756,"line_end":756,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281013,"byte_end":281051,"line_start":757,"line_end":757,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281056,"byte_end":281076,"line_start":758,"line_end":758,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281081,"byte_end":281084,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281089,"byte_end":281150,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281155,"byte_end":281158,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281163,"byte_end":281190,"line_start":762,"line_end":762,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281195,"byte_end":281226,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281231,"byte_end":281257,"line_start":764,"line_end":764,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281262,"byte_end":281332,"line_start":765,"line_end":765,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281337,"byte_end":281346,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281351,"byte_end":281358,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281363,"byte_end":281366,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281371,"byte_end":281410,"line_start":769,"line_end":769,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281415,"byte_end":281418,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281423,"byte_end":281483,"line_start":771,"line_end":771,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281488,"byte_end":281497,"line_start":772,"line_end":772,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281502,"byte_end":281509,"line_start":773,"line_end":773,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3908},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":284293,"byte_end":284313,"line_start":841,"line_end":841,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281781,"byte_end":281859,"line_start":782,"line_end":782,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281864,"byte_end":281867,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281872,"byte_end":281977,"line_start":784,"line_end":784,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":281982,"byte_end":282025,"line_start":785,"line_end":785,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282030,"byte_end":282033,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282038,"byte_end":282106,"line_start":787,"line_end":787,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282111,"byte_end":282184,"line_start":788,"line_end":788,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282189,"byte_end":282245,"line_start":789,"line_end":789,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282250,"byte_end":282253,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282258,"byte_end":282333,"line_start":791,"line_end":791,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282338,"byte_end":282411,"line_start":792,"line_end":792,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282416,"byte_end":282481,"line_start":793,"line_end":793,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282486,"byte_end":282489,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282494,"byte_end":282569,"line_start":795,"line_end":795,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282574,"byte_end":282631,"line_start":796,"line_end":796,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282636,"byte_end":282639,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282644,"byte_end":282658,"line_start":798,"line_end":798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282663,"byte_end":282666,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282671,"byte_end":282723,"line_start":800,"line_end":800,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282728,"byte_end":282735,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282740,"byte_end":282781,"line_start":802,"line_end":802,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282786,"byte_end":282820,"line_start":803,"line_end":803,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282825,"byte_end":282882,"line_start":804,"line_end":804,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282887,"byte_end":282890,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282895,"byte_end":282945,"line_start":806,"line_end":806,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":282950,"byte_end":283000,"line_start":807,"line_end":807,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283005,"byte_end":283008,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283013,"byte_end":283088,"line_start":809,"line_end":809,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283093,"byte_end":283096,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283101,"byte_end":283167,"line_start":811,"line_end":811,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283172,"byte_end":283175,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283180,"byte_end":283205,"line_start":813,"line_end":813,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283210,"byte_end":283264,"line_start":814,"line_end":814,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283269,"byte_end":283272,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283277,"byte_end":283302,"line_start":816,"line_end":816,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283307,"byte_end":283361,"line_start":817,"line_end":817,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283366,"byte_end":283369,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283374,"byte_end":283418,"line_start":819,"line_end":819,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283423,"byte_end":283459,"line_start":820,"line_end":820,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283464,"byte_end":283471,"line_start":821,"line_end":821,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283476,"byte_end":283479,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283484,"byte_end":283544,"line_start":823,"line_end":823,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283549,"byte_end":283556,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283561,"byte_end":283602,"line_start":825,"line_end":825,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283607,"byte_end":283638,"line_start":826,"line_end":826,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283643,"byte_end":283694,"line_start":827,"line_end":827,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283699,"byte_end":283702,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283707,"byte_end":283761,"line_start":829,"line_end":829,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283766,"byte_end":283832,"line_start":830,"line_end":830,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283837,"byte_end":283840,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283845,"byte_end":283894,"line_start":832,"line_end":832,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283899,"byte_end":283953,"line_start":833,"line_end":833,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283958,"byte_end":283961,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":283966,"byte_end":284019,"line_start":835,"line_end":835,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":284024,"byte_end":284096,"line_start":836,"line_end":836,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":284101,"byte_end":284160,"line_start":837,"line_end":837,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":284165,"byte_end":284172,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":284260,"byte_end":284285,"line_start":840,"line_end":840,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3909},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":287338,"byte_end":287350,"line_start":917,"line_end":917,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"pub fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":284590,"byte_end":284656,"line_start":851,"line_end":851,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":284661,"byte_end":284664,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":284669,"byte_end":284774,"line_start":853,"line_end":853,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":284779,"byte_end":284822,"line_start":854,"line_end":854,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":284827,"byte_end":284830,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":284835,"byte_end":284903,"line_start":856,"line_end":856,"column_start":5,"column_end":73}},{"value":"/ outputs in the order. If the underlying stream returns an error, it will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":284908,"byte_end":284984,"line_start":857,"line_end":857,"column_start":5,"column_end":81}},{"value":"/ be immediately propagated.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":284989,"byte_end":285019,"line_start":858,"line_end":858,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285024,"byte_end":285027,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285032,"byte_end":285107,"line_start":860,"line_end":860,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285112,"byte_end":285185,"line_start":861,"line_end":861,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285190,"byte_end":285255,"line_start":862,"line_end":862,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285260,"byte_end":285263,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285268,"byte_end":285343,"line_start":864,"line_end":864,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285348,"byte_end":285405,"line_start":865,"line_end":865,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285410,"byte_end":285413,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285418,"byte_end":285432,"line_start":867,"line_end":867,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285437,"byte_end":285440,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285445,"byte_end":285495,"line_start":869,"line_end":869,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285500,"byte_end":285507,"line_start":870,"line_end":870,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285512,"byte_end":285553,"line_start":871,"line_end":871,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285558,"byte_end":285592,"line_start":872,"line_end":872,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285597,"byte_end":285627,"line_start":873,"line_end":873,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285632,"byte_end":285689,"line_start":874,"line_end":874,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285694,"byte_end":285697,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285702,"byte_end":285752,"line_start":876,"line_end":876,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285757,"byte_end":285807,"line_start":877,"line_end":877,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285812,"byte_end":285815,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285820,"byte_end":285859,"line_start":879,"line_end":879,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285864,"byte_end":285943,"line_start":880,"line_end":880,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285948,"byte_end":285951,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":285956,"byte_end":286018,"line_start":882,"line_end":882,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286023,"byte_end":286026,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286031,"byte_end":286094,"line_start":884,"line_end":884,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286099,"byte_end":286102,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286107,"byte_end":286136,"line_start":886,"line_end":886,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286141,"byte_end":286204,"line_start":887,"line_end":887,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286209,"byte_end":286239,"line_start":888,"line_end":888,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286244,"byte_end":286258,"line_start":889,"line_end":889,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286263,"byte_end":286266,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286271,"byte_end":286296,"line_start":891,"line_end":891,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286301,"byte_end":286355,"line_start":892,"line_end":892,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286360,"byte_end":286414,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286419,"byte_end":286422,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286427,"byte_end":286471,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286476,"byte_end":286512,"line_start":896,"line_end":896,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286517,"byte_end":286524,"line_start":897,"line_end":897,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286529,"byte_end":286532,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286537,"byte_end":286597,"line_start":899,"line_end":899,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286602,"byte_end":286609,"line_start":900,"line_end":900,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286614,"byte_end":286655,"line_start":901,"line_end":901,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286660,"byte_end":286691,"line_start":902,"line_end":902,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286696,"byte_end":286747,"line_start":903,"line_end":903,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286752,"byte_end":286755,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286760,"byte_end":286814,"line_start":905,"line_end":905,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286819,"byte_end":286877,"line_start":906,"line_end":906,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286882,"byte_end":286885,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286890,"byte_end":286939,"line_start":908,"line_end":908,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":286944,"byte_end":286998,"line_start":909,"line_end":909,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":287003,"byte_end":287006,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":287011,"byte_end":287064,"line_start":911,"line_end":911,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":287069,"byte_end":287141,"line_start":912,"line_end":912,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":287146,"byte_end":287205,"line_start":913,"line_end":913,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":287210,"byte_end":287217,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":287305,"byte_end":287330,"line_start":916,"line_end":916,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3910},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":287782,"byte_end":287801,"line_start":929,"line_end":929,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":287674,"byte_end":287752,"line_start":927,"line_end":927,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":287757,"byte_end":287774,"line_start":928,"line_end":928,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":10222},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326439,"byte_end":326443,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":10224}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326317,"byte_end":326354,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326379,"byte_end":326427,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4004},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326961,"byte_end":326965,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326495,"byte_end":326559,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326560,"byte_end":326588,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326589,"byte_end":326592,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326593,"byte_end":326666,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326667,"byte_end":326722,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326723,"byte_end":326726,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326727,"byte_end":326734,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326735,"byte_end":326776,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326777,"byte_end":326820,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326821,"byte_end":326824,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326825,"byte_end":326869,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326870,"byte_end":326935,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326936,"byte_end":326945,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326946,"byte_end":326953,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10231},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":327669,"byte_end":327675,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":10233}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":327545,"byte_end":327584,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":327609,"byte_end":327657,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4039},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":328199,"byte_end":328205,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":327697,"byte_end":327757,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":327758,"byte_end":327761,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":327762,"byte_end":327829,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":327830,"byte_end":327902,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":327903,"byte_end":327960,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":327961,"byte_end":327964,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":327965,"byte_end":327972,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":327973,"byte_end":328014,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":328015,"byte_end":328058,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":328059,"byte_end":328062,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":328063,"byte_end":328098,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":328099,"byte_end":328173,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":328174,"byte_end":328183,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":328184,"byte_end":328191,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10240},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329194,"byte_end":329204,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":10242}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":328892,"byte_end":328952,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":328953,"byte_end":329005,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329006,"byte_end":329009,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329010,"byte_end":329073,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329074,"byte_end":329109,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329134,"byte_end":329182,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4092},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":331492,"byte_end":331503,"line_start":92,"line_end":92,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329720,"byte_end":329791,"line_start":38,"line_end":38,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329792,"byte_end":329859,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329860,"byte_end":329863,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329864,"byte_end":329936,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329937,"byte_end":329940,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329941,"byte_end":330015,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330016,"byte_end":330068,"line_start":44,"line_end":44,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330069,"byte_end":330072,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330073,"byte_end":330145,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330146,"byte_end":330219,"line_start":47,"line_end":47,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330220,"byte_end":330257,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330258,"byte_end":330261,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330262,"byte_end":330276,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330277,"byte_end":330280,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330281,"byte_end":330297,"line_start":52,"line_end":52,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330298,"byte_end":330301,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330302,"byte_end":330309,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330310,"byte_end":330351,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330352,"byte_end":330395,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330396,"byte_end":330399,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330400,"byte_end":330468,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330469,"byte_end":330547,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330548,"byte_end":330579,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330580,"byte_end":330601,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330602,"byte_end":330605,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330606,"byte_end":330640,"line_start":63,"line_end":63,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330641,"byte_end":330696,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330697,"byte_end":330700,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330701,"byte_end":330754,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330755,"byte_end":330808,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330809,"byte_end":330862,"line_start":68,"line_end":68,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330863,"byte_end":330872,"line_start":69,"line_end":69,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330873,"byte_end":330880,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330881,"byte_end":330884,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330885,"byte_end":330921,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330922,"byte_end":330925,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330926,"byte_end":330937,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330938,"byte_end":330979,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":330980,"byte_end":331023,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":331024,"byte_end":331027,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":331028,"byte_end":331077,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":331078,"byte_end":331099,"line_start":79,"line_end":79,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":331100,"byte_end":331177,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":331178,"byte_end":331211,"line_start":81,"line_end":81,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":331212,"byte_end":331215,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":331216,"byte_end":331259,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":331260,"byte_end":331303,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":331304,"byte_end":331347,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":331348,"byte_end":331391,"line_start":86,"line_end":86,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":331392,"byte_end":331395,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":331396,"byte_end":331425,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":331426,"byte_end":331466,"line_start":89,"line_end":89,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":331467,"byte_end":331476,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":331477,"byte_end":331484,"line_start":91,"line_end":91,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10249},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/empty.rs","byte_start":331894,"byte_end":331899,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":10251}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/empty.rs","byte_start":331778,"byte_end":331816,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/empty.rs","byte_start":331834,"byte_end":331882,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4126},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/empty.rs","byte_start":332067,"byte_end":332072,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/empty.rs","byte_start":331937,"byte_end":331985,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/empty.rs","byte_start":331986,"byte_end":331989,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/empty.rs","byte_start":331990,"byte_end":332059,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":4178},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":333169,"byte_end":333173,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":332862,"byte_end":332903,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":332904,"byte_end":332907,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":332908,"byte_end":332915,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":332916,"byte_end":332957,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":332958,"byte_end":333001,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":333002,"byte_end":333005,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":333006,"byte_end":333050,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":333051,"byte_end":333106,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":333107,"byte_end":333143,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":333144,"byte_end":333153,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":333154,"byte_end":333161,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10260},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":333435,"byte_end":333439,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":10262}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10291},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/pending.rs","byte_start":334615,"byte_end":334622,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":10293}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/pending.rs","byte_start":334495,"byte_end":334537,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/pending.rs","byte_start":334555,"byte_end":334603,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4222},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/pending.rs","byte_start":334798,"byte_end":334805,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/pending.rs","byte_start":334666,"byte_end":334720,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/pending.rs","byte_start":334721,"byte_end":334724,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/pending.rs","byte_start":334725,"byte_end":334790,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4264},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":335648,"byte_end":335654,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":4266}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":335547,"byte_end":335587,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":335588,"byte_end":335636,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4272},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":336342,"byte_end":336349,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":335854,"byte_end":335927,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":335928,"byte_end":335931,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":335932,"byte_end":335991,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":335992,"byte_end":335995,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":335996,"byte_end":336010,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":336011,"byte_end":336014,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":336015,"byte_end":336022,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":336023,"byte_end":336056,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":336057,"byte_end":336085,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":336086,"byte_end":336089,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":336090,"byte_end":336119,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":336120,"byte_end":336123,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":336124,"byte_end":336188,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":336189,"byte_end":336242,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":336243,"byte_end":336264,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":336265,"byte_end":336318,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":336319,"byte_end":336326,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":336327,"byte_end":336334,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10304},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":337069,"byte_end":337075,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10307},{"krate":0,"index":10308},{"krate":0,"index":10309}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4318},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":337679,"byte_end":337685,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":337203,"byte_end":337271,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":337272,"byte_end":337348,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":337349,"byte_end":337397,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":337398,"byte_end":337401,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":337402,"byte_end":337476,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":337477,"byte_end":337546,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":337547,"byte_end":337574,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":337575,"byte_end":337578,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":337579,"byte_end":337650,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":337651,"byte_end":337671,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4324},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":338095,"byte_end":338102,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":337987,"byte_end":338061,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":338066,"byte_end":338083,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4325},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":338458,"byte_end":338465,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":338196,"byte_end":338264,"line_start":49,"line_end":49,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":338269,"byte_end":338300,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":338305,"byte_end":338308,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":338313,"byte_end":338386,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":338391,"byte_end":338446,"line_start":53,"line_end":53,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4326},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":338840,"byte_end":338851,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":338571,"byte_end":338646,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":338651,"byte_end":338682,"line_start":59,"line_end":59,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":338687,"byte_end":338690,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":338695,"byte_end":338768,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":338773,"byte_end":338828,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4327},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":339257,"byte_end":339267,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":339021,"byte_end":339084,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":339089,"byte_end":339092,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":339097,"byte_end":339169,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":339174,"byte_end":339245,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":4383},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342534,"byte_end":342540,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341092,"byte_end":341162,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341163,"byte_end":341166,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341167,"byte_end":341236,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341237,"byte_end":341318,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341319,"byte_end":341350,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341351,"byte_end":341354,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341355,"byte_end":341434,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341435,"byte_end":341514,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341515,"byte_end":341569,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341570,"byte_end":341573,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341574,"byte_end":341654,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341655,"byte_end":341725,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341726,"byte_end":341748,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341749,"byte_end":341752,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341753,"byte_end":341830,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341831,"byte_end":341903,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341904,"byte_end":341981,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":341982,"byte_end":342042,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342043,"byte_end":342046,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342047,"byte_end":342060,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342061,"byte_end":342064,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342065,"byte_end":342072,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342073,"byte_end":342114,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342115,"byte_end":342158,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342159,"byte_end":342162,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342163,"byte_end":342218,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342219,"byte_end":342242,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342243,"byte_end":342282,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342283,"byte_end":342320,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342321,"byte_end":342360,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342361,"byte_end":342377,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342378,"byte_end":342394,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342395,"byte_end":342404,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342405,"byte_end":342412,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342413,"byte_end":342416,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342417,"byte_end":342469,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342470,"byte_end":342508,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342509,"byte_end":342518,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342519,"byte_end":342526,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10350},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":342908,"byte_end":342914,"line_start":64,"line_end":64,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":10354},{"krate":0,"index":10355}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10245805,"byte_end":10245814,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10473},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10321094,"byte_end":10321108,"line_start":98,"line_end":98,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":10475},{"krate":0,"index":10476},{"krate":0,"index":10477},{"krate":0,"index":10478}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319028,"byte_end":10319062,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319063,"byte_end":10319066,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319067,"byte_end":10319146,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319147,"byte_end":10319218,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319219,"byte_end":10319295,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319296,"byte_end":10319344,"line_start":67,"line_end":67,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319345,"byte_end":10319348,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319349,"byte_end":10319428,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319429,"byte_end":10319504,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319505,"byte_end":10319583,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319584,"byte_end":10319664,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319665,"byte_end":10319694,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319695,"byte_end":10319698,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319699,"byte_end":10319777,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319778,"byte_end":10319852,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319853,"byte_end":10319928,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10319929,"byte_end":10320004,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320005,"byte_end":10320080,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320081,"byte_end":10320139,"line_start":80,"line_end":80,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320140,"byte_end":10320143,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320144,"byte_end":10320217,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320218,"byte_end":10320296,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320297,"byte_end":10320355,"line_start":84,"line_end":84,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320356,"byte_end":10320429,"line_start":85,"line_end":85,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320430,"byte_end":10320498,"line_start":86,"line_end":86,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320499,"byte_end":10320575,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320576,"byte_end":10320644,"line_start":88,"line_end":88,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320645,"byte_end":10320698,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320699,"byte_end":10320702,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320703,"byte_end":10320769,"line_start":91,"line_end":91,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320770,"byte_end":10320849,"line_start":92,"line_end":92,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320850,"byte_end":10320897,"line_start":93,"line_end":93,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320898,"byte_end":10320901,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320902,"byte_end":10320975,"line_start":95,"line_end":95,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10320976,"byte_end":10321033,"line_start":96,"line_end":96,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10321034,"byte_end":10321082,"line_start":97,"line_end":97,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10483},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10321616,"byte_end":10321619,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10321396,"byte_end":10321440,"line_start":108,"line_end":108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10321445,"byte_end":10321448,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10321453,"byte_end":10321528,"line_start":110,"line_end":110,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10321533,"byte_end":10321604,"line_start":111,"line_end":111,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":10484},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10322116,"byte_end":10322119,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10321843,"byte_end":10321900,"line_start":121,"line_end":121,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10321905,"byte_end":10321908,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10321913,"byte_end":10321976,"line_start":123,"line_end":123,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10321981,"byte_end":10322045,"line_start":124,"line_end":124,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10322050,"byte_end":10322104,"line_start":125,"line_end":125,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":10485},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10322277,"byte_end":10322285,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10322214,"byte_end":10322265,"line_start":130,"line_end":130,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":10486},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10322709,"byte_end":10322713,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10322390,"byte_end":10322423,"line_start":135,"line_end":135,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10322428,"byte_end":10322431,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10322436,"byte_end":10322512,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10322517,"byte_end":10322591,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10322596,"byte_end":10322669,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10322674,"byte_end":10322697,"line_start":140,"line_end":140,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":10513},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":10514},{"krate":0,"index":10517},{"krate":0,"index":10518},{"krate":0,"index":10521},{"krate":0,"index":10524},{"krate":0,"index":10525},{"krate":0,"index":10528},{"krate":0,"index":10531},{"krate":0,"index":10532},{"krate":0,"index":10535},{"krate":0,"index":10538},{"krate":0,"index":10541},{"krate":0,"index":10544},{"krate":0,"index":10547},{"krate":0,"index":10550},{"krate":0,"index":10553},{"krate":0,"index":10554},{"krate":0,"index":10557},{"krate":0,"index":10558},{"krate":0,"index":10560},{"krate":0,"index":10563},{"krate":0,"index":10564},{"krate":0,"index":10566},{"krate":0,"index":10569},{"krate":0,"index":10572},{"krate":0,"index":10575},{"krate":0,"index":10576},{"krate":0,"index":10577},{"krate":0,"index":10579},{"krate":0,"index":10580},{"krate":0,"index":10582},{"krate":0,"index":10583},{"krate":0,"index":10585},{"krate":0,"index":10586},{"krate":0,"index":10588},{"krate":0,"index":10589},{"krate":0,"index":10591},{"krate":0,"index":10592},{"krate":0,"index":10595},{"krate":0,"index":10598},{"krate":0,"index":10599},{"krate":0,"index":10602},{"krate":0,"index":10605},{"krate":0,"index":10611},{"krate":0,"index":10659},{"krate":0,"index":10660},{"krate":0,"index":10661},{"krate":0,"index":10663},{"krate":0,"index":10664},{"krate":0,"index":10666},{"krate":0,"index":10669},{"krate":0,"index":10672},{"krate":0,"index":10736},{"krate":0,"index":10739},{"krate":0,"index":10797},{"krate":0,"index":10798},{"krate":0,"index":10801},{"krate":0,"index":10804},{"krate":0,"index":10809},{"krate":0,"index":10811},{"krate":0,"index":10813},{"krate":0,"index":10815},{"krate":0,"index":10817},{"krate":0,"index":10819},{"krate":0,"index":10822},{"krate":0,"index":10837},{"krate":0,"index":10850},{"krate":0,"index":10853},{"krate":0,"index":10856},{"krate":0,"index":10861},{"krate":0,"index":10864}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":132216,"byte_end":132241,"line_start":100,"line_end":100,"column_start":5,"column_end":30}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10325111,"byte_end":10325143,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10325144,"byte_end":10325147,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10325148,"byte_end":10325223,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10325224,"byte_end":10325281,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10954},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10351460,"byte_end":10351470,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":10957},{"krate":0,"index":10958},{"krate":0,"index":10959}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10351389,"byte_end":10351448,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":10964},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10351706,"byte_end":10351713,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10351635,"byte_end":10351694,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":10973},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10351855,"byte_end":10351865,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":10976},{"krate":0,"index":10977},{"krate":0,"index":10978},{"krate":0,"index":10979}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10351782,"byte_end":10351843,"line_start":20,"line_end":20,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":10984},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10352152,"byte_end":10352156,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10352075,"byte_end":10352140,"line_start":29,"line_end":29,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":10804},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10327139,"byte_end":10327155,"line_start":55,"line_end":55,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":10806},{"krate":0,"index":10807},{"krate":0,"index":10808}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326044,"byte_end":10326097,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326098,"byte_end":10326101,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326102,"byte_end":10326170,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326171,"byte_end":10326244,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326245,"byte_end":10326321,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326322,"byte_end":10326366,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326367,"byte_end":10326370,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326371,"byte_end":10326449,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326450,"byte_end":10326508,"line_start":42,"line_end":42,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326509,"byte_end":10326573,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326574,"byte_end":10326627,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326628,"byte_end":10326707,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326708,"byte_end":10326737,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326738,"byte_end":10326741,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326742,"byte_end":10326812,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326813,"byte_end":10326890,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326891,"byte_end":10326942,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326943,"byte_end":10326946,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10326947,"byte_end":10327020,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10327021,"byte_end":10327078,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10327079,"byte_end":10327127,"line_start":54,"line_end":54,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10824},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10329796,"byte_end":10329799,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10329525,"byte_end":10329574,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10329579,"byte_end":10329582,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10329587,"byte_end":10329654,"line_start":117,"line_end":117,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10329659,"byte_end":10329733,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10329738,"byte_end":10329784,"line_start":119,"line_end":119,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":10825},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10330794,"byte_end":10330797,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10330656,"byte_end":10330711,"line_start":145,"line_end":145,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10330716,"byte_end":10330719,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10330724,"byte_end":10330782,"line_start":147,"line_end":147,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":10826},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10330961,"byte_end":10330969,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10330899,"byte_end":10330949,"line_start":153,"line_end":153,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":10827},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10331552,"byte_end":10331556,"line_start":166,"line_end":166,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10331182,"byte_end":10331213,"line_start":160,"line_end":160,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10331218,"byte_end":10331221,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10331226,"byte_end":10331296,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10331301,"byte_end":10331387,"line_start":163,"line_end":163,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10331392,"byte_end":10331468,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10331473,"byte_end":10331540,"line_start":165,"line_end":165,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":10828},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10332831,"byte_end":10332835,"line_start":194,"line_end":194,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10332749,"byte_end":10332819,"line_start":193,"line_end":193,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":10830},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10333379,"byte_end":10333387,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10333298,"byte_end":10333367,"line_start":210,"line_end":210,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":10831},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10333577,"byte_end":10333589,"line_start":216,"line_end":216,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10333496,"byte_end":10333565,"line_start":215,"line_end":215,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":10915},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363487,"byte_end":10363496,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":10917}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"/ An unbounded set of streams","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10362863,"byte_end":10362894,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10362895,"byte_end":10362898,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" provides the ability to maintain a set of streams","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10362899,"byte_end":10362970,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ and drive them all to completion.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10362971,"byte_end":10363008,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363009,"byte_end":10363012,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Streams are pushed into this set and their realized values are","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363013,"byte_end":10363079,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/ yielded as they become ready. Streams will only be polled when they","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363080,"byte_end":10363151,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ generate notifications. This allows to coordinate a large number of streams.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363152,"byte_end":10363232,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363233,"byte_end":10363236,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `SelectAll` via the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363237,"byte_end":10363298,"line_start":23,"line_end":23,"column_start":1,"column_end":62}},{"value":"/ `select_all` function in the `stream` module, or you can start with an","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363299,"byte_end":10363373,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ empty set with the `SelectAll::new` constructor.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363374,"byte_end":10363426,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363427,"byte_end":10363475,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10923},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363953,"byte_end":10363956,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363753,"byte_end":10363792,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363797,"byte_end":10363800,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363805,"byte_end":10363875,"line_start":40,"line_end":40,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363880,"byte_end":10363941,"line_start":41,"line_end":41,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":10924},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364166,"byte_end":10364169,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364028,"byte_end":10364083,"line_start":46,"line_end":46,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364088,"byte_end":10364091,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364096,"byte_end":10364154,"line_start":48,"line_end":48,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":10925},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364285,"byte_end":10364293,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364224,"byte_end":10364273,"line_start":53,"line_end":53,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":10926},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364655,"byte_end":10364659,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364352,"byte_end":10364383,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364388,"byte_end":10364391,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364396,"byte_end":10364468,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364473,"byte_end":10364547,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364552,"byte_end":10364620,"line_start":62,"line_end":62,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364625,"byte_end":10364643,"line_start":63,"line_end":63,"column_start":5,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":10937},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10366421,"byte_end":10366431,"line_start":118,"line_end":118,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10365800,"byte_end":10365874,"line_start":106,"line_end":106,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10365875,"byte_end":10365878,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10365879,"byte_end":10365958,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10365959,"byte_end":10366010,"line_start":109,"line_end":109,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10366011,"byte_end":10366085,"line_start":110,"line_end":110,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10366086,"byte_end":10366145,"line_start":111,"line_end":111,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10366146,"byte_end":10366149,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10366150,"byte_end":10366222,"line_start":113,"line_end":113,"column_start":1,"column_end":73}},{"value":"/ futures into the set as they become available.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10366223,"byte_end":10366273,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10366274,"byte_end":10366277,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10366278,"byte_end":10366355,"line_start":116,"line_end":116,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10366356,"byte_end":10366413,"line_start":117,"line_end":117,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":4423},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":4424},{"krate":0,"index":4425},{"krate":0,"index":4428},{"krate":0,"index":4431},{"krate":0,"index":4434},{"krate":0,"index":4437},{"krate":0,"index":4440},{"krate":0,"index":4441},{"krate":0,"index":4444},{"krate":0,"index":4447},{"krate":0,"index":4450},{"krate":0,"index":4453},{"krate":0,"index":4456},{"krate":0,"index":4459},{"krate":0,"index":10993},{"krate":0,"index":10996},{"krate":0,"index":10999},{"krate":0,"index":11000},{"krate":0,"index":11003},{"krate":0,"index":11006},{"krate":0,"index":4462},{"krate":0,"index":4496},{"krate":0,"index":4497},{"krate":0,"index":4500}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":344508,"byte_end":344541,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":344542,"byte_end":344545,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":344546,"byte_end":344571,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":344572,"byte_end":344575,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":344576,"byte_end":344624,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":344625,"byte_end":344678,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":344679,"byte_end":344727,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":344728,"byte_end":344775,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":344776,"byte_end":344779,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":344780,"byte_end":344854,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/mod.rs","byte_start":344855,"byte_end":344927,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":4490},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346127,"byte_end":346135,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":4491}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346084,"byte_end":346116,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4491},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":347132,"byte_end":347137,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":4490},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346149,"byte_end":346214,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346219,"byte_end":346234,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346239,"byte_end":346242,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346247,"byte_end":346317,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346322,"byte_end":346341,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346346,"byte_end":346349,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346354,"byte_end":346423,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346428,"byte_end":346501,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346506,"byte_end":346545,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346550,"byte_end":346553,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346558,"byte_end":346624,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346629,"byte_end":346695,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346700,"byte_end":346771,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346776,"byte_end":346832,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346837,"byte_end":346840,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346845,"byte_end":346852,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346857,"byte_end":346895,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346900,"byte_end":346932,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346937,"byte_end":346940,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346945,"byte_end":346991,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346996,"byte_end":346999,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":347004,"byte_end":347041,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":347046,"byte_end":347082,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":347087,"byte_end":347094,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":347099,"byte_end":347124,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":4493},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":348891,"byte_end":348904,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":4494}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":348843,"byte_end":348880,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4494},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349947,"byte_end":349958,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":4493},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":348923,"byte_end":348988,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":348993,"byte_end":349008,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349013,"byte_end":349016,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349021,"byte_end":349091,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349096,"byte_end":349115,"line_start":102,"line_end":102,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349120,"byte_end":349123,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349128,"byte_end":349197,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349202,"byte_end":349275,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349280,"byte_end":349319,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349324,"byte_end":349327,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349332,"byte_end":349398,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349403,"byte_end":349469,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349474,"byte_end":349545,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349550,"byte_end":349606,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349611,"byte_end":349614,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349619,"byte_end":349626,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349631,"byte_end":349668,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349673,"byte_end":349710,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349715,"byte_end":349718,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349723,"byte_end":349759,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349764,"byte_end":349801,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349806,"byte_end":349809,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349814,"byte_end":349851,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349856,"byte_end":349897,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349902,"byte_end":349909,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":349914,"byte_end":349939,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":4503},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","parent":null,"children":[{"krate":0,"index":4504}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":351363,"byte_end":351405,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":351406,"byte_end":351409,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":351410,"byte_end":351476,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":4504},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":352113,"byte_end":352118,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":351478,"byte_end":351513,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":351514,"byte_end":351517,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":351518,"byte_end":351593,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":351594,"byte_end":351631,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":351632,"byte_end":351635,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":351636,"byte_end":351700,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":351701,"byte_end":351704,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":351705,"byte_end":351776,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":351777,"byte_end":351828,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":351829,"byte_end":351921,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":351922,"byte_end":351925,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":351926,"byte_end":351997,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/never.rs","byte_start":351998,"byte_end":352103,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":4505},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lock/mod.rs","parent":null,"children":[],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":12273,"byte_end":12298,"line_start":342,"line_end":342,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lock/mod.rs","byte_start":352149,"byte_end":352196,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lock/mod.rs","byte_start":352197,"byte_end":352200,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lock/mod.rs","byte_start":352201,"byte_end":352276,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lock/mod.rs","byte_start":352277,"byte_end":352334,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":4517},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":353084,"byte_end":353091,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":4519},{"krate":0,"index":4520}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4519},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":353106,"byte_end":353112,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":4517},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4520},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":353121,"byte_end":353130,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":4517},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4527},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":353322,"byte_end":353328,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":4529}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4529},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":353353,"byte_end":353361,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":4527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4544},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":354665,"byte_end":354669,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11027},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":355025,"byte_end":355032,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11048},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":355766,"byte_end":355779,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11064},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":356121,"byte_end":356130,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11079},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":357079,"byte_end":357086,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11094},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":357797,"byte_end":357805,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11109},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":358525,"byte_end":358536,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11121},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":359354,"byte_end":359366,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11133},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":360447,"byte_end":360461,"line_start":312,"line_end":312,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4708},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":361220,"byte_end":361226,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/flatten.rs","byte_start":36059,"byte_end":36066,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/flatten.rs","byte_start":36196,"byte_end":36203,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/flatten.rs","byte_start":36434,"byte_end":36441,"line_start":38,"line_end":38,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/flatten.rs","byte_start":37223,"byte_end":37230,"line_start":62,"line_end":62,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/flatten.rs","byte_start":37461,"byte_end":37468,"line_start":74,"line_end":74,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":40540,"byte_end":40544,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":40651,"byte_end":40655,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":42384,"byte_end":42388,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":42501,"byte_end":42505,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/map.rs","byte_start":43484,"byte_end":43487,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/map.rs","byte_start":43656,"byte_end":43659,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/map.rs","byte_start":43921,"byte_end":43924,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19210,"byte_end":19211,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/into_future.rs","byte_start":66731,"byte_end":66741,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/into_future.rs","byte_start":66892,"byte_end":66902,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/into_future.rs","byte_start":67013,"byte_end":67023,"line_start":27,"line_end":27,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten.rs","byte_start":67755,"byte_end":67765,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten.rs","byte_start":67895,"byte_end":67905,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten.rs","byte_start":68152,"byte_end":68162,"line_start":38,"line_end":38,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten.rs","byte_start":69184,"byte_end":69194,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten.rs","byte_start":69441,"byte_end":69451,"line_start":79,"line_end":79,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten_err.rs","byte_start":72954,"byte_end":72967,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten_err.rs","byte_start":73097,"byte_end":73110,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten_err.rs","byte_start":73357,"byte_end":73370,"line_start":35,"line_end":35,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":49277,"byte_end":49280,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":74747,"byte_end":74751,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":75347,"byte_end":75351,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":75483,"byte_end":75487,"line_start":47,"line_end":47,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76090,"byte_end":76097,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76671,"byte_end":76678,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76823,"byte_end":76830,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76857,"byte_end":76864,"line_start":53,"line_end":53,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77618,"byte_end":77627,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":78230,"byte_end":78239,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":701},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":79337,"byte_end":79346,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":79547,"byte_end":79556,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":80876,"byte_end":80888,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":81114,"byte_end":81126,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":82239,"byte_end":82251,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":82455,"byte_end":82467,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/option.rs","byte_start":84189,"byte_end":84201,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/option.rs","byte_start":84538,"byte_end":84550,"line_start":48,"line_end":48,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/option.rs","byte_start":84737,"byte_end":84749,"line_start":57,"line_end":57,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85187,"byte_end":85193,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85886,"byte_end":85892,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":86034,"byte_end":86040,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":86543,"byte_end":86548,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":86727,"byte_end":86732,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":86764,"byte_end":86769,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":86866,"byte_end":86871,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":94597,"byte_end":94604,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":96421,"byte_end":96428,"line_start":91,"line_end":91,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":97125,"byte_end":97132,"line_start":118,"line_end":118,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":97628,"byte_end":97634,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":100054,"byte_end":100060,"line_start":90,"line_end":90,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":100763,"byte_end":100769,"line_start":112,"line_end":112,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101332,"byte_end":101341,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":102393,"byte_end":102402,"line_start":45,"line_end":45,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":103108,"byte_end":103117,"line_start":66,"line_end":66,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":111742,"byte_end":111752,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":113606,"byte_end":113616,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":114789,"byte_end":114799,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115281,"byte_end":115290,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":117124,"byte_end":117133,"line_start":59,"line_end":59,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":118512,"byte_end":118520,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":119593,"byte_end":119601,"line_start":43,"line_end":43,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":121045,"byte_end":121053,"line_start":80,"line_end":80,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":121653,"byte_end":121659,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":121998,"byte_end":122004,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":122389,"byte_end":122395,"line_start":41,"line_end":41,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":122776,"byte_end":122782,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":123023,"byte_end":123029,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":123368,"byte_end":123374,"line_start":78,"line_end":78,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":123650,"byte_end":123656,"line_start":91,"line_end":91,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":124191,"byte_end":124197,"line_start":113,"line_end":113,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293010,"byte_end":10293019,"line_start":22,"line_end":22,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7153}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294366,"byte_end":10294377,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7155}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10296246,"byte_end":10296253,"line_start":128,"line_end":128,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7159}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10296469,"byte_end":10296478,"line_start":137,"line_end":137,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7162},{"krate":0,"index":7163}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10297452,"byte_end":10297463,"line_start":166,"line_end":166,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7165}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/chain.rs","byte_start":183984,"byte_end":183989,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/chain.rs","byte_start":184246,"byte_end":184251,"line_start":32,"line_end":32,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/chain.rs","byte_start":184456,"byte_end":184461,"line_start":41,"line_end":41,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/collect.rs","byte_start":186074,"byte_end":186081,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1613},{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/collect.rs","byte_start":186379,"byte_end":186386,"line_start":33,"line_end":33,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/collect.rs","byte_start":186562,"byte_end":186569,"line_start":42,"line_end":42,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1622},{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/unzip.rs","byte_start":187593,"byte_end":187598,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/unzip.rs","byte_start":188072,"byte_end":188077,"line_start":39,"line_end":39,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/unzip.rs","byte_start":188327,"byte_end":188332,"line_start":49,"line_end":49,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1680},{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/concat.rs","byte_start":189458,"byte_end":189464,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/concat.rs","byte_start":189731,"byte_end":189737,"line_start":32,"line_end":32,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/concat.rs","byte_start":190512,"byte_end":190518,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/cycle.rs","byte_start":191195,"byte_end":191200,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/cycle.rs","byte_start":191389,"byte_end":191394,"line_start":31,"line_end":31,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/cycle.rs","byte_start":192143,"byte_end":192148,"line_start":59,"line_end":59,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/enumerate.rs","byte_start":192896,"byte_end":192905,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1796},{"krate":0,"index":7490},{"krate":0,"index":7491},{"krate":0,"index":7492},{"krate":0,"index":7493}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/enumerate.rs","byte_start":193124,"byte_end":193133,"line_start":31,"line_end":31,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1799}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/enumerate.rs","byte_start":193251,"byte_end":193260,"line_start":37,"line_end":37,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter.rs","byte_start":194724,"byte_end":194730,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1845}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter.rs","byte_start":195203,"byte_end":195209,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1851},{"krate":0,"index":7555},{"krate":0,"index":7556},{"krate":0,"index":7557},{"krate":0,"index":7558}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter.rs","byte_start":195587,"byte_end":195593,"line_start":60,"line_end":60,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter.rs","byte_start":195942,"byte_end":195948,"line_start":71,"line_end":71,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter_map.rs","byte_start":198165,"byte_end":198174,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1905}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter_map.rs","byte_start":198471,"byte_end":198480,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1910},{"krate":0,"index":7616},{"krate":0,"index":7617},{"krate":0,"index":7618},{"krate":0,"index":7619}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter_map.rs","byte_start":198759,"byte_end":198768,"line_start":49,"line_end":49,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter_map.rs","byte_start":199045,"byte_end":199054,"line_start":59,"line_end":59,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/flatten.rs","byte_start":201199,"byte_end":201206,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1955},{"krate":0,"index":7669},{"krate":0,"index":7670},{"krate":0,"index":7671},{"krate":0,"index":7672}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/flatten.rs","byte_start":201375,"byte_end":201382,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/flatten.rs","byte_start":201574,"byte_end":201581,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1961},{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fold.rs","byte_start":203095,"byte_end":203099,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fold.rs","byte_start":203455,"byte_end":203459,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fold.rs","byte_start":203777,"byte_end":203781,"line_start":52,"line_end":52,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fold.rs","byte_start":204028,"byte_end":204032,"line_start":62,"line_end":62,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2016},{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each.rs","byte_start":205633,"byte_end":205640,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each.rs","byte_start":205933,"byte_end":205940,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2064}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each.rs","byte_start":206216,"byte_end":206223,"line_start":48,"line_end":48,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2069}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each.rs","byte_start":206474,"byte_end":206481,"line_start":58,"line_end":58,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fuse.rs","byte_start":207594,"byte_end":207598,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":7894},{"krate":0,"index":7895},{"krate":0,"index":7896},{"krate":0,"index":7897}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fuse.rs","byte_start":208095,"byte_end":208099,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2109}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fuse.rs","byte_start":208197,"byte_end":208201,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":209426,"byte_end":209438,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":211928,"byte_end":211940,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2154}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":212060,"byte_end":212072,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2157},{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/map.rs","byte_start":212980,"byte_end":212983,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2195}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/map.rs","byte_start":213198,"byte_end":213201,"line_start":33,"line_end":33,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2199},{"krate":0,"index":8018},{"krate":0,"index":8019},{"krate":0,"index":8020},{"krate":0,"index":8021}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/map.rs","byte_start":213370,"byte_end":213373,"line_start":41,"line_end":41,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2203}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/map.rs","byte_start":213547,"byte_end":213550,"line_start":50,"line_end":50,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/next.rs","byte_start":214697,"byte_end":214701,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/next.rs","byte_start":214752,"byte_end":214756,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2247}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/next.rs","byte_start":214907,"byte_end":214911,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/next.rs","byte_start":215050,"byte_end":215054,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2253},{"krate":0,"index":2254}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/select_next_some.rs","byte_start":215728,"byte_end":215742,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2288}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/select_next_some.rs","byte_start":215893,"byte_end":215907,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2291}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/select_next_some.rs","byte_start":216051,"byte_end":216065,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2294},{"krate":0,"index":2295}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":217320,"byte_end":217328,"line_start":27,"line_end":27,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2342},{"krate":0,"index":8161},{"krate":0,"index":8162},{"krate":0,"index":8163},{"krate":0,"index":8164},{"krate":0,"index":2343},{"krate":0,"index":2344}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":218505,"byte_end":218513,"line_start":65,"line_end":65,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2347}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":218655,"byte_end":218663,"line_start":71,"line_end":71,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":219843,"byte_end":219847,"line_start":113,"line_end":113,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2355}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":220118,"byte_end":220122,"line_start":125,"line_end":125,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2358}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":220233,"byte_end":220237,"line_start":131,"line_end":131,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2362},{"krate":0,"index":2363}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/skip.rs","byte_start":221147,"byte_end":221151,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2397},{"krate":0,"index":8246},{"krate":0,"index":8247},{"krate":0,"index":8248},{"krate":0,"index":8249}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/skip.rs","byte_start":221375,"byte_end":221379,"line_start":31,"line_end":31,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2400}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/skip.rs","byte_start":221497,"byte_end":221501,"line_start":37,"line_end":37,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/skip_while.rs","byte_start":223204,"byte_end":223213,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2443}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/skip_while.rs","byte_start":223665,"byte_end":223674,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2448},{"krate":0,"index":8315},{"krate":0,"index":8316},{"krate":0,"index":8317},{"krate":0,"index":8318}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/skip_while.rs","byte_start":224081,"byte_end":224090,"line_start":59,"line_end":59,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2453}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/skip_while.rs","byte_start":224350,"byte_end":224359,"line_start":69,"line_end":69,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take.rs","byte_start":226706,"byte_end":226710,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2493},{"krate":0,"index":8359},{"krate":0,"index":8360},{"krate":0,"index":8361},{"krate":0,"index":8362}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take.rs","byte_start":226916,"byte_end":226920,"line_start":32,"line_end":32,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take.rs","byte_start":227914,"byte_end":227918,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2501}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_while.rs","byte_start":228941,"byte_end":228950,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2539}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_while.rs","byte_start":229398,"byte_end":229407,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2544},{"krate":0,"index":8428},{"krate":0,"index":8429},{"krate":0,"index":8430},{"krate":0,"index":8431}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_while.rs","byte_start":229807,"byte_end":229816,"line_start":59,"line_end":59,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_while.rs","byte_start":231370,"byte_end":231379,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2556}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":232775,"byte_end":232784,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2593}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":233111,"byte_end":233120,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2597},{"krate":0,"index":8485},{"krate":0,"index":8486},{"krate":0,"index":8487},{"krate":0,"index":8488},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":235294,"byte_end":235303,"line_start":119,"line_end":119,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":236335,"byte_end":236344,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2610}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/then.rs","byte_start":237286,"byte_end":237290,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2648}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/then.rs","byte_start":237580,"byte_end":237584,"line_start":36,"line_end":36,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2653},{"krate":0,"index":8546},{"krate":0,"index":8547},{"krate":0,"index":8548},{"krate":0,"index":8549}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/then.rs","byte_start":237881,"byte_end":237885,"line_start":51,"line_end":51,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2658}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/then.rs","byte_start":238123,"byte_end":238127,"line_start":61,"line_end":61,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":240044,"byte_end":240047,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":241690,"byte_end":241693,"line_start":66,"line_end":66,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2711}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":241884,"byte_end":241887,"line_start":74,"line_end":74,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/chunks.rs","byte_start":244599,"byte_end":244605,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":8651},{"krate":0,"index":8652},{"krate":0,"index":8653},{"krate":0,"index":8654}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/chunks.rs","byte_start":245108,"byte_end":245114,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2762}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/chunks.rs","byte_start":246752,"byte_end":246758,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2765}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/ready_chunks.rs","byte_start":247730,"byte_end":247741,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2801},{"krate":0,"index":8699},{"krate":0,"index":8700},{"krate":0,"index":8701},{"krate":0,"index":8702}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/ready_chunks.rs","byte_start":248088,"byte_end":248099,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/ready_chunks.rs","byte_start":250207,"byte_end":250218,"line_start":96,"line_end":96,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2809}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/scan.rs","byte_start":251216,"byte_end":251220,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2853}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/scan.rs","byte_start":251706,"byte_end":251710,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2860}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/scan.rs","byte_start":251874,"byte_end":251878,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2867},{"krate":0,"index":8768},{"krate":0,"index":8769},{"krate":0,"index":8770},{"krate":0,"index":8771}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/scan.rs","byte_start":252330,"byte_end":252334,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/scan.rs","byte_start":253561,"byte_end":253565,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/buffer_unordered.rs","byte_start":10298633,"byte_end":10298648,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8811}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/buffer_unordered.rs","byte_start":10298980,"byte_end":10298995,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8814},{"krate":0,"index":8938},{"krate":0,"index":8939},{"krate":0,"index":8940},{"krate":0,"index":8941}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/buffer_unordered.rs","byte_start":10299382,"byte_end":10299397,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8817},{"krate":0,"index":8818},{"krate":0,"index":8819}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/buffer_unordered.rs","byte_start":10300874,"byte_end":10300889,"line_start":107,"line_end":107,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8822}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/buffered.rs","byte_start":10301999,"byte_end":10302007,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8864}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/buffered.rs","byte_start":10302354,"byte_end":10302362,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8867},{"krate":0,"index":8942},{"krate":0,"index":8943},{"krate":0,"index":8944},{"krate":0,"index":8945}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/buffered.rs","byte_start":10302687,"byte_end":10302695,"line_start":57,"line_end":57,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8870},{"krate":0,"index":8871},{"krate":0,"index":8872}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each_concurrent.rs","byte_start":10305054,"byte_end":10305071,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8917}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each_concurrent.rs","byte_start":10305417,"byte_end":10305434,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8922}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each_concurrent.rs","byte_start":10305867,"byte_end":10305884,"line_start":53,"line_end":53,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8927}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each_concurrent.rs","byte_start":10306126,"byte_end":10306143,"line_start":63,"line_end":63,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8932},{"krate":0,"index":8933}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139128,"byte_end":139129,"line_start":208,"line_end":208,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/and_then.rs","byte_start":290918,"byte_end":290925,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3175}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/and_then.rs","byte_start":291218,"byte_end":291225,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3180},{"krate":0,"index":9003},{"krate":0,"index":9004},{"krate":0,"index":9005},{"krate":0,"index":9006}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/and_then.rs","byte_start":291518,"byte_end":291525,"line_start":48,"line_end":48,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/and_then.rs","byte_start":292703,"byte_end":292710,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3192}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/into_stream.rs","byte_start":293640,"byte_end":293650,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3222},{"krate":0,"index":9250},{"krate":0,"index":9251},{"krate":0,"index":9252},{"krate":0,"index":9253}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/into_stream.rs","byte_start":293843,"byte_end":293853,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3225}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/into_stream.rs","byte_start":293974,"byte_end":293984,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3228},{"krate":0,"index":3229},{"krate":0,"index":3230}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/or_else.rs","byte_start":295106,"byte_end":295112,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3271}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/or_else.rs","byte_start":295404,"byte_end":295410,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3276},{"krate":0,"index":9449},{"krate":0,"index":9450},{"krate":0,"index":9451},{"krate":0,"index":9452}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/or_else.rs","byte_start":295700,"byte_end":295706,"line_start":48,"line_end":48,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3283}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/or_else.rs","byte_start":297019,"byte_end":297025,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3288}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_next.rs","byte_start":297941,"byte_end":297948,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_next.rs","byte_start":298002,"byte_end":298009,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3325}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_next.rs","byte_start":298172,"byte_end":298179,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":3328}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_next.rs","byte_start":298321,"byte_end":298328,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3331},{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_for_each.rs","byte_start":299127,"byte_end":299137,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3370}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_for_each.rs","byte_start":299433,"byte_end":299443,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3375}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_for_each.rs","byte_start":299733,"byte_end":299743,"line_start":48,"line_end":48,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3380},{"krate":0,"index":3381}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter.rs","byte_start":301154,"byte_end":301163,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3422}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter.rs","byte_start":301559,"byte_end":301568,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3427},{"krate":0,"index":9579},{"krate":0,"index":9580},{"krate":0,"index":9581},{"krate":0,"index":9582}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter.rs","byte_start":301867,"byte_end":301876,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3432}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter.rs","byte_start":302145,"byte_end":302154,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3439}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter_map.rs","byte_start":304332,"byte_end":304344,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3481}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter_map.rs","byte_start":304644,"byte_end":304656,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3486},{"krate":0,"index":9640},{"krate":0,"index":9641},{"krate":0,"index":9642},{"krate":0,"index":9643}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter_map.rs","byte_start":304853,"byte_end":304865,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3492}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter_map.rs","byte_start":305155,"byte_end":305167,"line_start":55,"line_end":55,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3500}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_flatten.rs","byte_start":307386,"byte_end":307396,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3533},{"krate":0,"index":9684},{"krate":0,"index":9685},{"krate":0,"index":9686},{"krate":0,"index":9687}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_flatten.rs","byte_start":307661,"byte_end":307671,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3536}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_flatten.rs","byte_start":307917,"byte_end":307927,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3539},{"krate":0,"index":3540}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_collect.rs","byte_start":309536,"byte_end":309546,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3581}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_collect.rs","byte_start":309719,"byte_end":309729,"line_start":29,"line_end":29,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3585}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_collect.rs","byte_start":309917,"byte_end":309927,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3589},{"krate":0,"index":3590}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_concat.rs","byte_start":310948,"byte_end":310957,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_concat.rs","byte_start":311209,"byte_end":311218,"line_start":32,"line_end":32,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3622},{"krate":0,"index":3623}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_fold.rs","byte_start":312481,"byte_end":312488,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3665}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_fold.rs","byte_start":312847,"byte_end":312854,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3671}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_fold.rs","byte_start":313191,"byte_end":313198,"line_start":52,"line_end":52,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3677}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_fold.rs","byte_start":313464,"byte_end":313471,"line_start":62,"line_end":62,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3683},{"krate":0,"index":3684}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":317375,"byte_end":317384,"line_start":82,"line_end":82,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3726}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":317685,"byte_end":317694,"line_start":95,"line_end":95,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3732},{"krate":0,"index":3733}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_skip_while.rs","byte_start":319463,"byte_end":319475,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3778}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_skip_while.rs","byte_start":319931,"byte_end":319943,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3783},{"krate":0,"index":9968},{"krate":0,"index":9969},{"krate":0,"index":9970},{"krate":0,"index":9971}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_skip_while.rs","byte_start":320364,"byte_end":320376,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3790}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_skip_while.rs","byte_start":321910,"byte_end":321922,"line_start":107,"line_end":107,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3795}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_take_while.rs","byte_start":323162,"byte_end":323174,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3836}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_take_while.rs","byte_start":323626,"byte_end":323638,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3841},{"krate":0,"index":10037},{"krate":0,"index":10038},{"krate":0,"index":10039},{"krate":0,"index":10040}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_take_while.rs","byte_start":324045,"byte_end":324057,"line_start":64,"line_end":64,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3846},{"krate":0,"index":3847},{"krate":0,"index":3848}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_take_while.rs","byte_start":325664,"byte_end":325676,"line_start":115,"line_end":115,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3853}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_buffer_unordered.rs","byte_start":10308754,"byte_end":10308772,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":10087},{"krate":0,"index":10214},{"krate":0,"index":10215},{"krate":0,"index":10216},{"krate":0,"index":10217}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_buffer_unordered.rs","byte_start":10309117,"byte_end":10309135,"line_start":41,"line_end":41,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10090},{"krate":0,"index":10091}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_buffered.rs","byte_start":10311376,"byte_end":10311387,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":10141},{"krate":0,"index":10218},{"krate":0,"index":10219},{"krate":0,"index":10220},{"krate":0,"index":10221}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_buffered.rs","byte_start":10311724,"byte_end":10311735,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10144},{"krate":0,"index":10145}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10313916,"byte_end":10313936,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":10193}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10314301,"byte_end":10314321,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":10198}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10314572,"byte_end":10314592,"line_start":49,"line_end":49,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10203}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10315040,"byte_end":10315060,"line_start":65,"line_end":65,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10208},{"krate":0,"index":10209}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":258969,"byte_end":258970,"line_start":141,"line_end":141,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326483,"byte_end":326487,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":327122,"byte_end":327126,"line_start":37,"line_end":37,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":328316,"byte_end":328322,"line_start":33,"line_end":33,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":328349,"byte_end":328355,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4045},{"krate":0,"index":4046},{"krate":0,"index":4047}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":328662,"byte_end":328668,"line_start":49,"line_end":49,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4050}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329265,"byte_end":329275,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329319,"byte_end":329329,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4085},{"krate":0,"index":4086},{"krate":0,"index":4087}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329643,"byte_end":329653,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4091}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/empty.rs","byte_start":332184,"byte_end":332189,"line_start":23,"line_end":23,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/empty.rs","byte_start":332221,"byte_end":332226,"line_start":25,"line_end":25,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4132}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/empty.rs","byte_start":332311,"byte_end":332316,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4135},{"krate":0,"index":4136},{"krate":0,"index":4137}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/empty.rs","byte_start":332565,"byte_end":332570,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4140}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":333509,"byte_end":333513,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4182}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":333642,"byte_end":333646,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4187}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":334251,"byte_end":334255,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4190}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/pending.rs","byte_start":334914,"byte_end":334921,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/pending.rs","byte_start":334953,"byte_end":334960,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4228}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/pending.rs","byte_start":335045,"byte_end":335052,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4231},{"krate":0,"index":4232},{"krate":0,"index":4233}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/pending.rs","byte_start":335297,"byte_end":335304,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4236}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":335691,"byte_end":335697,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":335728,"byte_end":335734,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4271}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":336499,"byte_end":336505,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4278},{"krate":0,"index":4279}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":337964,"byte_end":337970,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4324},{"krate":0,"index":4325},{"krate":0,"index":4326},{"krate":0,"index":4327}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":339393,"byte_end":339399,"line_start":77,"line_end":77,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4331}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":339617,"byte_end":339623,"line_start":86,"line_end":86,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4335},{"krate":0,"index":4336}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":343033,"byte_end":343039,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4392}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":343305,"byte_end":343311,"line_start":83,"line_end":83,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4398}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":343591,"byte_end":343597,"line_start":97,"line_end":97,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4404},{"krate":0,"index":4405}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10318215,"byte_end":10318227,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10459}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10318332,"byte_end":10318344,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10318375,"byte_end":10318387,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10464}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10318510,"byte_end":10318522,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":10467}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10318703,"byte_end":10318715,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10470},{"krate":0,"index":10471}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10321330,"byte_end":10321344,"line_start":105,"line_end":105,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10321370,"byte_end":10321384,"line_start":107,"line_end":107,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10483},{"krate":0,"index":10484},{"krate":0,"index":10485},{"krate":0,"index":10486}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10322983,"byte_end":10322997,"line_start":151,"line_end":151,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":10489}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10323090,"byte_end":10323104,"line_start":157,"line_end":157,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":10492},{"krate":0,"index":10493},{"krate":0,"index":10494}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10324266,"byte_end":10324280,"line_start":192,"line_end":192,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10497}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10324446,"byte_end":10324460,"line_start":198,"line_end":198,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":10500}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10324740,"byte_end":10324754,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10505}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10324924,"byte_end":10324938,"line_start":217,"line_end":217,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10508}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/abort.rs","byte_start":10351052,"byte_end":10351063,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10610}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10352235,"byte_end":10352245,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10630},{"krate":0,"index":10631},{"krate":0,"index":10632}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10353102,"byte_end":10353112,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10353160,"byte_end":10353167,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10638},{"krate":0,"index":10639},{"krate":0,"index":10640}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10353431,"byte_end":10353438,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10353479,"byte_end":10353489,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10646},{"krate":0,"index":10647},{"krate":0,"index":10648}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10354406,"byte_end":10354416,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10354464,"byte_end":10354468,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10654},{"krate":0,"index":10655},{"krate":0,"index":10656}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10354724,"byte_end":10354728,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/task.rs","byte_start":10356217,"byte_end":10356221,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/task.rs","byte_start":10356256,"byte_end":10356260,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/task.rs","byte_start":10356292,"byte_end":10356296,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10728}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/task.rs","byte_start":10357373,"byte_end":10357377,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10731},{"krate":0,"index":10732}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/task.rs","byte_start":10358377,"byte_end":10358381,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10735}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":10359831,"byte_end":10359846,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10791},{"krate":0,"index":10792},{"krate":0,"index":10793}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":10361696,"byte_end":10361711,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10796}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10327316,"byte_end":10327332,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10327373,"byte_end":10327389,"line_start":62,"line_end":62,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10327418,"byte_end":10327434,"line_start":63,"line_end":63,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10327459,"byte_end":10327475,"line_start":65,"line_end":65,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10816}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10327672,"byte_end":10327688,"line_start":74,"line_end":74,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10818}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10329407,"byte_end":10329423,"line_start":108,"line_end":108,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10821}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10329497,"byte_end":10329513,"line_start":114,"line_end":114,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10824},{"krate":0,"index":10825},{"krate":0,"index":10826},{"krate":0,"index":10827},{"krate":0,"index":10828},{"krate":0,"index":10829},{"krate":0,"index":10830},{"krate":0,"index":10831},{"krate":0,"index":10832},{"krate":0,"index":10833},{"krate":0,"index":10834},{"krate":0,"index":10835},{"krate":0,"index":10836}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10341144,"byte_end":10341160,"line_start":395,"line_end":395,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10839},{"krate":0,"index":10840},{"krate":0,"index":10849}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10346425,"byte_end":10346429,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10848}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10348767,"byte_end":10348783,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10852}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10348930,"byte_end":10348946,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10855}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10350386,"byte_end":10350402,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10858}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10350646,"byte_end":10350662,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10863}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10350784,"byte_end":10350800,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10866}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363579,"byte_end":10363588,"line_start":31,"line_end":31,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10920}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363733,"byte_end":10363742,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10923},{"krate":0,"index":10924},{"krate":0,"index":10925},{"krate":0,"index":10926}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364778,"byte_end":10364787,"line_start":69,"line_end":69,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10929}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364886,"byte_end":10364895,"line_start":75,"line_end":75,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10932},{"krate":0,"index":10933}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10365702,"byte_end":10365711,"line_start":100,"line_end":100,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10936}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10366734,"byte_end":10366743,"line_start":131,"line_end":131,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":10941}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10366888,"byte_end":10366897,"line_start":137,"line_end":137,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":10945}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":345999,"byte_end":346001,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346056,"byte_end":346058,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":353194,"byte_end":353195,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4525},{"krate":0,"index":4526}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":353429,"byte_end":353430,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4534}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":353699,"byte_end":353700,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4542}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":354715,"byte_end":354719,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4550}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":354813,"byte_end":354817,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4554},{"krate":0,"index":4555}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":355076,"byte_end":355083,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4560},{"krate":0,"index":4561}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":355306,"byte_end":355313,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4566}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":355504,"byte_end":355511,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4571}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":355816,"byte_end":355829,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4577},{"krate":0,"index":4578}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":356246,"byte_end":356255,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4583},{"krate":0,"index":4584}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":356537,"byte_end":356546,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4589}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":356806,"byte_end":356815,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4594}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":357135,"byte_end":357142,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4601},{"krate":0,"index":4602}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":357361,"byte_end":357368,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4608}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":357546,"byte_end":357553,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4614}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":357854,"byte_end":357862,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4622},{"krate":0,"index":4623}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":358085,"byte_end":358093,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4629}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":358275,"byte_end":358283,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4635}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":358593,"byte_end":358604,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4644},{"krate":0,"index":4645}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":358841,"byte_end":358852,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4651}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":359067,"byte_end":359078,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4657}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":359423,"byte_end":359435,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4665},{"krate":0,"index":4666}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":359673,"byte_end":359685,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4672}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":359901,"byte_end":359913,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4678}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":360510,"byte_end":360524,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4691},{"krate":0,"index":4692}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":360745,"byte_end":360759,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4698}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":360958,"byte_end":360972,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4704}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":361276,"byte_end":361282,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4714}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":361375,"byte_end":361381,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4718},{"krate":0,"index":4719}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/unfold_state.rs","byte_start":361981,"byte_end":361992,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4730},{"krate":0,"index":4731}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":11585,"byte_end":11591,"line_start":310,"line_end":310,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":16}},{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":11667,"byte_end":11673,"line_start":314,"line_end":314,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1465}},{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/mod.rs","byte_start":132254,"byte_end":132271,"line_start":101,"line_end":101,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":10513}},{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":11907,"byte_end":11911,"line_start":325,"line_end":325,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4423}},{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":11922,"byte_end":11927,"line_start":327,"line_end":327,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4503}},{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/lib.rs","byte_start":12307,"byte_end":12311,"line_start":343,"line_end":343,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4505}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/flatten.rs","byte_start":36059,"byte_end":36066,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/flatten.rs","byte_start":36196,"byte_end":36203,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4736},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/flatten.rs","byte_start":36434,"byte_end":36441,"line_start":38,"line_end":38,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4736},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/flatten.rs","byte_start":37223,"byte_end":37230,"line_start":62,"line_end":62,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":4736},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/flatten.rs","byte_start":37461,"byte_end":37468,"line_start":74,"line_end":74,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4736},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":40540,"byte_end":40544,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":40651,"byte_end":40655,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":42384,"byte_end":42388,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4784},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/fuse.rs","byte_start":42501,"byte_end":42505,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4784},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/map.rs","byte_start":43484,"byte_end":43487,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/map.rs","byte_start":43656,"byte_end":43659,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4819},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/map.rs","byte_start":43921,"byte_end":43924,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4819},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19210,"byte_end":19211,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":239},"to":{"krate":0,"index":240}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/future/mod.rs","byte_start":19342,"byte_end":19348,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":12109},"to":{"krate":0,"index":240}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/into_future.rs","byte_start":66731,"byte_end":66741,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":5372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/into_future.rs","byte_start":66892,"byte_end":66902,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":5372},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/into_future.rs","byte_start":67013,"byte_end":67023,"line_start":27,"line_end":27,"column_start":33,"column_end":43},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":5372},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten.rs","byte_start":67755,"byte_end":67765,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":5407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten.rs","byte_start":67895,"byte_end":67905,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":5407},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten.rs","byte_start":68152,"byte_end":68162,"line_start":38,"line_end":38,"column_start":22,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":5407},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten.rs","byte_start":69184,"byte_end":69194,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":5407},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten.rs","byte_start":69441,"byte_end":69451,"line_start":79,"line_end":79,"column_start":22,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":5407},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten_err.rs","byte_start":72954,"byte_end":72967,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":5454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten_err.rs","byte_start":73097,"byte_end":73110,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":5454},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/try_flatten_err.rs","byte_start":73357,"byte_end":73370,"line_start":35,"line_end":35,"column_start":22,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":5454},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":49277,"byte_end":49280,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":506},"to":{"krate":0,"index":507}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_future/mod.rs","byte_start":49363,"byte_end":49372,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":5,"index":44},"to":{"krate":0,"index":507}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":74747,"byte_end":74751,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":6317},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":75347,"byte_end":75351,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":6317},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/lazy.rs","byte_start":75483,"byte_end":75487,"line_start":47,"line_end":47,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":6317},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76090,"byte_end":76097,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":6323},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76671,"byte_end":76678,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":6323},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76823,"byte_end":76830,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":6323},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/pending.rs","byte_start":76857,"byte_end":76864,"line_start":53,"line_end":53,"column_start":19,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":6323},"to":{"krate":1,"index":2461}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":77618,"byte_end":77627,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6329},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":78230,"byte_end":78239,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":79337,"byte_end":79346,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":6329},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/maybe_done.rs","byte_start":79547,"byte_end":79556,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":6329},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":80876,"byte_end":80888,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6342},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":81114,"byte_end":81126,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":82239,"byte_end":82251,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6342},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_maybe_done.rs","byte_start":82455,"byte_end":82467,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6342},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/option.rs","byte_start":84189,"byte_end":84201,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":6360},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/option.rs","byte_start":84538,"byte_end":84550,"line_start":48,"line_end":48,"column_start":38,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6360},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/option.rs","byte_start":84737,"byte_end":84749,"line_start":57,"line_end":57,"column_start":29,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":6360},"to":{"krate":1,"index":2746}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85187,"byte_end":85193,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":823},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":85886,"byte_end":85892,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":823},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/poll_fn.rs","byte_start":86034,"byte_end":86040,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":823},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":86543,"byte_end":86548,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":86727,"byte_end":86732,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6394},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":86764,"byte_end":86769,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6394},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/ready.rs","byte_start":86866,"byte_end":86871,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":6394},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":94597,"byte_end":94604,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1018},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":96421,"byte_end":96428,"line_start":91,"line_end":91,"column_start":20,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1018},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/join_all.rs","byte_start":97125,"byte_end":97132,"line_start":118,"line_end":118,"column_start":37,"column_end":44},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1018},"to":{"krate":1,"index":7151}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":97628,"byte_end":97634,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":6748},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":100054,"byte_end":100060,"line_start":90,"line_end":90,"column_start":23,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":6748},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select.rs","byte_start":100763,"byte_end":100769,"line_start":112,"line_end":112,"column_start":28,"column_end":34},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":6748},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":101332,"byte_end":101341,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":6756},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":102393,"byte_end":102402,"line_start":45,"line_end":45,"column_start":38,"column_end":47},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":6756},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_all.rs","byte_start":103108,"byte_end":103117,"line_start":66,"line_end":66,"column_start":49,"column_end":58},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":6756},"to":{"krate":1,"index":7151}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":111742,"byte_end":111752,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1271},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":113606,"byte_end":113616,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1271},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_join_all.rs","byte_start":114789,"byte_end":114799,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1271},"to":{"krate":1,"index":7151}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":115281,"byte_end":115290,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":7084},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/try_select.rs","byte_start":117124,"byte_end":117133,"line_start":59,"line_end":59,"column_start":37,"column_end":46},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":7084},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":118512,"byte_end":118520,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":7092},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":119593,"byte_end":119601,"line_start":43,"line_end":43,"column_start":41,"column_end":49},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":7092},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/select_ok.rs","byte_start":121045,"byte_end":121053,"line_start":80,"line_end":80,"column_start":52,"column_end":60},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":7092},"to":{"krate":1,"index":7151}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":121653,"byte_end":121659,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":7098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":121998,"byte_end":122004,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":7098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":122389,"byte_end":122395,"line_start":41,"line_end":41,"column_start":15,"column_end":21},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":7098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":122776,"byte_end":122782,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":7098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":123023,"byte_end":123029,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":7098},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":123368,"byte_end":123374,"line_start":78,"line_end":78,"column_start":28,"column_end":34},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":7098},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":123650,"byte_end":123656,"line_start":91,"line_end":91,"column_start":23,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":7098},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/either.rs","byte_start":124191,"byte_end":124197,"line_start":113,"line_end":113,"column_start":28,"column_end":34},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":7098},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10293010,"byte_end":10293019,"line_start":22,"line_end":22,"column_start":11,"column_end":20},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":11560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10294366,"byte_end":10294377,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":7186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10296246,"byte_end":10296253,"line_start":128,"line_end":128,"column_start":23,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":7197},"to":{"krate":1,"index":8902}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10296469,"byte_end":10296478,"line_start":137,"line_end":137,"column_start":22,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":11560},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/future/abortable.rs","byte_start":10297452,"byte_end":10297463,"line_start":166,"line_end":166,"column_start":6,"column_end":17},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":7186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/chain.rs","byte_start":183984,"byte_end":183989,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":7217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/chain.rs","byte_start":184246,"byte_end":184251,"line_start":32,"line_end":32,"column_start":32,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":7217},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/chain.rs","byte_start":184456,"byte_end":184461,"line_start":41,"line_end":41,"column_start":27,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":7217},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/collect.rs","byte_start":186074,"byte_end":186081,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":7266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/collect.rs","byte_start":186379,"byte_end":186386,"line_start":33,"line_end":33,"column_start":29,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":7266},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/collect.rs","byte_start":186562,"byte_end":186569,"line_start":42,"line_end":42,"column_start":24,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":7266},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/unzip.rs","byte_start":187593,"byte_end":187598,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":7317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/unzip.rs","byte_start":188072,"byte_end":188077,"line_start":39,"line_end":39,"column_start":46,"column_end":51},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":7317},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/unzip.rs","byte_start":188327,"byte_end":188332,"line_start":49,"line_end":49,"column_start":41,"column_end":46},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":7317},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/concat.rs","byte_start":189458,"byte_end":189464,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":7375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/concat.rs","byte_start":189731,"byte_end":189737,"line_start":32,"line_end":32,"column_start":21,"column_end":27},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":7375},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/concat.rs","byte_start":190512,"byte_end":190518,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":7375},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/cycle.rs","byte_start":191195,"byte_end":191200,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":7415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/cycle.rs","byte_start":191389,"byte_end":191394,"line_start":31,"line_end":31,"column_start":21,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":7415},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/cycle.rs","byte_start":192143,"byte_end":192148,"line_start":59,"line_end":59,"column_start":26,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":7415},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/enumerate.rs","byte_start":192896,"byte_end":192905,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":7455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/enumerate.rs","byte_start":193124,"byte_end":193133,"line_start":31,"line_end":31,"column_start":48,"column_end":57},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":7455},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/enumerate.rs","byte_start":193251,"byte_end":193260,"line_start":37,"line_end":37,"column_start":29,"column_end":38},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":7455},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter.rs","byte_start":194724,"byte_end":194730,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":7494},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter.rs","byte_start":195203,"byte_end":195209,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":7494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter.rs","byte_start":195587,"byte_end":195593,"line_start":60,"line_end":60,"column_start":34,"column_end":40},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":7494},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter.rs","byte_start":195942,"byte_end":195948,"line_start":71,"line_end":71,"column_start":29,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":7494},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter_map.rs","byte_start":198165,"byte_end":198174,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":7559},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter_map.rs","byte_start":198471,"byte_end":198480,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":7559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter_map.rs","byte_start":198759,"byte_end":198768,"line_start":49,"line_end":49,"column_start":37,"column_end":46},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":7559},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/filter_map.rs","byte_start":199045,"byte_end":199054,"line_start":59,"line_end":59,"column_start":32,"column_end":41},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":7559},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/flatten.rs","byte_start":201199,"byte_end":201206,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":7627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/flatten.rs","byte_start":201375,"byte_end":201382,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":7627},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/flatten.rs","byte_start":201574,"byte_end":201581,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":7627},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fold.rs","byte_start":203095,"byte_end":203099,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":7728},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fold.rs","byte_start":203455,"byte_end":203459,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":7728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fold.rs","byte_start":203777,"byte_end":203781,"line_start":52,"line_end":52,"column_start":37,"column_end":41},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":7728},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fold.rs","byte_start":204028,"byte_end":204032,"line_start":62,"line_end":62,"column_start":32,"column_end":36},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":7728},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each.rs","byte_start":205633,"byte_end":205640,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":7797},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each.rs","byte_start":205933,"byte_end":205940,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":7797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each.rs","byte_start":206216,"byte_end":206223,"line_start":48,"line_end":48,"column_start":34,"column_end":41},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":7797},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each.rs","byte_start":206474,"byte_end":206481,"line_start":58,"line_end":58,"column_start":29,"column_end":36},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":7797},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fuse.rs","byte_start":207594,"byte_end":207598,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":7859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fuse.rs","byte_start":208095,"byte_end":208099,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":7859},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/fuse.rs","byte_start":208197,"byte_end":208201,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":7859},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":209426,"byte_end":209438,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":7898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":211928,"byte_end":211940,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":7898},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/into_future.rs","byte_start":212060,"byte_end":212072,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":7898},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/map.rs","byte_start":212980,"byte_end":212983,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":7973},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/map.rs","byte_start":213198,"byte_end":213201,"line_start":33,"line_end":33,"column_start":13,"column_end":16},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":7973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/map.rs","byte_start":213370,"byte_end":213373,"line_start":41,"line_end":41,"column_start":29,"column_end":32},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":7973},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/map.rs","byte_start":213547,"byte_end":213550,"line_start":50,"line_end":50,"column_start":24,"column_end":27},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":7973},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/next.rs","byte_start":214697,"byte_end":214701,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":8105},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/next.rs","byte_start":214752,"byte_end":214756,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":8105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/next.rs","byte_start":214907,"byte_end":214911,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":8105},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/next.rs","byte_start":215050,"byte_end":215054,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":8105},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/select_next_some.rs","byte_start":215728,"byte_end":215742,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":8113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/select_next_some.rs","byte_start":215893,"byte_end":215907,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":8113},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/select_next_some.rs","byte_start":216051,"byte_end":216065,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":8113},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":217320,"byte_end":217328,"line_start":27,"line_end":27,"column_start":18,"column_end":26},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":8126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":218505,"byte_end":218513,"line_start":65,"line_end":65,"column_start":34,"column_end":42},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":8126},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":218655,"byte_end":218663,"line_start":71,"line_end":71,"column_start":28,"column_end":36},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":8126},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":219843,"byte_end":219847,"line_start":113,"line_end":113,"column_start":25,"column_end":29},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":8165},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":220118,"byte_end":220122,"line_start":125,"line_end":125,"column_start":34,"column_end":38},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":8165},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/peek.rs","byte_start":220233,"byte_end":220237,"line_start":131,"line_end":131,"column_start":25,"column_end":29},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":8165},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/skip.rs","byte_start":221147,"byte_end":221151,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":8211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/skip.rs","byte_start":221375,"byte_end":221379,"line_start":31,"line_end":31,"column_start":39,"column_end":43},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":8211},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/skip.rs","byte_start":221497,"byte_end":221501,"line_start":37,"line_end":37,"column_start":29,"column_end":33},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":8211},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/skip_while.rs","byte_start":223204,"byte_end":223213,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":8250},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/skip_while.rs","byte_start":223665,"byte_end":223674,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":8250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/skip_while.rs","byte_start":224081,"byte_end":224090,"line_start":59,"line_end":59,"column_start":34,"column_end":43},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":8250},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/skip_while.rs","byte_start":224350,"byte_end":224359,"line_start":69,"line_end":69,"column_start":29,"column_end":38},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":8250},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take.rs","byte_start":226706,"byte_end":226710,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":8324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take.rs","byte_start":226916,"byte_end":226920,"line_start":32,"line_end":32,"column_start":21,"column_end":25},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":8324},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take.rs","byte_start":227914,"byte_end":227918,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":8324},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_while.rs","byte_start":228941,"byte_end":228950,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":8363},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_while.rs","byte_start":229398,"byte_end":229407,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":8363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_while.rs","byte_start":229807,"byte_end":229816,"line_start":59,"line_end":59,"column_start":29,"column_end":38},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":8363},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_while.rs","byte_start":231370,"byte_end":231379,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":8363},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":232775,"byte_end":232784,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":8432},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":233111,"byte_end":233120,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":8432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":235294,"byte_end":235303,"line_start":119,"line_end":119,"column_start":26,"column_end":35},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":8432},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/take_until.rs","byte_start":236335,"byte_end":236344,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":8432},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/then.rs","byte_start":237286,"byte_end":237290,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":8489},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/then.rs","byte_start":237580,"byte_end":237584,"line_start":36,"line_end":36,"column_start":18,"column_end":22},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":8489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/then.rs","byte_start":237881,"byte_end":237885,"line_start":51,"line_end":51,"column_start":34,"column_end":38},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":8489},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/then.rs","byte_start":238123,"byte_end":238127,"line_start":61,"line_end":61,"column_start":29,"column_end":33},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":8489},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":240044,"byte_end":240047,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":8557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":241690,"byte_end":241693,"line_start":66,"line_end":66,"column_start":32,"column_end":35},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":8557},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/zip.rs","byte_start":241884,"byte_end":241887,"line_start":74,"line_end":74,"column_start":27,"column_end":30},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":8557},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/chunks.rs","byte_start":244599,"byte_end":244605,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":8612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/chunks.rs","byte_start":245108,"byte_end":245114,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":8612},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/chunks.rs","byte_start":246752,"byte_end":246758,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":8612},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/ready_chunks.rs","byte_start":247730,"byte_end":247741,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":8660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/ready_chunks.rs","byte_start":248088,"byte_end":248099,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":8660},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/ready_chunks.rs","byte_start":250207,"byte_end":250218,"line_start":96,"line_end":96,"column_start":39,"column_end":50},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":8660},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/scan.rs","byte_start":251216,"byte_end":251220,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":8703},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/scan.rs","byte_start":251706,"byte_end":251710,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":8703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/scan.rs","byte_start":251874,"byte_end":251878,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":8703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/scan.rs","byte_start":252330,"byte_end":252334,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":8703},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/scan.rs","byte_start":253561,"byte_end":253565,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":8703},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/buffer_unordered.rs","byte_start":10298633,"byte_end":10298648,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":11514},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/buffer_unordered.rs","byte_start":10298980,"byte_end":10298995,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":11514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/buffer_unordered.rs","byte_start":10299382,"byte_end":10299397,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":11514},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/buffer_unordered.rs","byte_start":10300874,"byte_end":10300889,"line_start":107,"line_end":107,"column_start":26,"column_end":41},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":11514},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/buffered.rs","byte_start":10301999,"byte_end":10302007,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":11473},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/buffered.rs","byte_start":10302354,"byte_end":10302362,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":11473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/buffered.rs","byte_start":10302687,"byte_end":10302695,"line_start":57,"line_end":57,"column_start":21,"column_end":29},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":11473},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each_concurrent.rs","byte_start":10305054,"byte_end":10305071,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":11412},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each_concurrent.rs","byte_start":10305417,"byte_end":10305434,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":11412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each_concurrent.rs","byte_start":10305867,"byte_end":10305884,"line_start":53,"line_end":53,"column_start":34,"column_end":51},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":11412},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/for_each_concurrent.rs","byte_start":10306126,"byte_end":10306143,"line_start":63,"line_end":63,"column_start":29,"column_end":46},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":11412},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139128,"byte_end":139129,"line_start":208,"line_end":208,"column_start":31,"column_end":32},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2888},"to":{"krate":0,"index":2889}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/stream/mod.rs","byte_start":139272,"byte_end":139278,"line_start":212,"line_end":212,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":5,"index":96},"to":{"krate":0,"index":2889}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/and_then.rs","byte_start":290918,"byte_end":290925,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":8946},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/and_then.rs","byte_start":291218,"byte_end":291225,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":8946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/and_then.rs","byte_start":291518,"byte_end":291525,"line_start":48,"line_end":48,"column_start":29,"column_end":36},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":8946},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/and_then.rs","byte_start":292703,"byte_end":292710,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":8946},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/into_stream.rs","byte_start":293640,"byte_end":293650,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":9219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/into_stream.rs","byte_start":293843,"byte_end":293853,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":9219},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/into_stream.rs","byte_start":293974,"byte_end":293984,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":9219},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/or_else.rs","byte_start":295106,"byte_end":295112,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":9392},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/or_else.rs","byte_start":295404,"byte_end":295410,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":9392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/or_else.rs","byte_start":295700,"byte_end":295706,"line_start":48,"line_end":48,"column_start":29,"column_end":35},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":9392},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/or_else.rs","byte_start":297019,"byte_end":297025,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":9392},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_next.rs","byte_start":297941,"byte_end":297948,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":9453},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_next.rs","byte_start":298002,"byte_end":298009,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":9453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_next.rs","byte_start":298172,"byte_end":298179,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":9453},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_next.rs","byte_start":298321,"byte_end":298328,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":9453},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_for_each.rs","byte_start":299127,"byte_end":299137,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":9461},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_for_each.rs","byte_start":299433,"byte_end":299443,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":9461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_for_each.rs","byte_start":299733,"byte_end":299743,"line_start":48,"line_end":48,"column_start":29,"column_end":39},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":9461},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter.rs","byte_start":301154,"byte_end":301163,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":9518},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter.rs","byte_start":301559,"byte_end":301568,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":9518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter.rs","byte_start":301867,"byte_end":301876,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":9518},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter.rs","byte_start":302145,"byte_end":302154,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":9518},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter_map.rs","byte_start":304332,"byte_end":304344,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":9583},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter_map.rs","byte_start":304644,"byte_end":304656,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":9583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter_map.rs","byte_start":304853,"byte_end":304865,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":9583},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_filter_map.rs","byte_start":305155,"byte_end":305167,"line_start":55,"line_end":55,"column_start":32,"column_end":44},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":9583},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_flatten.rs","byte_start":307386,"byte_end":307396,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":9649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_flatten.rs","byte_start":307661,"byte_end":307671,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":9649},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_flatten.rs","byte_start":307917,"byte_end":307927,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":9649},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_collect.rs","byte_start":309536,"byte_end":309546,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":9695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_collect.rs","byte_start":309719,"byte_end":309729,"line_start":29,"line_end":29,"column_start":29,"column_end":39},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":9695},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_collect.rs","byte_start":309917,"byte_end":309927,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":9695},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_concat.rs","byte_start":310948,"byte_end":310957,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":9742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_concat.rs","byte_start":311209,"byte_end":311218,"line_start":32,"line_end":32,"column_start":21,"column_end":30},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":9742},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_fold.rs","byte_start":312481,"byte_end":312488,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":9777},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_fold.rs","byte_start":312847,"byte_end":312854,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":9777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_fold.rs","byte_start":313191,"byte_end":313198,"line_start":52,"line_end":52,"column_start":37,"column_end":44},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":9777},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_fold.rs","byte_start":313464,"byte_end":313471,"line_start":62,"line_end":62,"column_start":32,"column_end":39},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":9777},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":317375,"byte_end":317384,"line_start":82,"line_end":82,"column_start":32,"column_end":41},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":9846},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_unfold.rs","byte_start":317685,"byte_end":317694,"line_start":95,"line_end":95,"column_start":34,"column_end":43},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":9846},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_skip_while.rs","byte_start":319463,"byte_end":319475,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":9903},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_skip_while.rs","byte_start":319931,"byte_end":319943,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":9903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_skip_while.rs","byte_start":320364,"byte_end":320376,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":9903},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_skip_while.rs","byte_start":321910,"byte_end":321922,"line_start":107,"line_end":107,"column_start":34,"column_end":46},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":9903},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_take_while.rs","byte_start":323162,"byte_end":323174,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":9972},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_take_while.rs","byte_start":323626,"byte_end":323638,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":9972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_take_while.rs","byte_start":324045,"byte_end":324057,"line_start":64,"line_end":64,"column_start":29,"column_end":41},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":9972},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_take_while.rs","byte_start":325664,"byte_end":325676,"line_start":115,"line_end":115,"column_start":34,"column_end":46},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":9972},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_buffer_unordered.rs","byte_start":10308754,"byte_end":10308772,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":11373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_buffer_unordered.rs","byte_start":10309117,"byte_end":10309135,"line_start":41,"line_end":41,"column_start":21,"column_end":39},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":11373},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_buffered.rs","byte_start":10311376,"byte_end":10311387,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":11329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_buffered.rs","byte_start":10311724,"byte_end":10311735,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":11329},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10313916,"byte_end":10313936,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":11263},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10314301,"byte_end":10314321,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":11263},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10314572,"byte_end":10314592,"line_start":49,"line_end":49,"column_start":18,"column_end":38},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":11263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10315040,"byte_end":10315060,"line_start":65,"line_end":65,"column_start":29,"column_end":49},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":11263},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":258969,"byte_end":258970,"line_start":141,"line_end":141,"column_start":46,"column_end":47},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3858},"to":{"krate":0,"index":3859}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/try_stream/mod.rs","byte_start":259051,"byte_end":259060,"line_start":144,"line_end":144,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":5,"index":127},"to":{"krate":0,"index":3859}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":326483,"byte_end":326487,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":10222},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/iter.rs","byte_start":327122,"byte_end":327126,"line_start":37,"line_end":37,"column_start":20,"column_end":24},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":10222},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":328316,"byte_end":328322,"line_start":33,"line_end":33,"column_start":19,"column_end":25},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":10231},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":328349,"byte_end":328355,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":10231},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat.rs","byte_start":328662,"byte_end":328668,"line_start":49,"line_end":49,"column_start":25,"column_end":31},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":10231},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329265,"byte_end":329275,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":10240},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329319,"byte_end":329329,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":10240},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/repeat_with.rs","byte_start":329643,"byte_end":329653,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":10240},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/empty.rs","byte_start":332184,"byte_end":332189,"line_start":23,"line_end":23,"column_start":19,"column_end":24},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":10249},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/empty.rs","byte_start":332221,"byte_end":332226,"line_start":25,"line_end":25,"column_start":25,"column_end":30},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":10249},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/empty.rs","byte_start":332311,"byte_end":332316,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":10249},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/empty.rs","byte_start":332565,"byte_end":332570,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":10249},"to":{"krate":1,"index":2461}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":333509,"byte_end":333513,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":10260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":333642,"byte_end":333646,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":10260},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/once.rs","byte_start":334251,"byte_end":334255,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":10260},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/pending.rs","byte_start":334914,"byte_end":334921,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":10291},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/pending.rs","byte_start":334953,"byte_end":334960,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":10291},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/pending.rs","byte_start":335045,"byte_end":335052,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":10291},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/pending.rs","byte_start":335297,"byte_end":335304,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":10291},"to":{"krate":1,"index":2461}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":335691,"byte_end":335697,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4264},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":335728,"byte_end":335734,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4264},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/poll_fn.rs","byte_start":336499,"byte_end":336505,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4264},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":337964,"byte_end":337970,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":10304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":339393,"byte_end":339399,"line_start":77,"line_end":77,"column_start":32,"column_end":38},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":10304},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select.rs","byte_start":339617,"byte_end":339623,"line_start":86,"line_end":86,"column_start":27,"column_end":33},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":10304},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":343033,"byte_end":343039,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":10350},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":343305,"byte_end":343311,"line_start":83,"line_end":83,"column_start":39,"column_end":45},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":10350},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/unfold.rs","byte_start":343591,"byte_end":343597,"line_start":97,"line_end":97,"column_start":34,"column_end":40},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":10350},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10318215,"byte_end":10318227,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":11228},"to":{"krate":1,"index":2491}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10318332,"byte_end":10318344,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":11228},"to":{"krate":1,"index":2496}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10318375,"byte_end":10318387,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":11228},"to":{"krate":1,"index":2538}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10318510,"byte_end":10318522,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":11228},"to":{"krate":1,"index":2527}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10318703,"byte_end":10318715,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":11228},"to":{"krate":1,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10321330,"byte_end":10321344,"line_start":105,"line_end":105,"column_start":27,"column_end":41},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":10473},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10321370,"byte_end":10321384,"line_start":107,"line_end":107,"column_start":19,"column_end":33},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":10473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10322983,"byte_end":10322997,"line_start":151,"line_end":151,"column_start":31,"column_end":45},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":10473},"to":{"krate":1,"index":2818}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10323090,"byte_end":10323104,"line_start":157,"line_end":157,"column_start":30,"column_end":44},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":10473},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10324266,"byte_end":10324280,"line_start":192,"line_end":192,"column_start":29,"column_end":43},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":10473},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10324446,"byte_end":10324460,"line_start":198,"line_end":198,"column_start":41,"column_end":55},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":10473},"to":{"krate":1,"index":7151}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10324740,"byte_end":10324754,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":10473},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_ordered.rs","byte_start":10324924,"byte_end":10324938,"line_start":217,"line_end":217,"column_start":35,"column_end":49},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":10473},"to":{"krate":1,"index":7164}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/abort.rs","byte_start":10351052,"byte_end":10351063,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":10607},"to":{"krate":1,"index":3075}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10352235,"byte_end":10352245,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":10954},"to":{"krate":1,"index":7318}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10353102,"byte_end":10353112,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":10954},"to":{"krate":1,"index":7207}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10353160,"byte_end":10353167,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":10964},"to":{"krate":1,"index":7318}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10353431,"byte_end":10353438,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":10964},"to":{"krate":1,"index":7207}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10353479,"byte_end":10353489,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":10973},"to":{"krate":1,"index":7318}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10354406,"byte_end":10354416,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":10973},"to":{"krate":1,"index":7207}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10354464,"byte_end":10354468,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":10984},"to":{"krate":1,"index":7318}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/iter.rs","byte_start":10354724,"byte_end":10354728,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":10984},"to":{"krate":1,"index":7207}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/task.rs","byte_start":10356217,"byte_end":10356221,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":10713},"to":{"krate":1,"index":2840}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/task.rs","byte_start":10356256,"byte_end":10356260,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":10713},"to":{"krate":1,"index":2852}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/task.rs","byte_start":10356292,"byte_end":10356296,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":10713},"to":{"krate":19,"index":327}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/task.rs","byte_start":10357373,"byte_end":10357377,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":10713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/task.rs","byte_start":10358377,"byte_end":10358381,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":10713},"to":{"krate":1,"index":3075}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":10359831,"byte_end":10359846,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":10783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":10361696,"byte_end":10361711,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":10783},"to":{"krate":1,"index":3075}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10327316,"byte_end":10327332,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":10804},"to":{"krate":1,"index":2840}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10327373,"byte_end":10327389,"line_start":62,"line_end":62,"column_start":33,"column_end":49},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":10804},"to":{"krate":1,"index":2852}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10327418,"byte_end":10327434,"line_start":63,"line_end":63,"column_start":21,"column_end":37},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":10804},"to":{"krate":1,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10327459,"byte_end":10327475,"line_start":65,"line_end":65,"column_start":16,"column_end":32},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":10804},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10327672,"byte_end":10327688,"line_start":74,"line_end":74,"column_start":21,"column_end":37},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":10804},"to":{"krate":19,"index":20}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10329407,"byte_end":10329423,"line_start":108,"line_end":108,"column_start":23,"column_end":39},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":10804},"to":{"krate":1,"index":2818}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10329497,"byte_end":10329513,"line_start":114,"line_end":114,"column_start":11,"column_end":27},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":10804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10341144,"byte_end":10341160,"line_start":395,"line_end":395,"column_start":30,"column_end":46},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":10804},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10346425,"byte_end":10346429,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":10841},"to":{"krate":1,"index":3075}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10348767,"byte_end":10348783,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":10804},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10348930,"byte_end":10348946,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":10804},"to":{"krate":1,"index":3075}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10350386,"byte_end":10350402,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":10804},"to":{"krate":1,"index":7151}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10350646,"byte_end":10350662,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":10804},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/futures_unordered/mod.rs","byte_start":10350784,"byte_end":10350800,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":10804},"to":{"krate":1,"index":7164}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363579,"byte_end":10363588,"line_start":31,"line_end":31,"column_start":27,"column_end":36},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":10915},"to":{"krate":1,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10363733,"byte_end":10363742,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":10915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364778,"byte_end":10364787,"line_start":69,"line_end":69,"column_start":38,"column_end":47},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":10915},"to":{"krate":1,"index":2818}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10364886,"byte_end":10364895,"line_start":75,"line_end":75,"column_start":37,"column_end":46},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":10915},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10365702,"byte_end":10365711,"line_start":100,"line_end":100,"column_start":42,"column_end":51},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":10915},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10366734,"byte_end":10366743,"line_start":131,"line_end":131,"column_start":47,"column_end":56},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":10915},"to":{"krate":1,"index":7151}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/stream/select_all.rs","byte_start":10366888,"byte_end":10366897,"line_start":137,"line_end":137,"column_start":41,"column_end":50},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":10915},"to":{"krate":1,"index":7164}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":345999,"byte_end":346001,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4487},"to":{"krate":0,"index":4490}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346056,"byte_end":346058,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4489},"to":{"krate":0,"index":4493}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":346137,"byte_end":346142,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":19,"index":17},"to":{"krate":0,"index":4490}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/task/spawn.rs","byte_start":348906,"byte_end":348916,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":19,"index":20},"to":{"krate":0,"index":4493}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":353194,"byte_end":353195,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4522},"to":{"krate":0,"index":4517}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":353333,"byte_end":353340,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":4517},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":353429,"byte_end":353430,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4531},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":353615,"byte_end":353621,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":4527},"to":{"krate":0,"index":4535}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":353699,"byte_end":353700,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4539},"to":{"krate":0,"index":4535}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":354715,"byte_end":354719,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4544},"to":{"krate":1,"index":2818}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":354813,"byte_end":354817,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4544},"to":{"krate":0,"index":4517}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":355076,"byte_end":355083,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":11027},"to":{"krate":0,"index":4517}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":355306,"byte_end":355313,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":11027},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":355504,"byte_end":355511,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":11027},"to":{"krate":0,"index":4535}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":355816,"byte_end":355829,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":11048},"to":{"krate":0,"index":4517}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":356246,"byte_end":356255,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":11064},"to":{"krate":0,"index":4517}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":356537,"byte_end":356546,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":11064},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":356806,"byte_end":356815,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":11064},"to":{"krate":0,"index":4535}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":357135,"byte_end":357142,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":11079},"to":{"krate":0,"index":4517}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":357361,"byte_end":357368,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":11079},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":357546,"byte_end":357553,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":11079},"to":{"krate":0,"index":4535}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":357854,"byte_end":357862,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":11094},"to":{"krate":0,"index":4517}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":358085,"byte_end":358093,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":11094},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":358275,"byte_end":358283,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":11094},"to":{"krate":0,"index":4535}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":358593,"byte_end":358604,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":11109},"to":{"krate":0,"index":4517}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":358841,"byte_end":358852,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":11109},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":359067,"byte_end":359078,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":11109},"to":{"krate":0,"index":4535}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":359423,"byte_end":359435,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":11121},"to":{"krate":0,"index":4517}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":359673,"byte_end":359685,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":11121},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":359901,"byte_end":359913,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":11121},"to":{"krate":0,"index":4535}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":360510,"byte_end":360524,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":11133},"to":{"krate":0,"index":4517}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":360745,"byte_end":360759,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":11133},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":360958,"byte_end":360972,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":11133},"to":{"krate":0,"index":4535}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":361276,"byte_end":361282,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4708},"to":{"krate":1,"index":2818}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/fns.rs","byte_start":361375,"byte_end":361381,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4708},"to":{"krate":0,"index":4517}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.13/src/unfold_state.rs","byte_start":361981,"byte_end":361992,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":11170},"to":{"krate":4294967295,"index":4294967295}}]}
{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1","program":"/Users/raunak/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tonic","--edition=2018","/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"async-trait\"","--cfg","feature=\"codegen\"","--cfg","feature=\"default\"","--cfg","feature=\"h2\"","--cfg","feature=\"hyper\"","--cfg","feature=\"prost\"","--cfg","feature=\"prost-derive\"","--cfg","feature=\"prost1\"","--cfg","feature=\"tls\"","--cfg","feature=\"tokio\"","--cfg","feature=\"tokio-rustls\"","--cfg","feature=\"tower\"","--cfg","feature=\"tracing-futures\"","--cfg","feature=\"transport\"","-C","metadata=1613a818033a14bc","-C","extra-filename=-1613a818033a14bc","--out-dir","/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps","-L","dependency=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps","--extern","async_stream=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libasync_stream-41a52a7cdb1a6b2d.rmeta","--extern","async_trait=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libasync_trait-c4260d0569589911.dylib","--extern","base64=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libbase64-24f3c030c5af735f.rmeta","--extern","bytes=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libbytes-f18071bd7fb3eb30.rmeta","--extern","futures_core=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libfutures_core-61a1d9a5c1636d96.rmeta","--extern","futures_util=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libfutures_util-3d3ae45c6ca4b045.rmeta","--extern","h2=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libh2-41648a835441e724.rmeta","--extern","http=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libhttp-b47b812083969b1f.rmeta","--extern","http_body=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libhttp_body-11cd7533ed7688b0.rmeta","--extern","hyper=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libhyper-bb2f51ab8202289c.rmeta","--extern","percent_encoding=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libpercent_encoding-d0bfb71b457d3023.rmeta","--extern","pin_project=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libpin_project-3a42fbed0ccf58db.rmeta","--extern","prost1=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libprost-ff522b1e93c89798.rmeta","--extern","prost_derive=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libprost_derive-30191b00a5de419b.dylib","--extern","tokio=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libtokio-67886e1332e66c04.rmeta","--extern","tokio_rustls=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libtokio_rustls-8389a7710309ce4e.rmeta","--extern","tokio_stream=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libtokio_stream-9f68175e525b3d90.rmeta","--extern","tokio_util=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libtokio_util-c0f864e1af8d3d6b.rmeta","--extern","tower=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libtower-f8905bef9d2e33c2.rmeta","--extern","tower_service=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libtower_service-6c644d2618b6f930.rmeta","--extern","tracing=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libtracing-a8ba1c5935fa5b5c.rmeta","--extern","tracing_futures=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libtracing_futures-a682f1961d1e9ab6.rmeta","--cap-lints","allow","-L","native=/Users/raunak/Downloads/steve-jobs/target/rls/debug/build/ring-e8372da697ee1c35/out","--error-format=json","--sysroot","/Users/raunak/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libtonic-1613a818033a14bc.rmeta"},"prelude":{"crate_id":{"name":"tonic","disambiguator":[761627386550982924,17724164180163643590]},"crate_root":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src","external_crates":[{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[2014432421693201618,6405737037534390335]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4672134039341031826,9334730820037710618]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7812355786254722365,11069232910465240897]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3504492067546965715,14807348065712645406]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10363351663236916098,4373568221634206951]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10398940938279845199,16184156993696304634]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[724492824811583379,8144572066648184623]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15416939533143646956,6942433971967440675]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16970633403645001861,1360756374950165595]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5199069202728777874,5034187042864704623]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[3933903632706657361,17777720043096733358]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1064452323391549649,8830000606501382885]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3322092396504496203,10665470569546149906]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[15191776587043837065,7596571186965316671]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[9467777605309881795,12208806100407000479]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[16274892358024576666,2987381920905251631]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","num":17,"id":{"name":"bytes","disambiguator":[13660829736288077121,12994348296564562169]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","num":18,"id":{"name":"http_body","disambiguator":[9211788137224472093,13378436389154110825]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","num":19,"id":{"name":"http","disambiguator":[6647445972677646853,17202962509354185707]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","num":20,"id":{"name":"fnv","disambiguator":[14517881249387213680,15838165528393445904]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","num":21,"id":{"name":"itoa","disambiguator":[388051149811970837,16683302738049426258]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","num":22,"id":{"name":"pin_project_lite","disambiguator":[4648493909412392768,11955802785287157020]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","num":23,"id":{"name":"futures_core","disambiguator":[18240488919851695696,7631191881935903789]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","num":24,"id":{"name":"futures_util","disambiguator":[10205265084472311685,726344218393000285]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","num":25,"id":{"name":"pin_utils","disambiguator":[15344616390240620749,4586777107936892002]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","num":26,"id":{"name":"futures_task","disambiguator":[18158833516831585402,13440795983604480994]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","num":27,"id":{"name":"tower_service","disambiguator":[10617367146182548071,12815117911197606792]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","num":28,"id":{"name":"tracing","disambiguator":[2505244552272014766,6515799726859285015]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","num":29,"id":{"name":"cfg_if","disambiguator":[8831126000530456462,14660711433489744206]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","num":30,"id":{"name":"log","disambiguator":[14671417891804371556,10092624592932941712]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","num":31,"id":{"name":"tracing_core","disambiguator":[8166902145695494422,16187620653982274139]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","num":32,"id":{"name":"lazy_static","disambiguator":[4445174850603029766,6294654972007575624]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","num":33,"id":{"name":"tracing_attributes","disambiguator":[10533698703575004565,9550074168662960273]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/encode.rs","num":34,"id":{"name":"pin_project","disambiguator":[14467574479612393573,6479172157441198262]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/encode.rs","num":35,"id":{"name":"pin_project_internal","disambiguator":[11150581915609384840,18157555624575851715]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/prost.rs","num":36,"id":{"name":"prost","disambiguator":[5090970022378924173,9088685486764489359]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/prost.rs","num":37,"id":{"name":"prost_derive","disambiguator":[10756931966321977354,953799872357960546]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":38,"id":{"name":"tower","disambiguator":[6057565400738125595,16125353728020380959]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":39,"id":{"name":"tower_layer","disambiguator":[7728147279589823838,3630176626739255753]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":40,"id":{"name":"rand","disambiguator":[12641313991861270290,12567096008754807049]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":41,"id":{"name":"rand_core","disambiguator":[9286091602195341225,6646338418913628647]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":42,"id":{"name":"getrandom","disambiguator":[265130661591245299,2539229777963258355]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":43,"id":{"name":"libc","disambiguator":[11670802217295346899,7128414201532922055]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":44,"id":{"name":"rand_chacha","disambiguator":[2313167449505349007,4772278628683344111]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":45,"id":{"name":"ppv_lite86","disambiguator":[4250490900380042003,17080827691340421607]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","num":46,"id":{"name":"tokio","disambiguator":[1475298167305303614,17120815164256126264]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":47,"id":{"name":"parking_lot","disambiguator":[17231821520500423720,17115561076897684599]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":48,"id":{"name":"instant","disambiguator":[11187121646821975639,3668296336020098577]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":49,"id":{"name":"lock_api","disambiguator":[7060362187090094935,6720524633855940616]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":50,"id":{"name":"scopeguard","disambiguator":[17141262456245315652,14156001556034532503]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":51,"id":{"name":"parking_lot_core","disambiguator":[16707485554275639035,2987779964389398497]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":52,"id":{"name":"smallvec","disambiguator":[4899133377848736299,6410237011676314059]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":53,"id":{"name":"mio","disambiguator":[4826869175367208281,13273360166174091935]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":54,"id":{"name":"once_cell","disambiguator":[11504330228565463466,651081175859897534]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":55,"id":{"name":"tokio_macros","disambiguator":[6297646671971952364,4137614225018340351]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":56,"id":{"name":"memchr","disambiguator":[16703557924079483910,4590001464293719672]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":57,"id":{"name":"num_cpus","disambiguator":[14071310172150079226,10462164697729365269]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":58,"id":{"name":"signal_hook_registry","disambiguator":[12916026005208579703,17620455485585363602]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":59,"id":{"name":"slab","disambiguator":[4199977088155504658,4023183827483056790]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":60,"id":{"name":"tokio_util","disambiguator":[14775137419293827152,7488574705930451594]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":61,"id":{"name":"futures_sink","disambiguator":[15708518641781919576,15844202153289304206]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":62,"id":{"name":"indexmap","disambiguator":[7841057844925069504,12501579450557535613]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","num":63,"id":{"name":"hashbrown","disambiguator":[6459161008859790716,11163466171528097386]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","num":64,"id":{"name":"hyper","disambiguator":[9676063726844916073,14169840884695063800]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","num":65,"id":{"name":"httpdate","disambiguator":[18062357251931660516,1630153017626581403]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","num":66,"id":{"name":"futures_channel","disambiguator":[10197892454462190365,6617780291626386696]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","num":67,"id":{"name":"h2","disambiguator":[9134295278635859235,4611515349769615425]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","num":68,"id":{"name":"socket2","disambiguator":[13862939590357735450,5420791077166645202]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","num":69,"id":{"name":"httparse","disambiguator":[2357782112031356803,8126453019542016612]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","num":70,"id":{"name":"want","disambiguator":[4584131543333846387,3674327105380406571]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","num":71,"id":{"name":"try_lock","disambiguator":[14773324494304828450,8682562018895551347]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","num":72,"id":{"name":"tokio_rustls","disambiguator":[14002728024966242646,11066107272298937679]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","num":73,"id":{"name":"rustls","disambiguator":[1356631359547689310,1670316686215077185]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","num":74,"id":{"name":"webpki","disambiguator":[5027166203689484762,8188918717914978312]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","num":75,"id":{"name":"ring","disambiguator":[17667972664015858065,7560453580101881104]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","num":76,"id":{"name":"untrusted","disambiguator":[12624327219775465681,8387127891884452435]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","num":77,"id":{"name":"spin","disambiguator":[12659532428127860175,534523968047904399]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","num":78,"id":{"name":"sct","disambiguator":[14588527794029891219,13603577566020832064]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","num":79,"id":{"name":"base64","disambiguator":[18204520559792970760,12353046673882930600]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","num":80,"id":{"name":"tracing_futures","disambiguator":[12887918927215041244,6002453575925594848]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/discover.rs","num":81,"id":{"name":"tokio_stream","disambiguator":[5344497085609301935,14441078494956900909]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","num":82,"id":{"name":"percent_encoding","disambiguator":[9187423080344176786,12098039849687520191]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","num":83,"id":{"name":"async_trait","disambiguator":[8796046707668516353,11602261280917750824]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/encode.rs","num":84,"id":{"name":"async_stream","disambiguator":[18330428501506564820,1990085891372034783]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/encode.rs","num":85,"id":{"name":"async_stream_impl","disambiguator":[509622853318634554,8030690167606164760]}}],"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":0,"byte_end":4241,"line_start":1,"line_end":112,"column_start":1,"column_end":17}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":10398,"byte_end":10402,"line_start":22,"line_end":22,"column_start":21,"column_end":25},"alias_span":null,"name":"Grpc","value":"","parent":{"krate":0,"index":86}},{"kind":"Use","ref_id":{"krate":0,"index":236},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":10427,"byte_end":10438,"line_start":23,"line_end":23,"column_start":24,"column_end":35},"alias_span":null,"name":"GrpcService","value":"","parent":{"krate":0,"index":86}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":19745,"byte_end":19754,"line_start":14,"line_end":14,"column_start":23,"column_end":32},"alias_span":null,"name":"Streaming","value":"","parent":{"krate":0,"index":258}},{"kind":"Use","ref_id":{"krate":0,"index":3626},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":19913,"byte_end":19923,"line_start":18,"line_end":18,"column_start":22,"column_end":32},"alias_span":null,"name":"ProstCodec","value":"","parent":{"krate":0,"index":258}},{"kind":"Use","ref_id":{"krate":0,"index":3409},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":19961,"byte_end":19970,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"alias_span":null,"name":"DecodeBuf","value":"","parent":{"krate":0,"index":258}},{"kind":"Use","ref_id":{"krate":0,"index":3416},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":19972,"byte_end":19981,"line_start":20,"line_end":20,"column_start":29,"column_end":38},"alias_span":null,"name":"EncodeBuf","value":"","parent":{"krate":0,"index":258}},{"kind":"Use","ref_id":{"krate":0,"index":3671},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":44860,"byte_end":44865,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"alias_span":null,"name":"Ascii","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3685},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":44891,"byte_end":44897,"line_start":9,"line_end":9,"column_start":25,"column_end":31},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":692},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":44918,"byte_end":44934,"line_start":10,"line_end":10,"column_start":20,"column_end":36},"alias_span":null,"name":"AsciiMetadataKey","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":693},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":44955,"byte_end":44972,"line_start":11,"line_end":11,"column_start":20,"column_end":37},"alias_span":null,"name":"BinaryMetadataKey","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3707},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":44993,"byte_end":45004,"line_start":12,"line_end":12,"column_start":20,"column_end":31},"alias_span":null,"name":"MetadataKey","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3866},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45025,"byte_end":45030,"line_start":13,"line_end":13,"column_start":20,"column_end":25},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3857},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45051,"byte_end":45057,"line_start":14,"line_end":14,"column_start":20,"column_end":26},"alias_span":null,"name":"GetAll","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3741},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45078,"byte_end":45082,"line_start":15,"line_end":15,"column_start":20,"column_end":24},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3760},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45103,"byte_end":45120,"line_start":16,"line_end":16,"column_start":20,"column_end":37},"alias_span":null,"name":"KeyAndMutValueRef","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3747},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45141,"byte_end":45155,"line_start":17,"line_end":17,"column_start":20,"column_end":34},"alias_span":null,"name":"KeyAndValueRef","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3794},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45176,"byte_end":45182,"line_start":18,"line_end":18,"column_start":20,"column_end":26},"alias_span":null,"name":"KeyRef","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3788},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45203,"byte_end":45207,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"alias_span":null,"name":"Keys","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3733},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45228,"byte_end":45239,"line_start":20,"line_end":20,"column_start":20,"column_end":31},"alias_span":null,"name":"MetadataMap","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3888},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45260,"byte_end":45273,"line_start":21,"line_end":21,"column_start":20,"column_end":33},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3879},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45294,"byte_end":45305,"line_start":22,"line_end":22,"column_start":20,"column_end":31},"alias_span":null,"name":"VacantEntry","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3779},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45326,"byte_end":45336,"line_start":23,"line_end":23,"column_start":20,"column_end":30},"alias_span":null,"name":"ValueDrain","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3839},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45357,"byte_end":45366,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"ValueIter","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3811},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45387,"byte_end":45395,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"alias_span":null,"name":"ValueRef","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3828},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45416,"byte_end":45427,"line_start":26,"line_end":26,"column_start":20,"column_end":31},"alias_span":null,"name":"ValueRefMut","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3805},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45448,"byte_end":45454,"line_start":27,"line_end":27,"column_start":20,"column_end":26},"alias_span":null,"name":"Values","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":1215},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45477,"byte_end":45495,"line_start":28,"line_end":28,"column_start":22,"column_end":40},"alias_span":null,"name":"AsciiMetadataValue","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":1216},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45518,"byte_end":45537,"line_start":29,"line_end":29,"column_start":22,"column_end":41},"alias_span":null,"name":"BinaryMetadataValue","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3897},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45560,"byte_end":45573,"line_start":30,"line_end":30,"column_start":22,"column_end":35},"alias_span":null,"name":"MetadataValue","value":"","parent":{"krate":0,"index":582}},{"kind":"Use","ref_id":{"krate":0,"index":3664},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45736,"byte_end":45756,"line_start":35,"line_end":35,"column_start":30,"column_end":50},"alias_span":null,"name":"InvalidMetadataValue","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":3699},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45787,"byte_end":45812,"line_start":36,"line_end":36,"column_start":30,"column_end":55},"alias_span":null,"name":"InvalidMetadataValueBytes","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":3729},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45838,"byte_end":45856,"line_start":37,"line_end":37,"column_start":25,"column_end":43},"alias_span":null,"name":"InvalidMetadataKey","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":3904},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45884,"byte_end":45894,"line_start":38,"line_end":38,"column_start":27,"column_end":37},"alias_span":null,"name":"ToStrError","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":1492},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/mod.rs","byte_start":175175,"byte_end":175179,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"alias_span":null,"name":"Grpc","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":1590},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/mod.rs","byte_start":175210,"byte_end":175232,"line_start":16,"line_end":16,"column_start":5,"column_end":27},"alias_span":null,"name":"ClientStreamingService","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":1575},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/mod.rs","byte_start":175234,"byte_end":175256,"line_start":16,"line_end":16,"column_start":29,"column_end":51},"alias_span":null,"name":"ServerStreamingService","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":1602},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/mod.rs","byte_start":175258,"byte_end":175274,"line_start":16,"line_end":16,"column_start":53,"column_end":69},"alias_span":null,"name":"StreamingService","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":1563},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/mod.rs","byte_start":175276,"byte_end":175288,"line_start":16,"line_end":16,"column_start":71,"column_end":83},"alias_span":null,"name":"UnaryService","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3924},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":189525,"byte_end":189533,"line_start":8,"line_end":8,"column_start":19,"column_end":27},"alias_span":null,"name":"Endpoint","value":"","parent":{"krate":0,"index":1634}},{"kind":"Use","ref_id":{"krate":0,"index":3941},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":189572,"byte_end":189587,"line_start":10,"line_end":10,"column_start":14,"column_end":29},"alias_span":null,"name":"ClientTlsConfig","value":"","parent":{"krate":0,"index":1634}},{"kind":"Use","ref_id":{"krate":0,"index":1920},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":210276,"byte_end":210285,"line_start":9,"line_end":9,"column_start":15,"column_end":24},"alias_span":null,"name":"Connected","value":"","parent":{"krate":0,"index":1899}},{"kind":"Use","ref_id":{"krate":0,"index":4010},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":210324,"byte_end":210339,"line_start":11,"line_end":11,"column_start":14,"column_end":29},"alias_span":null,"name":"ServerTlsConfig","value":"","parent":{"krate":0,"index":1899}},{"kind":"Use","ref_id":{"krate":0,"index":3950},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188855,"byte_end":188862,"line_start":97,"line_end":97,"column_start":25,"column_end":32},"alias_span":null,"name":"Channel","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":0,"index":3924},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188864,"byte_end":188872,"line_start":97,"line_end":97,"column_start":34,"column_end":42},"alias_span":null,"name":"Endpoint","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":0,"index":2300},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188896,"byte_end":188901,"line_start":98,"line_end":98,"column_start":22,"column_end":27},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":0,"index":2181},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188941,"byte_end":188953,"line_start":100,"line_end":100,"column_start":24,"column_end":36},"alias_span":null,"name":"NamedService","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":0,"index":4018},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188955,"byte_end":188961,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"alias_span":null,"name":"Server","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":0,"index":4553},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188984,"byte_end":188995,"line_start":101,"line_end":101,"column_start":21,"column_end":32},"alias_span":null,"name":"Certificate","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":0,"index":4559},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188997,"byte_end":189005,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":64,"index":567},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":189024,"byte_end":189028,"line_start":102,"line_end":102,"column_start":17,"column_end":21},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":19,"index":3188},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":189030,"byte_end":189033,"line_start":102,"line_end":102,"column_start":23,"column_end":26},"alias_span":null,"name":"Uri","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":0,"index":3941},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":189131,"byte_end":189146,"line_start":106,"line_end":106,"column_start":24,"column_end":39},"alias_span":null,"name":"ClientTlsConfig","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":0,"index":4010},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":189241,"byte_end":189256,"line_start":109,"line_end":109,"column_start":23,"column_end":38},"alias_span":null,"name":"ServerTlsConfig","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":83,"index":363},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":3851,"byte_end":3862,"line_start":98,"line_end":98,"column_start":22,"column_end":33},"alias_span":null,"name":"async_trait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":3895,"byte_end":3904,"line_start":101,"line_end":101,"column_start":16,"column_end":25},"alias_span":null,"name":"Streaming","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4566},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":3927,"byte_end":3938,"line_start":102,"line_end":102,"column_start":22,"column_end":33},"alias_span":null,"name":"Interceptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3108},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":3958,"byte_end":3969,"line_start":103,"line_end":103,"column_start":19,"column_end":30},"alias_span":null,"name":"IntoRequest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3111},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":3971,"byte_end":3991,"line_start":103,"line_end":103,"column_start":32,"column_end":52},"alias_span":null,"name":"IntoStreamingRequest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4570},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":3993,"byte_end":4000,"line_start":103,"line_end":103,"column_start":54,"column_end":61},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4583},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":4021,"byte_end":4029,"line_start":104,"line_end":104,"column_start":19,"column_end":27},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4597},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":4048,"byte_end":4052,"line_start":105,"line_end":105,"column_start":18,"column_end":22},"alias_span":null,"name":"Code","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4590},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":4054,"byte_end":4060,"line_start":105,"line_end":105,"column_start":24,"column_end":30},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":83,"index":363},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323291,"byte_end":323302,"line_start":3,"line_end":3,"column_start":22,"column_end":33},"alias_span":null,"name":"async_trait","value":"","parent":{"krate":0,"index":3350}},{"kind":"Use","ref_id":{"krate":23,"index":96},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323326,"byte_end":323332,"line_start":4,"line_end":4,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":3350}},{"kind":"Use","ref_id":{"krate":24,"index":881},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323365,"byte_end":323367,"line_start":5,"line_end":5,"column_start":32,"column_end":34},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":3350}},{"kind":"Use","ref_id":{"krate":24,"index":828},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323369,"byte_end":323376,"line_start":5,"line_end":5,"column_start":36,"column_end":43},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":3350}},{"kind":"Use","ref_id":{"krate":24,"index":6394},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323378,"byte_end":323383,"line_start":5,"line_end":5,"column_start":45,"column_end":50},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":3350}},{"kind":"Use","ref_id":{"krate":18,"index":262},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323406,"byte_end":323410,"line_start":7,"line_end":7,"column_start":20,"column_end":24},"alias_span":null,"name":"HttpBody","value":"","parent":{"krate":0,"index":3350}},{"kind":"Use","ref_id":{"krate":2,"index":12109},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323445,"byte_end":323451,"line_start":8,"line_end":8,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":3350}},{"kind":"Use","ref_id":{"krate":2,"index":40070},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323471,"byte_end":323474,"line_start":9,"line_end":9,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":3350}},{"kind":"Use","ref_id":{"krate":5,"index":5691},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323495,"byte_end":323498,"line_start":10,"line_end":10,"column_start":20,"column_end":23},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":3350}},{"kind":"Use","ref_id":{"krate":2,"index":12361},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323520,"byte_end":323527,"line_start":11,"line_end":11,"column_start":21,"column_end":28},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":3350}},{"kind":"Use","ref_id":{"krate":2,"index":42662},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323529,"byte_end":323533,"line_start":11,"line_end":11,"column_start":30,"column_end":34},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":3350}},{"kind":"Use","ref_id":{"krate":27,"index":13},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323559,"byte_end":323566,"line_start":12,"line_end":12,"column_start":24,"column_end":31},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":3350}},{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323661,"byte_end":323665,"line_start":14,"line_end":14,"column_start":22,"column_end":26},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":3350}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323923,"byte_end":323924,"line_start":21,"line_end":21,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3398}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":0,"byte_end":4241,"line_start":1,"line_end":112,"column_start":1,"column_end":17},"name":"","qualname":"::","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":86},{"krate":0,"index":258},{"krate":0,"index":582},{"krate":0,"index":1431},{"krate":0,"index":1633},{"krate":0,"index":3060},{"krate":0,"index":3086},{"krate":0,"index":3089},{"krate":0,"index":3155},{"krate":0,"index":3174},{"krate":0,"index":3320},{"krate":0,"index":3323},{"krate":0,"index":3326},{"krate":0,"index":3329},{"krate":0,"index":3330},{"krate":0,"index":3333},{"krate":0,"index":3336},{"krate":0,"index":3339},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3346},{"krate":0,"index":3349},{"krate":0,"index":3350}],"decl_id":null,"docs":" A Rust implementation of [gRPC], a high performance, open source, general\n RPC framework that puts mobile and HTTP/2 first.","sig":null,"attributes":[{"value":"/ A Rust implementation of [gRPC], a high performance, open source, general","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ RPC framework that puts mobile and HTTP/2 first.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":78,"byte_end":130,"line_start":2,"line_end":2,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":131,"byte_end":134,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [`tonic`] is a gRPC over HTTP/2 implementation focused on **high","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":135,"byte_end":203,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ performance**, **interoperability**, and **flexibility**. This library was","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":204,"byte_end":282,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ created to have first class support of async/await and to act as a core building","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":283,"byte_end":367,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/ block for production systems written in Rust.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":368,"byte_end":417,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":418,"byte_end":421,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":422,"byte_end":436,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":437,"byte_end":440,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Examples can be found in the [`tonic-examples`] crate.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":441,"byte_end":499,"line_start":11,"line_end":11,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":500,"byte_end":503,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Getting Started","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":504,"byte_end":525,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":526,"byte_end":529,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Follow the instructions in the [`tonic-build`] crate documentation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":530,"byte_end":601,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":602,"byte_end":605,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Feature Flags","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":606,"byte_end":625,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":626,"byte_end":629,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ - `transport`: Enables the fully featured, batteries included client and server","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":630,"byte_end":713,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/ implementation based on [`hyper`], [`tower`] and [`tokio`]. Enabled by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":714,"byte_end":797,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/ - `codegen`: Enables all the required exports and optional dependencies required","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":798,"byte_end":882,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/ for [`tonic-build`]. Enabled by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":883,"byte_end":927,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ - `tls`: Enables the `rustls` based TLS options for the `transport` feature. Not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":928,"byte_end":1012,"line_start":23,"line_end":23,"column_start":1,"column_end":85}},{"value":"/ enabled by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1013,"byte_end":1036,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/ - `tls-roots`: Adds system trust roots to `rustls`-based gRPC clients using the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1037,"byte_end":1120,"line_start":25,"line_end":25,"column_start":1,"column_end":84}},{"value":"/ `rustls-native-certs` crate. Not enabled by default. `tls` must be enabled to use","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1121,"byte_end":1206,"line_start":26,"line_end":26,"column_start":1,"column_end":86}},{"value":"/ `tls-roots`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1207,"byte_end":1223,"line_start":27,"line_end":27,"column_start":1,"column_end":17}},{"value":"/ - `prost`: Enables the [`prost`] based gRPC [`Codec`] implementation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1224,"byte_end":1297,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1298,"byte_end":1301,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Structure","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1302,"byte_end":1317,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1318,"byte_end":1321,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Generic implementation","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1322,"byte_end":1351,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1352,"byte_end":1355,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The main goal of [`tonic`] is to provide a generic gRPC implementation over HTTP/2","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1356,"byte_end":1442,"line_start":34,"line_end":34,"column_start":1,"column_end":87}},{"value":"/ framing. This means at the lowest level this library provides the ability to use","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1443,"byte_end":1527,"line_start":35,"line_end":35,"column_start":1,"column_end":85}},{"value":"/ a generic HTTP/2 implementation with different types of gRPC encodings formats. Generally,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1528,"byte_end":1622,"line_start":36,"line_end":36,"column_start":1,"column_end":95}},{"value":"/ some form of codegen should be used instead of interacting directly with the items in","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1623,"byte_end":1712,"line_start":37,"line_end":37,"column_start":1,"column_end":90}},{"value":"/ [`client`] and [`server`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1713,"byte_end":1743,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1744,"byte_end":1747,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Transport","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1748,"byte_end":1764,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1765,"byte_end":1768,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The [`transport`] module contains a fully featured HTTP/2.0 [`Channel`] (gRPC terminology)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1769,"byte_end":1863,"line_start":42,"line_end":42,"column_start":1,"column_end":95}},{"value":"/ and [`Server`]. These implementations are built on top of [`tokio`], [`hyper`] and [`tower`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1864,"byte_end":1961,"line_start":43,"line_end":43,"column_start":1,"column_end":98}},{"value":"/ It also provides many of the features that the core gRPC libraries provide such as load balancing,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":1962,"byte_end":2064,"line_start":44,"line_end":44,"column_start":1,"column_end":103}},{"value":"/ tls, timeouts, and many more. This implementation can also be used as a reference implementation","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2065,"byte_end":2165,"line_start":45,"line_end":45,"column_start":1,"column_end":101}},{"value":"/ to build even more feature rich clients and servers. This module also provides the ability to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2166,"byte_end":2263,"line_start":46,"line_end":46,"column_start":1,"column_end":98}},{"value":"/ enable TLS using [`rustls`], via the `tls` feature flag.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2264,"byte_end":2324,"line_start":47,"line_end":47,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2325,"byte_end":2328,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [gRPC]: https://grpc.io","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2329,"byte_end":2356,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/ [`tonic`]: https://github.com/hyperium/tonic","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2357,"byte_end":2405,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2406,"byte_end":2442,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/ [`prost`]: https://docs.rs/prost","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2443,"byte_end":2479,"line_start":52,"line_end":52,"column_start":1,"column_end":37}},{"value":"/ [`hyper`]: https://docs.rs/hyper","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2480,"byte_end":2516,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/ [`tower`]: https://docs.rs/tower","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2517,"byte_end":2553,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/ [`tonic-build`]: https://docs.rs/tonic-build","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2554,"byte_end":2602,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"/ [`tonic-examples`]: https://github.com/hyperium/tonic/tree/master/examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2603,"byte_end":2681,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ [`Codec`]: codec/trait.Codec.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2682,"byte_end":2719,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ [`Channel`]: transport/struct.Channel.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2720,"byte_end":2766,"line_start":58,"line_end":58,"column_start":1,"column_end":47}},{"value":"/ [`Server`]: transport/struct.Server.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2767,"byte_end":2811,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/ [`rustls`]: https://docs.rs/rustls","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2812,"byte_end":2850,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ [`client`]: client/index.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2851,"byte_end":2884,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ [`transport`]: transport/index.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2885,"byte_end":2924,"line_start":62,"line_end":62,"column_start":1,"column_end":40}},{"value":"recursion_limit = \"256\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2926,"byte_end":2953,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":2954,"byte_end":3060,"line_start":65,"line_end":70,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"body","qualname":"::body","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":41},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":64},{"krate":0,"index":70},{"krate":0,"index":78},{"krate":0,"index":3403},{"krate":0,"index":3405},{"krate":0,"index":3407},{"krate":0,"index":80}],"decl_id":null,"docs":" HTTP specific body utilities.","sig":null,"attributes":[{"value":"/ HTTP specific body utilities.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4243,"byte_end":4276,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4277,"byte_end":4280,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains traits and helper types to work with http bodies. Most","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4281,"byte_end":4360,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ of the types in this module are based around [`http_body::Body`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4361,"byte_end":4430,"line_start":4,"line_end":4,"column_start":1,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":35},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4636,"byte_end":4640,"line_start":16,"line_end":16,"column_start":11,"column_end":15},"name":"Body","qualname":"::body::Body","value":"Body: sealed::Sealed + Send + Sync","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40}],"decl_id":null,"docs":" A trait alias for [`http_body::Body`].\n","sig":null,"attributes":[{"value":"/ A trait alias for [`http_body::Body`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4583,"byte_end":4625,"line_start":15,"line_end":15,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4710,"byte_end":4714,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"name":"Data","qualname":"::body::Body::Data","value":"type Data: Buf;","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" The body data type.\n","sig":null,"attributes":[{"value":"/ The body data type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4677,"byte_end":4700,"line_start":17,"line_end":17,"column_start":5,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":37},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4773,"byte_end":4778,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Error","qualname":"::body::Body::Error","value":"type Error: Into<Error>;","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" The errors produced from the body.\n","sig":null,"attributes":[{"value":"/ The errors produced from the body.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4725,"byte_end":4763,"line_start":19,"line_end":19,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4907,"byte_end":4920,"line_start":25,"line_end":25,"column_start":8,"column_end":21},"name":"is_end_stream","qualname":"::body::Body::is_end_stream","value":"pub fn is_end_stream(&Self) -> bool","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Check if the stream is over or not.","sig":null,"attributes":[{"value":"/ Check if the stream is over or not.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4798,"byte_end":4837,"line_start":22,"line_end":22,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4842,"byte_end":4845,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Reference [`http_body::Body::is_end_stream`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4850,"byte_end":4899,"line_start":24,"line_end":24,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":5045,"byte_end":5054,"line_start":30,"line_end":30,"column_start":8,"column_end":17},"name":"poll_data","qualname":"::body::Body::poll_data","value":"pub fn poll_data(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Result<Self::Data, Self::Error>>>","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Poll for more data from the body.","sig":null,"attributes":[{"value":"/ Poll for more data from the body.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4942,"byte_end":4979,"line_start":27,"line_end":27,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4984,"byte_end":4987,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Reference [`http_body::Body::poll_data`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4992,"byte_end":5037,"line_start":29,"line_end":29,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":5281,"byte_end":5294,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"poll_trailers","qualname":"::body::Body::poll_trailers","value":"pub fn poll_trailers(Pin<&mut Self>, &mut Context)\n-> Poll<Result<Option<http::HeaderMap>, Self::Error>>","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Poll for the trailing headers.","sig":null,"attributes":[{"value":"/ Poll for the trailing headers.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":5177,"byte_end":5211,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":5216,"byte_end":5219,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Reference [`http_body::Body::poll_trailers`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":5224,"byte_end":5273,"line_start":37,"line_end":37,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":6137,"byte_end":6143,"line_start":79,"line_end":79,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::body::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":52},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":6190,"byte_end":6197,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"BoxBody","qualname":"::body::BoxBody","value":"BoxBody {  }","parent":null,"children":[{"krate":0,"index":53}],"decl_id":null,"docs":" A type erased http body.\n","sig":null,"attributes":[{"value":"/ A type erased http body.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":6150,"byte_end":6178,"line_start":82,"line_end":82,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":6413,"byte_end":6416,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxBody>::new","value":"pub fn new<B>(B) -> Self where B: Body<Data = Bytes, Error = Bytes> + Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BoxBody` mapping item and error to the default types.\n","sig":null,"attributes":[{"value":"/ Create a new `BoxBody` mapping item and error to the default types.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":6330,"byte_end":6401,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":6683,"byte_end":6691,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"map_from","qualname":"<BoxBody>::map_from","value":"pub fn map_from<B>(B) -> Self where B: Body + Send + Sync + 'static,\nB::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BoxBody` mapping item and error to the default types.\n","sig":null,"attributes":[{"value":"/ Create a new `BoxBody` mapping item and error to the default types.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":6600,"byte_end":6671,"line_start":100,"line_end":100,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":6945,"byte_end":6950,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"empty","qualname":"<BoxBody>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BoxBody` that is empty.\n","sig":null,"attributes":[{"value":"/ Create a new `BoxBody` that is empty.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":6892,"byte_end":6933,"line_start":111,"line_end":111,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":86},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":216},{"krate":0,"index":252},{"krate":0,"index":255}],"decl_id":null,"docs":" Generic client implementation.","sig":null,"attributes":[{"value":"/ Generic client implementation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":9524,"byte_end":9558,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":9559,"byte_end":9562,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the low level components to build a gRPC client. It","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":9563,"byte_end":9639,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ provides a codec agnostic gRPC client dispatcher and a decorated tower","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":9640,"byte_end":9714,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ service trait.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":9715,"byte_end":9733,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":9734,"byte_end":9737,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This client is generally used by some code generation tool to provide stubs","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":9738,"byte_end":9817,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ for the gRPC service. Thusly, they are a bit cumbersome to use by hand.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":9818,"byte_end":9893,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":9894,"byte_end":9897,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## Concurrent usage","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":9898,"byte_end":9921,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":9922,"byte_end":9925,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Upon using the your generated client, you will discover all the functions","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":9926,"byte_end":10003,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ corresponding to your rpc methods take `&mut self`, making concurrent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":10004,"byte_end":10077,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ usage of the client difficult. The answer is simply to clone the client,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":10078,"byte_end":10154,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ which is cheap as all client instances will share the same channel for","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":10155,"byte_end":10229,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ communication. For more details, see","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":10230,"byte_end":10270,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ [transport::Channel](../transport/struct.Channel.html#multiplexing-requests).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/mod.rs","byte_start":10271,"byte_end":10352,"line_start":17,"line_end":17,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":11531,"byte_end":11535,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Grpc","qualname":"::client::grpc::Grpc","value":"Grpc {  }","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" A gRPC client dispatcher.","sig":null,"attributes":[{"value":"/ A gRPC client dispatcher.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":10843,"byte_end":10872,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":10873,"byte_end":10876,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This will wrap some inner [`GrpcService`] and will encode/decode","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":10877,"byte_end":10945,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ messages via the provided codec.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":10946,"byte_end":10982,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":10983,"byte_end":10986,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Each request method takes a [`Request`], a [`PathAndQuery`], and a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":10987,"byte_end":11057,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ [`Codec`]. The request contains the message to send via the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":11058,"byte_end":11121,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ [`Codec::encoder`]. The path determines the fully qualified path","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":11122,"byte_end":11190,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/ that will be append to the outgoing uri. The path must follow","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":11191,"byte_end":11256,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ the conventions explained in the [gRPC protocol definition] under `Path →`. An","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":11257,"byte_end":11341,"line_start":26,"line_end":26,"column_start":1,"column_end":83}},{"value":"/ example of this path could look like `/greeter.Greeter/SayHello`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":11342,"byte_end":11411,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":11412,"byte_end":11415,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [gRPC protocol definition]: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#requests","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":11416,"byte_end":11519,"line_start":29,"line_end":29,"column_start":1,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":11694,"byte_end":11697,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Grpc<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new gRPC client with the provided [`GrpcService`].\n","sig":null,"attributes":[{"value":"/ Creates a new gRPC client with the provided [`GrpcService`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":11618,"byte_end":11682,"line_start":36,"line_end":36,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":11944,"byte_end":11960,"line_start":46,"line_end":46,"column_start":12,"column_end":28},"name":"with_interceptor","qualname":"<Grpc<T>>::with_interceptor","value":"pub fn with_interceptor<impl Into<Interceptor>: Into<Interceptor>>(T,\n                                                                   impl Into<Interceptor>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new gRPC client with the provided [`GrpcService`] and will apply\n the provided interceptor on each request.\n","sig":null,"attributes":[{"value":"/ Creates a new gRPC client with the provided [`GrpcService`] and will apply","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":11804,"byte_end":11882,"line_start":44,"line_end":44,"column_start":5,"column_end":83}},{"value":"/ the provided interceptor on each request.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":11887,"byte_end":11932,"line_start":45,"line_end":45,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":12410,"byte_end":12415,"line_start":58,"line_end":58,"column_start":18,"column_end":23},"name":"ready","qualname":"<Grpc<T>>::ready","value":"pub async fn ready<'_>(&'_ mut Self) -> /*impl Trait*/ where\nT: GrpcService<BoxBody>","parent":null,"children":[],"decl_id":null,"docs":" Check if the inner [`GrpcService`] is able to accept a  new request.","sig":null,"attributes":[{"value":"/ Check if the inner [`GrpcService`] is able to accept a  new request.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":12124,"byte_end":12196,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":12201,"byte_end":12204,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This will call [`GrpcService::poll_ready`] until it returns ready or","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":12209,"byte_end":12281,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ an error. If this returns ready the inner [`GrpcService`] is ready to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":12286,"byte_end":12359,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ accept one more request.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":12364,"byte_end":12392,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":12628,"byte_end":12633,"line_start":66,"line_end":66,"column_start":18,"column_end":23},"name":"unary","qualname":"<Grpc<T>>::unary","value":"pub async fn unary<M1, M2, C, '_>(&'_ mut Self, Request<M1>, PathAndQuery, C)\n-> /*impl Trait*/ where T: GrpcService<BoxBody>, T::ResponseBody: Body +\nHttpBody + Send + 'static,\n<T::ResponseBody as HttpBody>::Error: Into<crate::Error>, C: Codec<Encode =\nM1, Decode = M1>, M1: Send + Sync + 'static, M2: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a single unary gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a single unary gRPC request.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":12573,"byte_end":12610,"line_start":65,"line_end":65,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":13271,"byte_end":13287,"line_start":85,"line_end":85,"column_start":18,"column_end":34},"name":"client_streaming","qualname":"<Grpc<T>>::client_streaming","value":"pub async fn client_streaming<S, M1, M2, C,\n                              '_>(&'_ mut Self, Request<S>, PathAndQuery, C)\n-> /*impl Trait*/ where T: GrpcService<BoxBody>, T::ResponseBody: Body +\nHttpBody + Send + 'static,\n<T::ResponseBody as HttpBody>::Error: Into<crate::Error>, S: Stream<Item =\nM1> + Send + Sync + 'static, C: Codec<Encode = M1, Decode = M1>, M1: Send +\nSync + 'static, M2: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a client side streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a client side streaming gRPC request.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":13207,"byte_end":13253,"line_start":84,"line_end":84,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":14427,"byte_end":14443,"line_start":121,"line_end":121,"column_start":18,"column_end":34},"name":"server_streaming","qualname":"<Grpc<T>>::server_streaming","value":"pub async fn server_streaming<M1, M2, C,\n                              '_>(&'_ mut Self, Request<M1>, PathAndQuery, C)\n-> /*impl Trait*/ where T: GrpcService<BoxBody>, T::ResponseBody: Body +\nHttpBody + Send + 'static,\n<T::ResponseBody as HttpBody>::Error: Into<crate::Error>, C: Codec<Encode =\nM1, Decode = M1>, M1: Send + Sync + 'static, M2: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a server side streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a server side streaming gRPC request.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":14363,"byte_end":14409,"line_start":120,"line_end":120,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":15088,"byte_end":15097,"line_start":140,"line_end":140,"column_start":18,"column_end":27},"name":"streaming","qualname":"<Grpc<T>>::streaming","value":"pub async fn streaming<S, M1, M2, C,\n                       '_>(&'_ mut Self, Request<S>, PathAndQuery, C)\n-> /*impl Trait*/ where T: GrpcService<BoxBody>, T::ResponseBody: Body +\nHttpBody + Send + 'static,\n<T::ResponseBody as HttpBody>::Error: Into<crate::Error>, S: Stream<Item =\nM1> + Send + Sync + 'static, C: Codec<Encode = M1, Decode = M1>, M1: Send +\nSync + 'static, M2: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a bi-directional streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a bi-directional streaming gRPC request.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":15021,"byte_end":15070,"line_start":139,"line_end":139,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":236},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18174,"byte_end":18185,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"GrpcService","qualname":"::client::service::GrpcService","value":"GrpcService<ReqBody>","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"decl_id":null,"docs":" Definition of the gRPC trait alias for [`tower_service`].","sig":null,"attributes":[{"value":"/ Definition of the gRPC trait alias for [`tower_service`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":17896,"byte_end":17957,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":17958,"byte_end":17961,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait enforces that all tower services provided to [`Grpc`] implements","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":17962,"byte_end":18041,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the correct traits.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18042,"byte_end":18065,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18066,"byte_end":18069,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Grpc`]: ../client/struct.Grpc.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18070,"byte_end":18110,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/ [`tower_service`]: https://docs.rs/tower-service","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18111,"byte_end":18163,"line_start":13,"line_end":13,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":238},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18251,"byte_end":18263,"line_start":16,"line_end":16,"column_start":10,"column_end":22},"name":"ResponseBody","qualname":"::client::service::GrpcService::ResponseBody","value":"type ResponseBody: Body + HttpBody;","parent":{"krate":0,"index":236},"children":[],"decl_id":null,"docs":" Responses body given by the service.\n","sig":null,"attributes":[{"value":"/ Responses body given by the service.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18201,"byte_end":18241,"line_start":15,"line_end":15,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":239},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18331,"byte_end":18336,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Error","qualname":"::client::service::GrpcService::Error","value":"type Error: Into<crate::Error>;","parent":{"krate":0,"index":236},"children":[],"decl_id":null,"docs":" Errors produced by the service.\n","sig":null,"attributes":[{"value":"/ Errors produced by the service.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18286,"byte_end":18321,"line_start":17,"line_end":17,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":240},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18402,"byte_end":18408,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"name":"Future","qualname":"::client::service::GrpcService::Future","value":"type Future: Future<Output = Result<http::Response<Self::ResponseBody>, Self::Error>>;","parent":{"krate":0,"index":236},"children":[],"decl_id":null,"docs":" The future response value.\n","sig":null,"attributes":[{"value":"/ The future response value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18362,"byte_end":18392,"line_start":19,"line_end":19,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18613,"byte_end":18623,"line_start":25,"line_end":25,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::client::service::GrpcService::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":236},"children":[],"decl_id":null,"docs":" Returns `Ready` when the service is able to process requests.","sig":null,"attributes":[{"value":"/ Returns `Ready` when the service is able to process requests.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18489,"byte_end":18554,"line_start":22,"line_end":22,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18559,"byte_end":18562,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Reference [`Service::poll_ready`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18567,"byte_end":18605,"line_start":24,"line_end":24,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18812,"byte_end":18816,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"call","qualname":"::client::service::GrpcService::call","value":"pub fn call(&mut Self, http::Request<ReqBody>) -> Self::Future","parent":{"krate":0,"index":236},"children":[],"decl_id":null,"docs":" Process the request and return the response asynchronously.","sig":null,"attributes":[{"value":"/ Process the request and return the response asynchronously.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18696,"byte_end":18759,"line_start":27,"line_end":27,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18764,"byte_end":18767,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Reference [`Service::call`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18772,"byte_end":18804,"line_start":29,"line_end":29,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":258},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":289},{"krate":0,"index":401},{"krate":0,"index":487},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":574},{"krate":0,"index":578}],"decl_id":null,"docs":" Generic encoding and decoding.","sig":null,"attributes":[{"value":"/ Generic encoding and decoding.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":19477,"byte_end":19511,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":19512,"byte_end":19515,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the generic `Codec`, `Encoder` and `Decoder` traits","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":19516,"byte_end":19592,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ and a protobuf codec based on prost.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":19593,"byte_end":19633,"line_start":4,"line_end":4,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3409},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":21663,"byte_end":21672,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DecodeBuf","qualname":"::codec::buffer::DecodeBuf","value":"DecodeBuf {  }","parent":null,"children":[{"krate":0,"index":3411},{"krate":0,"index":3412}],"decl_id":null,"docs":" A specialized buffer to decode gRPC messages from.\n","sig":null,"attributes":[{"value":"/ A specialized buffer to decode gRPC messages from.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":21580,"byte_end":21634,"line_start":4,"line_end":4,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3416},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":21808,"byte_end":21817,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"EncodeBuf","qualname":"::codec::buffer::EncodeBuf","value":"EncodeBuf {  }","parent":null,"children":[{"krate":0,"index":3418}],"decl_id":null,"docs":" A specialized buffer to encode gRPC messages into.\n","sig":null,"attributes":[{"value":"/ A specialized buffer to encode gRPC messages into.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":21725,"byte_end":21779,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":22860,"byte_end":22867,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"reserve","qualname":"<EncodeBuf>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted\n into the buffer.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bytes to be inserted","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":22576,"byte_end":22649,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ into the buffer.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":22654,"byte_end":22674,"line_start":56,"line_end":56,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":22679,"byte_end":22682,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ More than `additional` bytes may be reserved in order to avoid frequent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":22687,"byte_end":22762,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ reallocations. A call to `reserve` may result in an allocation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":22767,"byte_end":22834,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":22839,"byte_end":22848,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":24880,"byte_end":24889,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"Streaming","qualname":"::codec::decode::Streaming","value":"Streaming {  }","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365}],"decl_id":null,"docs":" Streaming requests and responses.","sig":null,"attributes":[{"value":"/ Streaming requests and responses.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":24693,"byte_end":24730,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":24731,"byte_end":24734,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This will wrap some inner [`Body`] and [`Decoder`] and provide an interface","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":24735,"byte_end":24814,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ to fetch the message stream and trailing metadata","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":24815,"byte_end":24868,"line_start":20,"line_end":20,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":26000,"byte_end":26011,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"new_request","qualname":"<Streaming<T>>::new_request","value":"pub fn new_request<B, D>(D, B) -> Self where B: Body + Send + Sync + 'static,\nB::Error: Into<crate::Error>, D: Decoder<Item = T, Error = T> + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27318,"byte_end":27325,"line_start":106,"line_end":106,"column_start":18,"column_end":25},"name":"message","qualname":"<Streaming<T>>::message","value":"pub async fn message<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Fetch the next message from this stream.\n ```rust\n # use tonic::{Streaming, Status, codec::Decoder};\n # use std::fmt::Debug;\n # async fn next_message_ex<T, D>(mut request: Streaming<T>) -> Result<(), Status>\n # where T: Debug,\n # D: Decoder<Item = T, Error = Status> + Send + Sync + 'static,\n # {\n if let Some(next_message) = request.message().await? {\n     println!(\"{:?}\", next_message);\n }\n # Ok(())\n # }\n ```\n","sig":null,"attributes":[{"value":"/ Fetch the next message from this stream.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":26793,"byte_end":26837,"line_start":92,"line_end":92,"column_start":5,"column_end":49}},{"value":"/ ```rust","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":26842,"byte_end":26853,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/ # use tonic::{Streaming, Status, codec::Decoder};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":26858,"byte_end":26911,"line_start":94,"line_end":94,"column_start":5,"column_end":58}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":26916,"byte_end":26942,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/ # async fn next_message_ex<T, D>(mut request: Streaming<T>) -> Result<(), Status>","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":26947,"byte_end":27032,"line_start":96,"line_end":96,"column_start":5,"column_end":90}},{"value":"/ # where T: Debug,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27037,"byte_end":27058,"line_start":97,"line_end":97,"column_start":5,"column_end":26}},{"value":"/ # D: Decoder<Item = T, Error = Status> + Send + Sync + 'static,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27063,"byte_end":27130,"line_start":98,"line_end":98,"column_start":5,"column_end":72}},{"value":"/ # {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27135,"byte_end":27142,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ if let Some(next_message) = request.message().await? {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27147,"byte_end":27205,"line_start":100,"line_end":100,"column_start":5,"column_end":63}},{"value":"/     println!(\"{:?}\", next_message);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27210,"byte_end":27249,"line_start":101,"line_end":101,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27254,"byte_end":27259,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27264,"byte_end":27276,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27281,"byte_end":27288,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27293,"byte_end":27300,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":28171,"byte_end":28179,"line_start":129,"line_end":129,"column_start":18,"column_end":26},"name":"trailers","qualname":"<Streaming<T>>::trailers","value":"pub async fn trailers<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Fetch the trailing metadata.","sig":null,"attributes":[{"value":"/ Fetch the trailing metadata.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27574,"byte_end":27606,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27611,"byte_end":27614,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This will drain the stream of all its messages to receive the trailing","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27619,"byte_end":27693,"line_start":116,"line_end":116,"column_start":5,"column_end":79}},{"value":"/ metadata. If [`Streaming::message`] returns `None` then this function","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27698,"byte_end":27771,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"/ will not need to poll for trailers since the body was totally consumed.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27776,"byte_end":27851,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27856,"byte_end":27859,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27864,"byte_end":27875,"line_start":120,"line_end":120,"column_start":5,"column_end":16}},{"value":"/ # use tonic::{Streaming, Status};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27880,"byte_end":27917,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/ # async fn trailers_ex<T>(mut request: Streaming<T>) -> Result<(), Status> {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":27922,"byte_end":28002,"line_start":122,"line_end":122,"column_start":5,"column_end":85}},{"value":"/ if let Some(metadata) = request.trailers().await? {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":28007,"byte_end":28062,"line_start":123,"line_end":123,"column_start":5,"column_end":60}},{"value":"/     println!(\"{:?}\", metadata);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":28067,"byte_end":28102,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":28107,"byte_end":28112,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":28117,"byte_end":28129,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":28134,"byte_end":28141,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":28146,"byte_end":28153,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3626},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/prost.rs","byte_start":38726,"byte_end":38736,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ProstCodec","qualname":"::codec::prost::ProstCodec","value":"ProstCodec {  }","parent":null,"children":[{"krate":0,"index":3629}],"decl_id":null,"docs":" A [`Codec`] that implements `application/grpc+proto` via the prost library..\n","sig":null,"attributes":[{"value":"/ A [`Codec`] that implements `application/grpc+proto` via the prost library..","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/prost.rs","byte_start":38610,"byte_end":38690,"line_start":7,"line_end":7,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":3638},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/prost.rs","byte_start":39394,"byte_end":39406,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"ProstEncoder","qualname":"::codec::prost::ProstEncoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`Encoder`] that knows how to encode `T`.\n","sig":null,"attributes":[{"value":"/ A [`Encoder`] that knows how to encode `T`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/prost.rs","byte_start":39302,"byte_end":39349,"line_start":39,"line_end":39,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":3651},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/prost.rs","byte_start":39823,"byte_end":39835,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"ProstDecoder","qualname":"::codec::prost::ProstDecoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`Decoder`] that knows how to decode `U`.\n","sig":null,"attributes":[{"value":"/ A [`Decoder`] that knows how to decode `U`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/prost.rs","byte_start":39731,"byte_end":39778,"line_start":55,"line_end":55,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":567},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20056,"byte_end":20061,"line_start":23,"line_end":23,"column_start":11,"column_end":16},"name":"Codec","qualname":"::codec::Codec","value":"Codec: Default","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"decl_id":null,"docs":" Trait that knows how to encode and decode gRPC messages.\n","sig":null,"attributes":[{"value":"/ Trait that knows how to encode and decode gRPC messages.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":19985,"byte_end":20045,"line_start":22,"line_end":22,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":568},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20113,"byte_end":20119,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Encode","qualname":"::codec::Codec::Encode","value":"type Encode: Send + 'static;","parent":{"krate":0,"index":567},"children":[],"decl_id":null,"docs":" The encodable message.\n","sig":null,"attributes":[{"value":"/ The encodable message.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20077,"byte_end":20103,"line_start":24,"line_end":24,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":569},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20177,"byte_end":20183,"line_start":27,"line_end":27,"column_start":10,"column_end":16},"name":"Decode","qualname":"::codec::Codec::Decode","value":"type Decode: Send + 'static;","parent":{"krate":0,"index":567},"children":[],"decl_id":null,"docs":" The decodable message.\n","sig":null,"attributes":[{"value":"/ The decodable message.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20141,"byte_end":20167,"line_start":26,"line_end":26,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":570},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20258,"byte_end":20265,"line_start":30,"line_end":30,"column_start":10,"column_end":17},"name":"Encoder","qualname":"::codec::Codec::Encoder","value":"type Encoder: Encoder<Item = Self::Encode, Error = Status> + Send + Sync + 'static;","parent":{"krate":0,"index":567},"children":[],"decl_id":null,"docs":" The encoder that can encode a message.\n","sig":null,"attributes":[{"value":"/ The encoder that can encode a message.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20206,"byte_end":20248,"line_start":29,"line_end":29,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":571},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20393,"byte_end":20400,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"name":"Decoder","qualname":"::codec::Codec::Decoder","value":"type Decoder: Decoder<Item = Self::Decode, Error = Status> + Send + Sync + 'static;","parent":{"krate":0,"index":567},"children":[],"decl_id":null,"docs":" The encoder that can decode a message.\n","sig":null,"attributes":[{"value":"/ The encoder that can decode a message.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20341,"byte_end":20383,"line_start":31,"line_end":31,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20507,"byte_end":20514,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"encoder","qualname":"::codec::Codec::encoder","value":"pub fn encoder(&mut Self) -> Self::Encoder","parent":{"krate":0,"index":567},"children":[],"decl_id":null,"docs":" Fetch the encoder.\n","sig":null,"attributes":[{"value":"/ Fetch the encoder.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20477,"byte_end":20499,"line_start":34,"line_end":34,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20578,"byte_end":20585,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"decoder","qualname":"::codec::Codec::decoder","value":"pub fn decoder(&mut Self) -> Self::Decoder","parent":{"krate":0,"index":567},"children":[],"decl_id":null,"docs":" Fetch the decoder.\n","sig":null,"attributes":[{"value":"/ Fetch the decoder.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20548,"byte_end":20570,"line_start":36,"line_end":36,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":574},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20659,"byte_end":20666,"line_start":41,"line_end":41,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::Encoder","value":"Encoder","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577}],"decl_id":null,"docs":" Encodes gRPC message types\n","sig":null,"attributes":[{"value":"/ Encodes gRPC message types","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20618,"byte_end":20648,"line_start":40,"line_end":40,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":575},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20712,"byte_end":20716,"line_start":43,"line_end":43,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::Encoder::Item","value":"type Item;","parent":{"krate":0,"index":574},"children":[],"decl_id":null,"docs":" The type that is encoded.\n","sig":null,"attributes":[{"value":"/ The type that is encoded.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20673,"byte_end":20702,"line_start":42,"line_end":42,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":576},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20830,"byte_end":20835,"line_start":48,"line_end":48,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":574},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20723,"byte_end":20755,"line_start":45,"line_end":45,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20760,"byte_end":20763,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The type of unrecoverable frame encoding errors.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20768,"byte_end":20820,"line_start":47,"line_end":47,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20914,"byte_end":20920,"line_start":51,"line_end":51,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::Encoder::encode","value":"pub fn encode(&mut Self, Self::Item, &mut EncodeBuf)\n-> Result<(), Self::Error>","parent":{"krate":0,"index":574},"children":[],"decl_id":null,"docs":" Encodes a message into the provided buffer.\n","sig":null,"attributes":[{"value":"/ Encodes a message into the provided buffer.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20859,"byte_end":20906,"line_start":50,"line_end":50,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":578},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":21047,"byte_end":21054,"line_start":55,"line_end":55,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581}],"decl_id":null,"docs":" Decodes gRPC message types\n","sig":null,"attributes":[{"value":"/ Decodes gRPC message types","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":21006,"byte_end":21036,"line_start":54,"line_end":54,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":579},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":21100,"byte_end":21104,"line_start":57,"line_end":57,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The type that is decoded.\n","sig":null,"attributes":[{"value":"/ The type that is decoded.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":21061,"byte_end":21090,"line_start":56,"line_end":56,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":580},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":21173,"byte_end":21178,"line_start":60,"line_end":60,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.\n","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":21111,"byte_end":21163,"line_start":59,"line_end":59,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":21424,"byte_end":21430,"line_start":67,"line_end":67,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::Decoder::decode","value":"pub fn decode(&mut Self, &mut DecodeBuf)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Decode a message from the buffer.","sig":null,"attributes":[{"value":"/ Decode a message from the buffer.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":21202,"byte_end":21239,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":21244,"byte_end":21247,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The buffer will contain exactly the bytes of a full message. There","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":21252,"byte_end":21322,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ is no need to get the length from the bytes, gRPC framing is handled","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":21327,"byte_end":21399,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ for you.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":21404,"byte_end":21416,"line_start":66,"line_end":66,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":582},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metadata","qualname":"::metadata","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":660},{"krate":0,"index":757},{"krate":0,"index":1166},{"krate":0,"index":1349},{"krate":0,"index":1352},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1373},{"krate":0,"index":1376},{"krate":0,"index":1379},{"krate":0,"index":1382},{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1397},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1415},{"krate":0,"index":1418}],"decl_id":null,"docs":" Contains data structures and utilities for handling gRPC custom metadata.\n","sig":null,"attributes":[{"value":"/ Contains data structures and utilities for handling gRPC custom metadata.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":44713,"byte_end":44790,"line_start":1,"line_end":1,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":3664},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":46129,"byte_end":46149,"line_start":10,"line_end":10,"column_start":12,"column_end":32},"name":"InvalidMetadataValue","qualname":"::metadata::encoding::InvalidMetadataValue","value":"InvalidMetadataValue {  }","parent":null,"children":[{"krate":0,"index":3665}],"decl_id":null,"docs":" A possible error when converting a `MetadataValue` from a string or byte\n slice.\n","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataValue` from a string or byte","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":46007,"byte_end":46083,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ slice.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":46084,"byte_end":46094,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":612},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":46323,"byte_end":46329,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::encoding::value_encoding::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":46366,"byte_end":46374,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"is_empty","qualname":"::metadata::encoding::value_encoding::Sealed::is_empty","value":"pub fn is_empty(&[u8]) -> bool","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":46433,"byte_end":46443,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"::metadata::encoding::value_encoding::Sealed::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<HeaderValue, InvalidMetadataValueBytes>","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":46544,"byte_end":46555,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"from_shared","qualname":"::metadata::encoding::value_encoding::Sealed::from_shared","value":"pub fn from_shared(Bytes) -> Result<HeaderValue, InvalidMetadataValueBytes>","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":46656,"byte_end":46667,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"from_static","qualname":"::metadata::encoding::value_encoding::Sealed::from_static","value":"pub fn from_static(&'static str) -> HeaderValue","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":46740,"byte_end":46746,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"decode","qualname":"::metadata::encoding::value_encoding::Sealed::decode","value":"pub fn decode(&[u8]) -> Result<Bytes, InvalidMetadataValueBytes>","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":46841,"byte_end":46847,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"equals","qualname":"::metadata::encoding::value_encoding::Sealed::equals","value":"pub fn equals(&HeaderValue, &[u8]) -> bool","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":46919,"byte_end":46931,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"values_equal","qualname":"::metadata::encoding::value_encoding::Sealed::values_equal","value":"pub fn values_equal(&HeaderValue, &HeaderValue) -> bool","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":47010,"byte_end":47013,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"fmt","qualname":"::metadata::encoding::value_encoding::Sealed::fmt","value":"pub fn fmt(&HeaderValue, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":621},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":47098,"byte_end":47111,"line_start":47,"line_end":47,"column_start":11,"column_end":24},"name":"ValueEncoding","qualname":"::metadata::encoding::ValueEncoding","value":"ValueEncoding: Clone + Eq + PartialEq + Hash + self::value_encoding::Sealed","parent":null,"children":[{"krate":0,"index":622}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":47368,"byte_end":47380,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"is_valid_key","qualname":"::metadata::encoding::ValueEncoding::is_valid_key","value":"pub fn is_valid_key(&str) -> bool","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":" Returns true if the provided key is valid for this ValueEncoding type.\n For example, `Ascii::is_valid_key(\"a\") == true`,\n `Ascii::is_valid_key(\"a-bin\") == false`.\n","sig":null,"attributes":[{"value":"/ Returns true if the provided key is valid for this ValueEncoding type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":47180,"byte_end":47254,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ For example, `Ascii::is_valid_key(\"a\") == true`,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":47259,"byte_end":47311,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ `Ascii::is_valid_key(\"a-bin\") == false`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":47316,"byte_end":47360,"line_start":50,"line_end":50,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":3671},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":47473,"byte_end":47478,"line_start":56,"line_end":56,"column_start":10,"column_end":15},"name":"Ascii","qualname":"::metadata::encoding::Ascii","value":"pub enum Ascii { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3685},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":47551,"byte_end":47557,"line_start":59,"line_end":59,"column_start":10,"column_end":16},"name":"Binary","qualname":"::metadata::encoding::Binary","value":"pub enum Binary { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3699},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":51347,"byte_end":51372,"line_start":190,"line_end":190,"column_start":12,"column_end":37},"name":"InvalidMetadataValueBytes","qualname":"::metadata::encoding::InvalidMetadataValueBytes","value":"","parent":null,"children":[],"decl_id":null,"docs":" A possible error when converting a `MetadataValue` from a string or byte\n slice.\n","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataValue` from a string or byte","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":51225,"byte_end":51301,"line_start":187,"line_end":187,"column_start":1,"column_end":77}},{"value":"/ slice.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":51302,"byte_end":51312,"line_start":188,"line_end":188,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":3707},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52253,"byte_end":52264,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"MetadataKey","qualname":"::metadata::key::MetadataKey","value":"MetadataKey {  }","parent":null,"children":[{"krate":0,"index":3709},{"krate":0,"index":3710}],"decl_id":null,"docs":" Represents a custom metadata field name.","sig":null,"attributes":[{"value":"/ Represents a custom metadata field name.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":51990,"byte_end":52034,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52035,"byte_end":52038,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `MetadataKey` is used as the [`MetadataMap`] key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52039,"byte_end":52092,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52093,"byte_end":52096,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`HeaderMap`]: struct.HeaderMap.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52097,"byte_end":52137,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/ [`MetadataMap`]: struct.MetadataMap.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52138,"byte_end":52182,"line_start":16,"line_end":16,"column_start":1,"column_end":45}},{"value":"repr(transparent)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52221,"byte_end":52241,"line_start":18,"line_end":18,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":3729},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52594,"byte_end":52612,"line_start":28,"line_end":28,"column_start":12,"column_end":30},"name":"InvalidMetadataKey","qualname":"::metadata::key::InvalidMetadataKey","value":"InvalidMetadataKey {  }","parent":null,"children":[{"krate":0,"index":3730}],"decl_id":null,"docs":" A possible error when converting a `MetadataKey` from another type.\n","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataKey` from another type.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52494,"byte_end":52565,"line_start":26,"line_end":26,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":692},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52669,"byte_end":52685,"line_start":33,"line_end":33,"column_start":10,"column_end":26},"name":"AsciiMetadataKey","qualname":"::metadata::key::AsciiMetadataKey","value":"MetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" An ascii metadata key.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52633,"byte_end":52659,"line_start":32,"line_end":32,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":693},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52744,"byte_end":52761,"line_start":35,"line_end":35,"column_start":10,"column_end":27},"name":"BinaryMetadataKey","qualname":"::metadata::key::BinaryMetadataKey","value":"MetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" A binary metadata key.\n","sig":null,"attributes":[{"value":"/ A binary metadata key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52708,"byte_end":52734,"line_start":34,"line_end":34,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52945,"byte_end":52955,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<MetadataKey<VE>>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self, InvalidMetadataKey>","parent":null,"children":[],"decl_id":null,"docs":" Converts a slice of bytes to a `MetadataKey`.","sig":null,"attributes":[{"value":"/ Converts a slice of bytes to a `MetadataKey`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52832,"byte_end":52881,"line_start":38,"line_end":38,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52886,"byte_end":52889,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This function normalizes the input.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52894,"byte_end":52933,"line_start":40,"line_end":40,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":55092,"byte_end":55103,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"from_static","qualname":"<MetadataKey<VE>>::from_static","value":"pub fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a static string to a `MetadataKey`.","sig":null,"attributes":[{"value":"/ Converts a static string to a `MetadataKey`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53416,"byte_end":53464,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53469,"byte_end":53472,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics when the static string is a invalid metadata key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53477,"byte_end":53551,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53556,"byte_end":53559,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ This function requires the static string to only contain lowercase","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53564,"byte_end":53634,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ characters, numerals and symbols, as per the HTTP/2.0 specification","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53639,"byte_end":53710,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/ and header names internal representation within this library.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53715,"byte_end":53780,"line_start":63,"line_end":63,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53785,"byte_end":53788,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53793,"byte_end":53796,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53801,"byte_end":53815,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53820,"byte_end":53823,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53828,"byte_end":53835,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53840,"byte_end":53869,"line_start":69,"line_end":69,"column_start":5,"column_end":34}},{"value":"/ // Parsing a metadata key","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53874,"byte_end":53903,"line_start":70,"line_end":70,"column_start":5,"column_end":34}},{"value":"/ let CUSTOM_KEY: &'static str = \"custom-key\";","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53908,"byte_end":53956,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53961,"byte_end":53964,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let a = AsciiMetadataKey::from_bytes(b\"custom-key\").unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":53969,"byte_end":54034,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ let b = AsciiMetadataKey::from_static(CUSTOM_KEY);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54039,"byte_end":54093,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54098,"byte_end":54119,"line_start":75,"line_end":75,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54124,"byte_end":54131,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54136,"byte_end":54139,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54144,"byte_end":54163,"line_start":78,"line_end":78,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54168,"byte_end":54197,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/ // Parsing a metadata key that contains invalid symbols(s):","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54202,"byte_end":54265,"line_start":80,"line_end":80,"column_start":5,"column_end":68}},{"value":"/ AsciiMetadataKey::from_static(\"content{}{}length\"); // This line panics!","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54270,"byte_end":54346,"line_start":81,"line_end":81,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54351,"byte_end":54358,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54363,"byte_end":54366,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54371,"byte_end":54390,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54395,"byte_end":54424,"line_start":85,"line_end":85,"column_start":5,"column_end":34}},{"value":"/ // Parsing a metadata key that contains invalid uppercase characters.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54429,"byte_end":54502,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ let a = AsciiMetadataKey::from_static(\"foobar\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54507,"byte_end":54559,"line_start":87,"line_end":87,"column_start":5,"column_end":57}},{"value":"/ let b = AsciiMetadataKey::from_static(\"FOOBAR\"); // This line panics!","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54564,"byte_end":54637,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54642,"byte_end":54649,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54654,"byte_end":54657,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54662,"byte_end":54681,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54686,"byte_end":54715,"line_start":92,"line_end":92,"column_start":5,"column_end":34}},{"value":"/ // Parsing a -bin metadata key as an Ascii key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54720,"byte_end":54771,"line_start":93,"line_end":93,"column_start":5,"column_end":56}},{"value":"/ let b = AsciiMetadataKey::from_static(\"hello-bin\"); // This line panics!","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54776,"byte_end":54852,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54857,"byte_end":54864,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54869,"byte_end":54872,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54877,"byte_end":54896,"line_start":97,"line_end":97,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54901,"byte_end":54930,"line_start":98,"line_end":98,"column_start":5,"column_end":34}},{"value":"/ // Parsing a non-bin metadata key as an Binary key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54935,"byte_end":54990,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/ let b = BinaryMetadataKey::from_static(\"hello\"); // This line panics!","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":54995,"byte_end":55068,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":55073,"byte_end":55080,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":55528,"byte_end":55534,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"as_str","qualname":"<MetadataKey<VE>>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a `str` representation of the metadata key.","sig":null,"attributes":[{"value":"/ Returns a `str` representation of the metadata key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":55384,"byte_end":55439,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":55444,"byte_end":55447,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The returned string will always be lower case.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":55452,"byte_end":55502,"line_start":116,"line_end":116,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":55507,"byte_end":55516,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":57424,"byte_end":57427,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"new","qualname":"<InvalidMetadataKey>::new","value":"pub fn new() -> InvalidMetadataKey","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3733},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61226,"byte_end":61237,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"MetadataMap","qualname":"::metadata::map::MetadataMap","value":"MetadataMap {  }","parent":null,"children":[{"krate":0,"index":3734}],"decl_id":null,"docs":" A set of gRPC custom metadata entries.","sig":null,"attributes":[{"value":"/ A set of gRPC custom metadata entries.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":60584,"byte_end":60626,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":60627,"byte_end":60630,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":60631,"byte_end":60645,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":60646,"byte_end":60649,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":60650,"byte_end":60665,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":60666,"byte_end":60669,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":60670,"byte_end":60677,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":60678,"byte_end":60707,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":60708,"byte_end":60745,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":60746,"byte_end":60749,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ map.insert(\"x-host\", \"example.com\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":60750,"byte_end":60807,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":60808,"byte_end":60859,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"[binary data]\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":60860,"byte_end":60943,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":60944,"byte_end":60947,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ assert!(map.contains_key(\"x-host\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":60948,"byte_end":60988,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/ assert!(!map.contains_key(\"x-location\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":60989,"byte_end":61034,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61035,"byte_end":61038,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), \"example.com\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61039,"byte_end":61097,"line_start":28,"line_end":28,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61098,"byte_end":61101,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ map.remove(\"x-host\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61102,"byte_end":61127,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61128,"byte_end":61131,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ assert!(!map.contains_key(\"x-host\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61132,"byte_end":61173,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61174,"byte_end":61181,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3741},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61472,"byte_end":61476,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"Iter","qualname":"::metadata::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3743}],"decl_id":null,"docs":" `MetadataMap` entry iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` entry iterator.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61273,"byte_end":61306,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61307,"byte_end":61310,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Yields `KeyAndValueRef` values. The same header name may be yielded","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61311,"byte_end":61382,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ more than once if it has more than one associated value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61383,"byte_end":61443,"line_start":42,"line_end":42,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3749},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61770,"byte_end":61775,"line_start":53,"line_end":53,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::KeyAndValueRef::Ascii","value":"KeyAndValueRef::Ascii(&'a MetadataKey<Ascii>, &'a MetadataValue<Ascii>)","parent":{"krate":0,"index":3747},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61729,"byte_end":61765,"line_start":52,"line_end":52,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3753},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61872,"byte_end":61878,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::KeyAndValueRef::Binary","value":"KeyAndValueRef::Binary(&'a MetadataKey<Binary>, &'a MetadataValue<Binary>)","parent":{"krate":0,"index":3747},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61831,"byte_end":61867,"line_start":54,"line_end":54,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3747},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61704,"byte_end":61718,"line_start":51,"line_end":51,"column_start":10,"column_end":24},"name":"KeyAndValueRef","qualname":"::metadata::map::KeyAndValueRef","value":"pub enum KeyAndValueRef<'a> {\n    Ascii(&'a MetadataKey<Ascii>, &'a MetadataValue<Ascii>),\n    Binary(&'a MetadataKey<Binary>, &'a MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3749},{"krate":0,"index":3753}],"decl_id":null,"docs":" Reference to a key and an associated value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\") key.\n","sig":null,"attributes":[{"value":"/ Reference to a key and an associated value in a `MetadataMap`. It can point","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61548,"byte_end":61627,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ to either an ascii or a binary (\"*-bin\") key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61628,"byte_end":61677,"line_start":49,"line_end":49,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3762},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62160,"byte_end":62165,"line_start":63,"line_end":63,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::KeyAndMutValueRef::Ascii","value":"KeyAndMutValueRef::Ascii(&'a MetadataKey<Ascii>, &'a mut MetadataValue<Ascii>)","parent":{"krate":0,"index":3760},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62119,"byte_end":62155,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3766},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62266,"byte_end":62272,"line_start":65,"line_end":65,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::KeyAndMutValueRef::Binary","value":"KeyAndMutValueRef::Binary(&'a MetadataKey<Binary>, &'a mut MetadataValue<Binary>)","parent":{"krate":0,"index":3760},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62225,"byte_end":62261,"line_start":64,"line_end":64,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3760},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62091,"byte_end":62108,"line_start":61,"line_end":61,"column_start":10,"column_end":27},"name":"KeyAndMutValueRef","qualname":"::metadata::map::KeyAndMutValueRef","value":"pub enum KeyAndMutValueRef<'a> {\n    Ascii(&'a MetadataKey<Ascii>, &'a mut MetadataValue<Ascii>),\n    Binary(&'a MetadataKey<Binary>, &'a mut MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3762},{"krate":0,"index":3766}],"decl_id":null,"docs":" Reference to a key and an associated value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\") key.\n","sig":null,"attributes":[{"value":"/ Reference to a key and an associated value in a `MetadataMap`. It can point","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":61935,"byte_end":62014,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ to either an ascii or a binary (\"*-bin\") key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62015,"byte_end":62064,"line_start":59,"line_end":59,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3773},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62544,"byte_end":62551,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::metadata::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":3775}],"decl_id":null,"docs":" `MetadataMap` entry iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` entry iterator.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62333,"byte_end":62366,"line_start":68,"line_end":68,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62367,"byte_end":62370,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Yields `(&MetadataKey, &mut value)` tuples. The same header name may be yielded","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62371,"byte_end":62454,"line_start":70,"line_end":70,"column_start":1,"column_end":84}},{"value":"/ more than once if it has more than one associated value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62455,"byte_end":62515,"line_start":71,"line_end":71,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3779},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62728,"byte_end":62738,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"ValueDrain","qualname":"::metadata::map::ValueDrain","value":"ValueDrain {  }","parent":null,"children":[{"krate":0,"index":3782},{"krate":0,"index":3783}],"decl_id":null,"docs":" A drain iterator of all values associated with a single metadata key.\n","sig":null,"attributes":[{"value":"/ A drain iterator of all values associated with a single metadata key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62626,"byte_end":62699,"line_start":77,"line_end":77,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3788},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63056,"byte_end":63060,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"Keys","qualname":"::metadata::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":3790}],"decl_id":null,"docs":" An iterator over `MetadataMap` keys.","sig":null,"attributes":[{"value":"/ An iterator over `MetadataMap` keys.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62865,"byte_end":62905,"line_start":84,"line_end":84,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62906,"byte_end":62909,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Yields `KeyRef` values. Each header name is yielded only once, even if it","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62910,"byte_end":62987,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ has more than one associated value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":62988,"byte_end":63027,"line_start":87,"line_end":87,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3796},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63322,"byte_end":63327,"line_start":98,"line_end":98,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::KeyRef::Ascii","value":"KeyRef::Ascii(&'a MetadataKey<Ascii>)","parent":{"krate":0,"index":3794},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63281,"byte_end":63317,"line_start":97,"line_end":97,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3799},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63398,"byte_end":63404,"line_start":100,"line_end":100,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::KeyRef::Binary","value":"KeyRef::Binary(&'a MetadataKey<Binary>)","parent":{"krate":0,"index":3794},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63357,"byte_end":63393,"line_start":99,"line_end":99,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3794},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63264,"byte_end":63270,"line_start":96,"line_end":96,"column_start":10,"column_end":16},"name":"KeyRef","qualname":"::metadata::map::KeyRef","value":"pub enum KeyRef<'a> {\n    Ascii(&'a MetadataKey<Ascii>),\n    Binary(&'a MetadataKey<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3796},{"krate":0,"index":3799}],"decl_id":null,"docs":" Reference to a key in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\") key.\n","sig":null,"attributes":[{"value":"/ Reference to a key in a `MetadataMap`. It can point","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63132,"byte_end":63187,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/ to either an ascii or a binary (\"*-bin\") key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63188,"byte_end":63237,"line_start":94,"line_end":94,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3805},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63593,"byte_end":63599,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"name":"Values","qualname":"::metadata::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":3807}],"decl_id":null,"docs":" `MetadataMap` value iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` value iterator.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63434,"byte_end":63467,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63468,"byte_end":63471,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Yields `ValueRef` values. Each value contained in the `MetadataMap` will be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63472,"byte_end":63551,"line_start":105,"line_end":105,"column_start":1,"column_end":80}},{"value":"/ yielded.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63552,"byte_end":63564,"line_start":106,"line_end":106,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3813},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63993,"byte_end":63998,"line_start":119,"line_end":119,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::ValueRef::Ascii","value":"ValueRef::Ascii(&'a MetadataValue<Ascii>)","parent":{"krate":0,"index":3811},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63952,"byte_end":63988,"line_start":118,"line_end":118,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3816},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":64071,"byte_end":64077,"line_start":121,"line_end":121,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::ValueRef::Binary","value":"ValueRef::Binary(&'a MetadataValue<Binary>)","parent":{"krate":0,"index":3811},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":64030,"byte_end":64066,"line_start":120,"line_end":120,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3811},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63933,"byte_end":63941,"line_start":117,"line_end":117,"column_start":10,"column_end":18},"name":"ValueRef","qualname":"::metadata::map::ValueRef","value":"pub enum ValueRef<'a> {\n    Ascii(&'a MetadataValue<Ascii>),\n    Binary(&'a MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3813},{"krate":0,"index":3816}],"decl_id":null,"docs":" Reference to a value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\" key) value.\n","sig":null,"attributes":[{"value":"/ Reference to a value in a `MetadataMap`. It can point","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63793,"byte_end":63850,"line_start":114,"line_end":114,"column_start":1,"column_end":58}},{"value":"/ to either an ascii or a binary (\"*-bin\" key) value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":63851,"byte_end":63906,"line_start":115,"line_end":115,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3822},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":64238,"byte_end":64247,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::metadata::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":3824}],"decl_id":null,"docs":" `MetadataMap` value iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` value iterator.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":64109,"byte_end":64142,"line_start":124,"line_end":124,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":64143,"byte_end":64146,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Each value contained in the `MetadataMap` will be yielded.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":64147,"byte_end":64209,"line_start":126,"line_end":126,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3830},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":64653,"byte_end":64658,"line_start":139,"line_end":139,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::ValueRefMut::Ascii","value":"ValueRefMut::Ascii(&'a mut MetadataValue<Ascii>)","parent":{"krate":0,"index":3828},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":64612,"byte_end":64648,"line_start":138,"line_end":138,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3833},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":64735,"byte_end":64741,"line_start":141,"line_end":141,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::ValueRefMut::Binary","value":"ValueRefMut::Binary(&'a mut MetadataValue<Binary>)","parent":{"krate":0,"index":3828},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":64694,"byte_end":64730,"line_start":140,"line_end":140,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3828},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":64590,"byte_end":64601,"line_start":137,"line_end":137,"column_start":10,"column_end":21},"name":"ValueRefMut","qualname":"::metadata::map::ValueRefMut","value":"pub enum ValueRefMut<'a> {\n    Ascii(&'a mut MetadataValue<Ascii>),\n    Binary(&'a mut MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3830},{"krate":0,"index":3833}],"decl_id":null,"docs":" Reference to a value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\" key) value.\n","sig":null,"attributes":[{"value":"/ Reference to a value in a `MetadataMap`. It can point","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":64450,"byte_end":64507,"line_start":134,"line_end":134,"column_start":1,"column_end":58}},{"value":"/ to either an ascii or a binary (\"*-bin\" key) value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":64508,"byte_end":64563,"line_start":135,"line_end":135,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3839},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":64874,"byte_end":64883,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"ValueIter","qualname":"::metadata::map::ValueIter","value":"ValueIter {  }","parent":null,"children":[{"krate":0,"index":3842},{"krate":0,"index":3843}],"decl_id":null,"docs":" An iterator of all values associated with a single metadata key.\n","sig":null,"attributes":[{"value":"/ An iterator of all values associated with a single metadata key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":64777,"byte_end":64845,"line_start":144,"line_end":144,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":3848},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65114,"byte_end":65126,"line_start":153,"line_end":153,"column_start":12,"column_end":24},"name":"ValueIterMut","qualname":"::metadata::map::ValueIterMut","value":"ValueIterMut {  }","parent":null,"children":[{"krate":0,"index":3851},{"krate":0,"index":3852}],"decl_id":null,"docs":" An iterator of all values associated with a single metadata key.\n","sig":null,"attributes":[{"value":"/ An iterator of all values associated with a single metadata key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65017,"byte_end":65085,"line_start":151,"line_end":151,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":3857},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65428,"byte_end":65434,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"GetAll","qualname":"::metadata::map::GetAll","value":"GetAll {  }","parent":null,"children":[{"krate":0,"index":3860},{"krate":0,"index":3861}],"decl_id":null,"docs":" A view to all values stored in a single entry.","sig":null,"attributes":[{"value":"/ A view to all values stored in a single entry.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65255,"byte_end":65305,"line_start":158,"line_end":158,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65306,"byte_end":65309,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ This struct is returned by `MetadataMap::get_all` and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65310,"byte_end":65367,"line_start":160,"line_end":160,"column_start":1,"column_end":58}},{"value":"/ `MetadataMap::get_all_bin`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65368,"byte_end":65399,"line_start":161,"line_end":161,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3869},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65743,"byte_end":65751,"line_start":173,"line_end":173,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::metadata::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":" An occupied entry\n","sig":null,"attributes":[{"value":"/ An occupied entry","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65717,"byte_end":65738,"line_start":172,"line_end":172,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3872},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65804,"byte_end":65810,"line_start":176,"line_end":176,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::metadata::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":" A vacant entry\n","sig":null,"attributes":[{"value":"/ A vacant entry","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65781,"byte_end":65799,"line_start":175,"line_end":175,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":3866},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65682,"byte_end":65687,"line_start":171,"line_end":171,"column_start":10,"column_end":15},"name":"Entry","qualname":"::metadata::map::Entry","value":"pub enum Entry<'a, VE: ValueEncoding> {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":3869},{"krate":0,"index":3872}],"decl_id":null,"docs":" A view into a single location in a `MetadataMap`, which may be vacant or\n occupied.\n","sig":null,"attributes":[{"value":"/ A view into a single location in a `MetadataMap`, which may be vacant or","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65565,"byte_end":65641,"line_start":168,"line_end":168,"column_start":1,"column_end":77}},{"value":"/ occupied.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65642,"byte_end":65655,"line_start":169,"line_end":169,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3879},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65985,"byte_end":65996,"line_start":183,"line_end":183,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::metadata::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":3882},{"krate":0,"index":3883}],"decl_id":null,"docs":" A view into a single empty location in a `MetadataMap`.","sig":null,"attributes":[{"value":"/ A view into a single empty location in a `MetadataMap`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65836,"byte_end":65895,"line_start":179,"line_end":179,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65896,"byte_end":65899,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ This struct is returned as part of the `Entry` enum.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":65900,"byte_end":65956,"line_start":181,"line_end":181,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3888},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":66276,"byte_end":66289,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::metadata::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":3891},{"krate":0,"index":3892}],"decl_id":null,"docs":" A view into a single occupied location in a `MetadataMap`.","sig":null,"attributes":[{"value":"/ A view into a single occupied location in a `MetadataMap`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":66124,"byte_end":66186,"line_start":188,"line_end":188,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":66187,"byte_end":66190,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ This struct is returned as part of the `Entry` enum.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":66191,"byte_end":66247,"line_start":190,"line_end":190,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67140,"byte_end":67143,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"new","qualname":"<MetadataMap>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `MetadataMap`.","sig":null,"attributes":[{"value":"/ Create an empty `MetadataMap`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":66780,"byte_end":66814,"line_start":212,"line_end":212,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":66819,"byte_end":66822,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The map will be created without any capacity. This function will not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":66827,"byte_end":66899,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ allocate.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":66904,"byte_end":66917,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":66922,"byte_end":66925,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":66930,"byte_end":66944,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":66949,"byte_end":66952,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":66957,"byte_end":66964,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":66969,"byte_end":66998,"line_start":220,"line_end":220,"column_start":5,"column_end":34}},{"value":"/ let map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67003,"byte_end":67036,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67041,"byte_end":67044,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67049,"byte_end":67077,"line_start":223,"line_end":223,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(0, map.capacity());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67082,"byte_end":67116,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67121,"byte_end":67128,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67263,"byte_end":67275,"line_start":231,"line_end":231,"column_start":12,"column_end":24},"name":"from_headers","qualname":"<MetadataMap>::from_headers","value":"pub fn from_headers(http::HeaderMap) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an HTTP HeaderMap to a MetadataMap\n","sig":null,"attributes":[{"value":"/ Convert an HTTP HeaderMap to a MetadataMap","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67205,"byte_end":67251,"line_start":230,"line_end":230,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67738,"byte_end":67750,"line_start":248,"line_end":248,"column_start":12,"column_end":24},"name":"into_headers","qualname":"<MetadataMap>::into_headers","value":"pub fn into_headers(Self) -> http::HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Convert a MetadataMap into a HTTP HeaderMap","sig":null,"attributes":[{"value":"/ Convert a MetadataMap into a HTTP HeaderMap","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67355,"byte_end":67402,"line_start":235,"line_end":235,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67407,"byte_end":67410,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67415,"byte_end":67429,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67434,"byte_end":67437,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67442,"byte_end":67449,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67454,"byte_end":67483,"line_start":240,"line_end":240,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67488,"byte_end":67525,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"example.com\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67530,"byte_end":67587,"line_start":242,"line_end":242,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67592,"byte_end":67595,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let http_map = map.into_headers();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67600,"byte_end":67638,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67643,"byte_end":67646,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(http_map.get(\"x-host\").unwrap(), \"example.com\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67651,"byte_end":67714,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":67719,"byte_end":67726,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68690,"byte_end":68703,"line_start":277,"line_end":277,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<MetadataMap>::with_capacity","value":"pub fn with_capacity(usize) -> MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `MetadataMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Create an empty `MetadataMap` with the specified capacity.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68005,"byte_end":68067,"line_start":259,"line_end":259,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68072,"byte_end":68075,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ The returned map will allocate internal storage in order to hold about","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68080,"byte_end":68154,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/ `capacity` elements without reallocating. However, this is a \"best","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68159,"byte_end":68229,"line_start":262,"line_end":262,"column_start":5,"column_end":75}},{"value":"/ effort\" as there are usage patterns that could cause additional","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68234,"byte_end":68301,"line_start":263,"line_end":263,"column_start":5,"column_end":72}},{"value":"/ allocations before `capacity` metadata entries are stored in the map.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68306,"byte_end":68379,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68384,"byte_end":68387,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ More capacity than requested may be allocated.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68392,"byte_end":68442,"line_start":266,"line_end":266,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68447,"byte_end":68450,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68455,"byte_end":68469,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68474,"byte_end":68477,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68482,"byte_end":68489,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68494,"byte_end":68523,"line_start":271,"line_end":271,"column_start":5,"column_end":34}},{"value":"/ let map: MetadataMap = MetadataMap::with_capacity(10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68528,"byte_end":68586,"line_start":272,"line_end":272,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68591,"byte_end":68594,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68599,"byte_end":68627,"line_start":274,"line_end":274,"column_start":5,"column_end":33}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68632,"byte_end":68666,"line_start":275,"line_end":275,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68671,"byte_end":68678,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69675,"byte_end":69678,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"len","qualname":"<MetadataMap>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of metadata entries (ascii and binary) stored in the\n map.","sig":null,"attributes":[{"value":"/ Returns the number of metadata entries (ascii and binary) stored in the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68844,"byte_end":68919,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ map.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68924,"byte_end":68932,"line_start":284,"line_end":284,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68937,"byte_end":68940,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This number represents the total number of **values** stored in the map.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":68945,"byte_end":69021,"line_start":286,"line_end":286,"column_start":5,"column_end":81}},{"value":"/ This number can be greater than or equal to the number of **keys**","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69026,"byte_end":69096,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/ stored given that a single key may have more than one associated value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69101,"byte_end":69176,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69181,"byte_end":69184,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69189,"byte_end":69203,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69208,"byte_end":69211,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69216,"byte_end":69223,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69228,"byte_end":69257,"line_start":293,"line_end":293,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69262,"byte_end":69299,"line_start":294,"line_end":294,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69304,"byte_end":69307,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, map.len());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69312,"byte_end":69341,"line_start":296,"line_end":296,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69346,"byte_end":69349,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host-ip\", \"127.0.0.1\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69354,"byte_end":69412,"line_start":298,"line_end":298,"column_start":5,"column_end":63}},{"value":"/ map.insert_bin(\"x-host-name-bin\", MetadataValue::from_bytes(b\"localhost\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69417,"byte_end":69496,"line_start":299,"line_end":299,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69501,"byte_end":69504,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, map.len());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69509,"byte_end":69538,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69543,"byte_end":69546,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host-ip\", \"text/html\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69551,"byte_end":69609,"line_start":303,"line_end":303,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69614,"byte_end":69617,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(3, map.len());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69622,"byte_end":69651,"line_start":305,"line_end":305,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69656,"byte_end":69663,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70444,"byte_end":70452,"line_start":333,"line_end":333,"column_start":12,"column_end":20},"name":"keys_len","qualname":"<MetadataMap>::keys_len","value":"pub fn keys_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of keys (ascii and binary) stored in the map.","sig":null,"attributes":[{"value":"/ Returns the number of keys (ascii and binary) stored in the map.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69735,"byte_end":69803,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69808,"byte_end":69811,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This number will be less than or equal to `len()` as each key may have","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69816,"byte_end":69890,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ more than one associated value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69895,"byte_end":69930,"line_start":314,"line_end":314,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69935,"byte_end":69938,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69943,"byte_end":69957,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69962,"byte_end":69965,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69970,"byte_end":69977,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":69982,"byte_end":70011,"line_start":319,"line_end":319,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70016,"byte_end":70053,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70058,"byte_end":70061,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, map.keys_len());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70066,"byte_end":70100,"line_start":322,"line_end":322,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70105,"byte_end":70108,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host-ip\", \"127.0.0.1\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70113,"byte_end":70171,"line_start":324,"line_end":324,"column_start":5,"column_end":63}},{"value":"/ map.insert_bin(\"x-host-name-bin\", MetadataValue::from_bytes(b\"localhost\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70176,"byte_end":70255,"line_start":325,"line_end":325,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70260,"byte_end":70263,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, map.keys_len());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70268,"byte_end":70302,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70307,"byte_end":70310,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host-ip\", \"text/html\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70315,"byte_end":70373,"line_start":329,"line_end":329,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70378,"byte_end":70381,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, map.keys_len());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70386,"byte_end":70420,"line_start":331,"line_end":331,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70425,"byte_end":70432,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70863,"byte_end":70871,"line_start":351,"line_end":351,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MetadataMap>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70514,"byte_end":70563,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70568,"byte_end":70571,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70576,"byte_end":70590,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70595,"byte_end":70598,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70603,"byte_end":70610,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70615,"byte_end":70644,"line_start":342,"line_end":342,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70649,"byte_end":70686,"line_start":343,"line_end":343,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70691,"byte_end":70694,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70699,"byte_end":70727,"line_start":345,"line_end":345,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70732,"byte_end":70735,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70740,"byte_end":70797,"line_start":347,"line_end":347,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70802,"byte_end":70805,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70810,"byte_end":70839,"line_start":349,"line_end":349,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70844,"byte_end":70851,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71335,"byte_end":71340,"line_start":369,"line_end":369,"column_start":12,"column_end":17},"name":"clear","qualname":"<MetadataMap>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs. Keeps the allocated memory\n for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs. Keeps the allocated memory","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":70932,"byte_end":71008,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/ for reuse.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71013,"byte_end":71027,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71032,"byte_end":71035,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71040,"byte_end":71054,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71059,"byte_end":71062,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71067,"byte_end":71074,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71079,"byte_end":71108,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71113,"byte_end":71150,"line_start":362,"line_end":362,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71155,"byte_end":71212,"line_start":363,"line_end":363,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71217,"byte_end":71220,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ map.clear();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71225,"byte_end":71241,"line_start":365,"line_end":365,"column_start":5,"column_end":21}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71246,"byte_end":71274,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/ assert!(map.capacity() > 0);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71279,"byte_end":71311,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71316,"byte_end":71323,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71951,"byte_end":71959,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"capacity","qualname":"<MetadataMap>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of custom metadata entries the map can hold without\n reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of custom metadata entries the map can hold without","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71395,"byte_end":71469,"line_start":373,"line_end":373,"column_start":5,"column_end":79}},{"value":"/ reallocating.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71474,"byte_end":71491,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71496,"byte_end":71499,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This number is an approximation as certain usage patterns could cause","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71504,"byte_end":71577,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ additional allocations before the returned capacity is filled.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71582,"byte_end":71648,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71653,"byte_end":71656,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71661,"byte_end":71675,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71680,"byte_end":71683,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71688,"byte_end":71695,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71700,"byte_end":71729,"line_start":382,"line_end":382,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71734,"byte_end":71771,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71776,"byte_end":71779,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, map.capacity());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71784,"byte_end":71818,"line_start":385,"line_end":385,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71823,"byte_end":71826,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71831,"byte_end":71888,"line_start":387,"line_end":387,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(6, map.capacity());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71893,"byte_end":71927,"line_start":388,"line_end":388,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":71932,"byte_end":71939,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72797,"byte_end":72804,"line_start":415,"line_end":415,"column_start":12,"column_end":19},"name":"reserve","qualname":"<MetadataMap>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more custom metadata to be\n inserted into the `MetadataMap`.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more custom metadata to be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72021,"byte_end":72095,"line_start":394,"line_end":394,"column_start":5,"column_end":79}},{"value":"/ inserted into the `MetadataMap`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72100,"byte_end":72136,"line_start":395,"line_end":395,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72141,"byte_end":72144,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The metadata map may reserve more space to avoid frequent reallocations.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72149,"byte_end":72225,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ Like with `with_capacity`, this will be a \"best effort\" to avoid","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72230,"byte_end":72298,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/ allocations until `additional` more custom metadata is inserted. Certain","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72303,"byte_end":72379,"line_start":399,"line_end":399,"column_start":5,"column_end":81}},{"value":"/ usage patterns could cause additional allocations before the number is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72384,"byte_end":72458,"line_start":400,"line_end":400,"column_start":5,"column_end":79}},{"value":"/ reached.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72463,"byte_end":72475,"line_start":401,"line_end":401,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72480,"byte_end":72483,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72488,"byte_end":72500,"line_start":403,"line_end":403,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72505,"byte_end":72508,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows `usize`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72513,"byte_end":72569,"line_start":405,"line_end":405,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72574,"byte_end":72577,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72582,"byte_end":72596,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72601,"byte_end":72604,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72609,"byte_end":72616,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72621,"byte_end":72650,"line_start":410,"line_end":410,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72655,"byte_end":72692,"line_start":411,"line_end":411,"column_start":5,"column_end":42}},{"value":"/ map.reserve(10);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72697,"byte_end":72717,"line_start":412,"line_end":412,"column_start":5,"column_end":25}},{"value":"/ # map.insert(\"x-host\", \"bar\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72722,"byte_end":72773,"line_start":413,"line_end":413,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72778,"byte_end":72785,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74446,"byte_end":74449,"line_start":454,"line_end":454,"column_start":12,"column_end":15},"name":"get","qualname":"<MetadataMap>::get","value":"pub fn get<K>(&Self, K) -> Option<&MetadataValue<Ascii>> where\nK: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value associated with the key. This method\n is for ascii metadata entries (those whose names don't end with\n \"-bin\"). For binary entries, use get_bin.","sig":null,"attributes":[{"value":"/ Returns a reference to the value associated with the key. This method","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72890,"byte_end":72963,"line_start":419,"line_end":419,"column_start":5,"column_end":78}},{"value":"/ is for ascii metadata entries (those whose names don't end with","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":72968,"byte_end":73035,"line_start":420,"line_end":420,"column_start":5,"column_end":72}},{"value":"/ \"-bin\"). For binary entries, use get_bin.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73040,"byte_end":73085,"line_start":421,"line_end":421,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73090,"byte_end":73093,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ If there are multiple values associated with the key, then the first one","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73098,"byte_end":73174,"line_start":423,"line_end":423,"column_start":5,"column_end":81}},{"value":"/ is returned. Use `get_all` to get all values associated with a given","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73179,"byte_end":73251,"line_start":424,"line_end":424,"column_start":5,"column_end":77}},{"value":"/ key. Returns `None` if there are no values associated with the key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73256,"byte_end":73327,"line_start":425,"line_end":425,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73332,"byte_end":73335,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73340,"byte_end":73354,"line_start":427,"line_end":427,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73359,"byte_end":73362,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73367,"byte_end":73374,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73379,"byte_end":73408,"line_start":430,"line_end":430,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73413,"byte_end":73450,"line_start":431,"line_end":431,"column_start":5,"column_end":42}},{"value":"/ assert!(map.get(\"x-host\").is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73455,"byte_end":73496,"line_start":432,"line_end":432,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73501,"byte_end":73504,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73509,"byte_end":73560,"line_start":434,"line_end":434,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), &\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73565,"byte_end":73618,"line_start":435,"line_end":435,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), &\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73623,"byte_end":73676,"line_start":436,"line_end":436,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73681,"byte_end":73684,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73689,"byte_end":73740,"line_start":438,"line_end":438,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), &\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73745,"byte_end":73798,"line_start":439,"line_end":439,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73803,"byte_end":73806,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73811,"byte_end":73873,"line_start":441,"line_end":441,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73878,"byte_end":73902,"line_start":442,"line_end":442,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73907,"byte_end":73975,"line_start":443,"line_end":443,"column_start":5,"column_end":73}},{"value":"/ assert!(map.get(\"host-bin\").is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":73980,"byte_end":74023,"line_start":444,"line_end":444,"column_start":5,"column_end":48}},{"value":"/ assert!(map.get(\"host-bin\".to_string()).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74028,"byte_end":74083,"line_start":445,"line_end":445,"column_start":5,"column_end":60}},{"value":"/ assert!(map.get(&(\"host-bin\".to_string())).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74088,"byte_end":74146,"line_start":446,"line_end":446,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74151,"byte_end":74154,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74159,"byte_end":74219,"line_start":448,"line_end":448,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74224,"byte_end":74248,"line_start":449,"line_end":449,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get(\"host{}bin\").is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74253,"byte_end":74297,"line_start":450,"line_end":450,"column_start":5,"column_end":49}},{"value":"/ assert!(map.get(\"host{}bin\".to_string()).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74302,"byte_end":74358,"line_start":451,"line_end":451,"column_start":5,"column_end":61}},{"value":"/ assert!(map.get(&(\"host{}bin\".to_string())).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74363,"byte_end":74422,"line_start":452,"line_end":452,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74427,"byte_end":74434,"line_start":453,"line_end":453,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75864,"byte_end":75871,"line_start":490,"line_end":490,"column_start":12,"column_end":19},"name":"get_bin","qualname":"<MetadataMap>::get_bin","value":"pub fn get_bin<K>(&Self, K) -> Option<&MetadataValue<Binary>> where\nK: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like get, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like get, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74583,"byte_end":74649,"line_start":461,"line_end":461,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74654,"byte_end":74657,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74662,"byte_end":74676,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74681,"byte_end":74684,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74689,"byte_end":74696,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74701,"byte_end":74730,"line_start":466,"line_end":466,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74735,"byte_end":74772,"line_start":467,"line_end":467,"column_start":5,"column_end":42}},{"value":"/ assert!(map.get_bin(\"trace-proto-bin\").is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74777,"byte_end":74831,"line_start":468,"line_end":468,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74836,"byte_end":74839,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74844,"byte_end":74919,"line_start":470,"line_end":470,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(map.get_bin(\"trace-proto-bin\").unwrap(), &\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74924,"byte_end":74990,"line_start":471,"line_end":471,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(map.get_bin(\"trace-proto-bin\").unwrap(), &\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":74995,"byte_end":75061,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75066,"byte_end":75069,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ map.append_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75074,"byte_end":75149,"line_start":474,"line_end":474,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(map.get_bin(\"trace-proto-bin\").unwrap(), &\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75154,"byte_end":75220,"line_start":475,"line_end":475,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75225,"byte_end":75228,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75233,"byte_end":75295,"line_start":477,"line_end":477,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75300,"byte_end":75324,"line_start":478,"line_end":478,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75329,"byte_end":75378,"line_start":479,"line_end":479,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_bin(\"host\").is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75383,"byte_end":75426,"line_start":480,"line_end":480,"column_start":5,"column_end":48}},{"value":"/ assert!(map.get_bin(\"host\".to_string()).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75431,"byte_end":75486,"line_start":481,"line_end":481,"column_start":5,"column_end":60}},{"value":"/ assert!(map.get_bin(&(\"host\".to_string())).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75491,"byte_end":75549,"line_start":482,"line_end":482,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75554,"byte_end":75557,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75562,"byte_end":75622,"line_start":484,"line_end":484,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75627,"byte_end":75651,"line_start":485,"line_end":485,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_bin(\"host{}-bin\").is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75656,"byte_end":75705,"line_start":486,"line_end":486,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_bin(\"host{}-bin\".to_string()).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75710,"byte_end":75771,"line_start":487,"line_end":487,"column_start":5,"column_end":66}},{"value":"/ assert!(map.get_bin(&(\"host{}-bin\".to_string())).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75776,"byte_end":75840,"line_start":488,"line_end":488,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":75845,"byte_end":75852,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77428,"byte_end":77435,"line_start":528,"line_end":528,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MetadataMap>::get_mut","value":"pub fn get_mut<K>(&mut Self, K) -> Option<&mut MetadataValue<Ascii>> where\nK: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value associated with the key. This\n method is for ascii metadata entries (those whose names don't end with\n \"-bin\"). For binary entries, use get_mut_bin.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value associated with the key. This","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76007,"byte_end":76081,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ method is for ascii metadata entries (those whose names don't end with","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76086,"byte_end":76160,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ \"-bin\"). For binary entries, use get_mut_bin.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76165,"byte_end":76214,"line_start":499,"line_end":499,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76219,"byte_end":76222,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ If there are multiple values associated with the key, then the first one","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76227,"byte_end":76303,"line_start":501,"line_end":501,"column_start":5,"column_end":81}},{"value":"/ is returned. Use `entry` to get all values associated with a given","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76308,"byte_end":76378,"line_start":502,"line_end":502,"column_start":5,"column_end":75}},{"value":"/ key. Returns `None` if there are no values associated with the key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76383,"byte_end":76454,"line_start":503,"line_end":503,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76459,"byte_end":76462,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76467,"byte_end":76481,"line_start":505,"line_end":505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76486,"byte_end":76489,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76494,"byte_end":76501,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76506,"byte_end":76535,"line_start":508,"line_end":508,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76540,"byte_end":76581,"line_start":509,"line_end":509,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"x-host\", \"hello\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76586,"byte_end":76637,"line_start":510,"line_end":510,"column_start":5,"column_end":56}},{"value":"/ map.get_mut(\"x-host\").unwrap().set_sensitive(true);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76642,"byte_end":76697,"line_start":511,"line_end":511,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76702,"byte_end":76705,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ assert!(map.get(\"x-host\").unwrap().is_sensitive());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76710,"byte_end":76765,"line_start":513,"line_end":513,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76770,"byte_end":76773,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76778,"byte_end":76840,"line_start":515,"line_end":515,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76845,"byte_end":76869,"line_start":516,"line_end":516,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76874,"byte_end":76942,"line_start":517,"line_end":517,"column_start":5,"column_end":73}},{"value":"/ assert!(map.get_mut(\"host-bin\").is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76947,"byte_end":76994,"line_start":518,"line_end":518,"column_start":5,"column_end":52}},{"value":"/ assert!(map.get_mut(\"host-bin\".to_string()).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":76999,"byte_end":77058,"line_start":519,"line_end":519,"column_start":5,"column_end":64}},{"value":"/ assert!(map.get_mut(&(\"host-bin\".to_string())).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77063,"byte_end":77125,"line_start":520,"line_end":520,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77130,"byte_end":77133,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77138,"byte_end":77198,"line_start":522,"line_end":522,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77203,"byte_end":77227,"line_start":523,"line_end":523,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_mut(\"host{}\").is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77232,"byte_end":77277,"line_start":524,"line_end":524,"column_start":5,"column_end":50}},{"value":"/ assert!(map.get_mut(\"host{}\".to_string()).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77282,"byte_end":77339,"line_start":525,"line_end":525,"column_start":5,"column_end":62}},{"value":"/ assert!(map.get_mut(&(\"host{}\".to_string())).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77344,"byte_end":77404,"line_start":526,"line_end":526,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77409,"byte_end":77416,"line_start":527,"line_end":527,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78680,"byte_end":78691,"line_start":560,"line_end":560,"column_start":12,"column_end":23},"name":"get_bin_mut","qualname":"<MetadataMap>::get_bin_mut","value":"pub fn get_bin_mut<K>(&mut Self, K) -> Option<&mut MetadataValue<Binary>>\nwhere K: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like get_mut, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like get_mut, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77581,"byte_end":77651,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77656,"byte_end":77659,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77664,"byte_end":77678,"line_start":537,"line_end":537,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77683,"byte_end":77686,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77691,"byte_end":77698,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77703,"byte_end":77732,"line_start":540,"line_end":540,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77737,"byte_end":77778,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77783,"byte_end":77858,"line_start":542,"line_end":542,"column_start":5,"column_end":80}},{"value":"/ map.get_bin_mut(\"trace-proto-bin\").unwrap().set_sensitive(true);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77863,"byte_end":77931,"line_start":543,"line_end":543,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77936,"byte_end":77939,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(map.get_bin(\"trace-proto-bin\").unwrap().is_sensitive());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":77944,"byte_end":78012,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78017,"byte_end":78020,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78025,"byte_end":78087,"line_start":547,"line_end":547,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78092,"byte_end":78116,"line_start":548,"line_end":548,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78121,"byte_end":78170,"line_start":549,"line_end":549,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_bin_mut(\"host\").is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78175,"byte_end":78222,"line_start":550,"line_end":550,"column_start":5,"column_end":52}},{"value":"/ assert!(map.get_bin_mut(\"host\".to_string()).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78227,"byte_end":78286,"line_start":551,"line_end":551,"column_start":5,"column_end":64}},{"value":"/ assert!(map.get_bin_mut(&(\"host\".to_string())).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78291,"byte_end":78353,"line_start":552,"line_end":552,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78358,"byte_end":78361,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78366,"byte_end":78426,"line_start":554,"line_end":554,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78431,"byte_end":78455,"line_start":555,"line_end":555,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_bin_mut(\"host{}-bin\").is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78460,"byte_end":78513,"line_start":556,"line_end":556,"column_start":5,"column_end":58}},{"value":"/ assert!(map.get_bin_mut(\"host{}-bin\".to_string()).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78518,"byte_end":78583,"line_start":557,"line_end":557,"column_start":5,"column_end":70}},{"value":"/ assert!(map.get_bin_mut(&(\"host{}-bin\".to_string())).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78588,"byte_end":78656,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78661,"byte_end":78668,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80586,"byte_end":80593,"line_start":608,"line_end":608,"column_start":12,"column_end":19},"name":"get_all","qualname":"<MetadataMap>::get_all","value":"pub fn get_all<K>(&Self, K) -> GetAll<, Ascii> where K: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Returns a view of all values associated with a key. This method is for\n ascii metadata entries (those whose names don't end with \"-bin\"). For\n binary entries, use get_all_bin.","sig":null,"attributes":[{"value":"/ Returns a view of all values associated with a key. This method is for","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78839,"byte_end":78913,"line_start":567,"line_end":567,"column_start":5,"column_end":79}},{"value":"/ ascii metadata entries (those whose names don't end with \"-bin\"). For","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78918,"byte_end":78991,"line_start":568,"line_end":568,"column_start":5,"column_end":78}},{"value":"/ binary entries, use get_all_bin.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":78996,"byte_end":79032,"line_start":569,"line_end":569,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79037,"byte_end":79040,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ The returned view does not incur any allocations and allows iterating","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79045,"byte_end":79118,"line_start":571,"line_end":571,"column_start":5,"column_end":78}},{"value":"/ the values associated with the key.  See [`GetAll`] for more details.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79123,"byte_end":79196,"line_start":572,"line_end":572,"column_start":5,"column_end":78}},{"value":"/ Returns `None` if there are no values associated with the key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79201,"byte_end":79267,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79272,"byte_end":79275,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ [`GetAll`]: struct.GetAll.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79280,"byte_end":79314,"line_start":575,"line_end":575,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79319,"byte_end":79322,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79327,"byte_end":79341,"line_start":577,"line_end":577,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79346,"byte_end":79349,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79354,"byte_end":79361,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79366,"byte_end":79395,"line_start":580,"line_end":580,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79400,"byte_end":79437,"line_start":581,"line_end":581,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79442,"byte_end":79445,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79450,"byte_end":79501,"line_start":583,"line_end":583,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-host\", \"goodbye\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79506,"byte_end":79559,"line_start":584,"line_end":584,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79564,"byte_end":79567,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79572,"byte_end":79577,"line_start":586,"line_end":586,"column_start":5,"column_end":10}},{"value":"/     let view = map.get_all(\"x-host\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79582,"byte_end":79623,"line_start":587,"line_end":587,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79628,"byte_end":79631,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     let mut iter = view.iter();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79636,"byte_end":79671,"line_start":589,"line_end":589,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(&\"hello\", iter.next().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79676,"byte_end":79727,"line_start":590,"line_end":590,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(&\"goodbye\", iter.next().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79732,"byte_end":79785,"line_start":591,"line_end":591,"column_start":5,"column_end":58}},{"value":"/     assert!(iter.next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79790,"byte_end":79829,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79834,"byte_end":79839,"line_start":593,"line_end":593,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79844,"byte_end":79847,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79852,"byte_end":79914,"line_start":595,"line_end":595,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79919,"byte_end":79943,"line_start":596,"line_end":596,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":79948,"byte_end":80016,"line_start":597,"line_end":597,"column_start":5,"column_end":73}},{"value":"/ assert!(map.get_all(\"host-bin\").iter().next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80021,"byte_end":80082,"line_start":598,"line_end":598,"column_start":5,"column_end":66}},{"value":"/ assert!(map.get_all(\"host-bin\".to_string()).iter().next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80087,"byte_end":80160,"line_start":599,"line_end":599,"column_start":5,"column_end":78}},{"value":"/ assert!(map.get_all(&(\"host-bin\".to_string())).iter().next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80165,"byte_end":80241,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80246,"byte_end":80249,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80254,"byte_end":80314,"line_start":602,"line_end":602,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80319,"byte_end":80343,"line_start":603,"line_end":603,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_all(\"host{}\").iter().next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80348,"byte_end":80407,"line_start":604,"line_end":604,"column_start":5,"column_end":64}},{"value":"/ assert!(map.get_all(\"host{}\".to_string()).iter().next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80412,"byte_end":80483,"line_start":605,"line_end":605,"column_start":5,"column_end":76}},{"value":"/ assert!(map.get_all(&(\"host{}\".to_string())).iter().next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80488,"byte_end":80562,"line_start":606,"line_end":606,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80567,"byte_end":80574,"line_start":607,"line_end":607,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82200,"byte_end":82211,"line_start":651,"line_end":651,"column_start":12,"column_end":23},"name":"get_all_bin","qualname":"<MetadataMap>::get_all_bin","value":"pub fn get_all_bin<K>(&Self, K) -> GetAll<, Binary> where\nK: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like get_all, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like get_all, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80792,"byte_end":80862,"line_start":618,"line_end":618,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80867,"byte_end":80870,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80875,"byte_end":80889,"line_start":620,"line_end":620,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80894,"byte_end":80897,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80902,"byte_end":80909,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80914,"byte_end":80943,"line_start":623,"line_end":623,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80948,"byte_end":80985,"line_start":624,"line_end":624,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80990,"byte_end":80993,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":80998,"byte_end":81073,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ map.append_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"goodbye\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81078,"byte_end":81155,"line_start":627,"line_end":627,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81160,"byte_end":81163,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81168,"byte_end":81173,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/     let view = map.get_all_bin(\"trace-proto-bin\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81178,"byte_end":81232,"line_start":630,"line_end":630,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81237,"byte_end":81240,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/     let mut iter = view.iter();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81245,"byte_end":81280,"line_start":632,"line_end":632,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(&\"hello\", iter.next().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81285,"byte_end":81336,"line_start":633,"line_end":633,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(&\"goodbye\", iter.next().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81341,"byte_end":81394,"line_start":634,"line_end":634,"column_start":5,"column_end":58}},{"value":"/     assert!(iter.next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81399,"byte_end":81438,"line_start":635,"line_end":635,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81443,"byte_end":81448,"line_start":636,"line_end":636,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81453,"byte_end":81456,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81461,"byte_end":81523,"line_start":638,"line_end":638,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81528,"byte_end":81552,"line_start":639,"line_end":639,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81557,"byte_end":81606,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_all_bin(\"host\").iter().next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81611,"byte_end":81672,"line_start":641,"line_end":641,"column_start":5,"column_end":66}},{"value":"/ assert!(map.get_all_bin(\"host\".to_string()).iter().next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81677,"byte_end":81750,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ assert!(map.get_all_bin(&(\"host\".to_string())).iter().next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81755,"byte_end":81831,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81836,"byte_end":81839,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81844,"byte_end":81904,"line_start":645,"line_end":645,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81909,"byte_end":81933,"line_start":646,"line_end":646,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_all_bin(\"host{}-bin\").iter().next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":81938,"byte_end":82005,"line_start":647,"line_end":647,"column_start":5,"column_end":72}},{"value":"/ assert!(map.get_all_bin(\"host{}-bin\".to_string()).iter().next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82010,"byte_end":82089,"line_start":648,"line_end":648,"column_start":5,"column_end":84}},{"value":"/ assert!(map.get_all_bin(&(\"host{}-bin\".to_string())).iter().next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82094,"byte_end":82176,"line_start":649,"line_end":649,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82181,"byte_end":82188,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83143,"byte_end":83155,"line_start":681,"line_end":681,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<MetadataMap>::contains_key","value":"pub fn contains_key<K>(&Self, K) -> bool where\nK: AsEncodingAgnosticMetadataKey","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key. This\n method works for both ascii and binary entries.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key. This","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82412,"byte_end":82484,"line_start":661,"line_end":661,"column_start":5,"column_end":77}},{"value":"/ method works for both ascii and binary entries.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82489,"byte_end":82540,"line_start":662,"line_end":662,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82545,"byte_end":82548,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82553,"byte_end":82567,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82572,"byte_end":82575,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82580,"byte_end":82587,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82592,"byte_end":82621,"line_start":667,"line_end":667,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82626,"byte_end":82663,"line_start":668,"line_end":668,"column_start":5,"column_end":42}},{"value":"/ assert!(!map.contains_key(\"x-host\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82668,"byte_end":82709,"line_start":669,"line_end":669,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82714,"byte_end":82717,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82722,"byte_end":82790,"line_start":671,"line_end":671,"column_start":5,"column_end":73}},{"value":"/ map.insert(\"x-host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82795,"byte_end":82846,"line_start":672,"line_end":672,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82851,"byte_end":82854,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ // contains_key works for both Binary and Ascii keys:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82859,"byte_end":82916,"line_start":674,"line_end":674,"column_start":5,"column_end":62}},{"value":"/ assert!(map.contains_key(\"x-host\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82921,"byte_end":82961,"line_start":675,"line_end":675,"column_start":5,"column_end":45}},{"value":"/ assert!(map.contains_key(\"host-bin\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":82966,"byte_end":83008,"line_start":676,"line_end":676,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83013,"byte_end":83016,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ // contains_key returns false for invalid keys:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83021,"byte_end":83072,"line_start":678,"line_end":678,"column_start":5,"column_end":56}},{"value":"/ assert!(!map.contains_key(\"x{}host\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83077,"byte_end":83119,"line_start":679,"line_end":679,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83124,"byte_end":83131,"line_start":680,"line_end":680,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84278,"byte_end":84282,"line_start":713,"line_end":713,"column_start":12,"column_end":16},"name":"iter","qualname":"<MetadataMap>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs (both ascii and binary).","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs (both ascii and binary).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83282,"byte_end":83351,"line_start":688,"line_end":688,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83356,"byte_end":83359,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83364,"byte_end":83437,"line_start":690,"line_end":690,"column_start":5,"column_end":78}},{"value":"/ the same crate version. Each key will be yielded once per associated","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83442,"byte_end":83514,"line_start":691,"line_end":691,"column_start":5,"column_end":77}},{"value":"/ value. So, if a key has 3 associated values, it will be yielded 3 times.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83519,"byte_end":83595,"line_start":692,"line_end":692,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83600,"byte_end":83603,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83608,"byte_end":83622,"line_start":694,"line_end":694,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83627,"byte_end":83630,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83635,"byte_end":83642,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83647,"byte_end":83676,"line_start":697,"line_end":697,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83681,"byte_end":83718,"line_start":698,"line_end":698,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83723,"byte_end":83726,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83731,"byte_end":83782,"line_start":700,"line_end":700,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83787,"byte_end":83840,"line_start":701,"line_end":701,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83845,"byte_end":83896,"line_start":702,"line_end":702,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83901,"byte_end":83904,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ for key_and_value in map.iter() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83909,"byte_end":83946,"line_start":704,"line_end":704,"column_start":5,"column_end":42}},{"value":"/     match key_and_value {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83951,"byte_end":83980,"line_start":705,"line_end":705,"column_start":5,"column_end":34}},{"value":"/         KeyAndValueRef::Ascii(ref key, ref value) =>","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":83985,"byte_end":84041,"line_start":706,"line_end":706,"column_start":5,"column_end":61}},{"value":"/             println!(\"Ascii: {:?}: {:?}\", key, value),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84046,"byte_end":84104,"line_start":707,"line_end":707,"column_start":5,"column_end":63}},{"value":"/         KeyAndValueRef::Binary(ref key, ref value) =>","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84109,"byte_end":84166,"line_start":708,"line_end":708,"column_start":5,"column_end":62}},{"value":"/             println!(\"Binary: {:?}: {:?}\", key, value),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84171,"byte_end":84230,"line_start":709,"line_end":709,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84235,"byte_end":84244,"line_start":710,"line_end":710,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84249,"byte_end":84254,"line_start":711,"line_end":711,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84259,"byte_end":84266,"line_start":712,"line_end":712,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85351,"byte_end":85359,"line_start":744,"line_end":744,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<MetadataMap>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs, with mutable value references.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs, with mutable value references.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84380,"byte_end":84456,"line_start":719,"line_end":719,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84461,"byte_end":84464,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ The iterator order is arbitrary, but consistent across platforms for the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84469,"byte_end":84545,"line_start":721,"line_end":721,"column_start":5,"column_end":81}},{"value":"/ same crate version. Each key will be yielded once per associated value,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84550,"byte_end":84625,"line_start":722,"line_end":722,"column_start":5,"column_end":80}},{"value":"/ so if a key has 3 associated values, it will be yielded 3 times.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84630,"byte_end":84698,"line_start":723,"line_end":723,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84703,"byte_end":84706,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84711,"byte_end":84725,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84730,"byte_end":84733,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84738,"byte_end":84745,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84750,"byte_end":84779,"line_start":728,"line_end":728,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84784,"byte_end":84821,"line_start":729,"line_end":729,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84826,"byte_end":84829,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84834,"byte_end":84885,"line_start":731,"line_end":731,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84890,"byte_end":84943,"line_start":732,"line_end":732,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":84948,"byte_end":84999,"line_start":733,"line_end":733,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85004,"byte_end":85007,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ for key_and_value in map.iter_mut() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85012,"byte_end":85053,"line_start":735,"line_end":735,"column_start":5,"column_end":46}},{"value":"/     match key_and_value {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85058,"byte_end":85087,"line_start":736,"line_end":736,"column_start":5,"column_end":34}},{"value":"/         KeyAndMutValueRef::Ascii(key, mut value) =>","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85092,"byte_end":85147,"line_start":737,"line_end":737,"column_start":5,"column_end":60}},{"value":"/             value.set_sensitive(true),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85152,"byte_end":85194,"line_start":738,"line_end":738,"column_start":5,"column_end":47}},{"value":"/         KeyAndMutValueRef::Binary(key, mut value) =>","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85199,"byte_end":85255,"line_start":739,"line_end":739,"column_start":5,"column_end":61}},{"value":"/             value.set_sensitive(false),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85260,"byte_end":85303,"line_start":740,"line_end":740,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85308,"byte_end":85317,"line_start":741,"line_end":741,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85322,"byte_end":85327,"line_start":742,"line_end":742,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85332,"byte_end":85339,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86370,"byte_end":86374,"line_start":776,"line_end":776,"column_start":12,"column_end":16},"name":"keys","qualname":"<MetadataMap>::keys","value":"pub fn keys(&Self) -> Keys","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys.","sig":null,"attributes":[{"value":"/ An iterator visiting all keys.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85471,"byte_end":85505,"line_start":750,"line_end":750,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85510,"byte_end":85513,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85518,"byte_end":85591,"line_start":752,"line_end":752,"column_start":5,"column_end":78}},{"value":"/ the same crate version. Each key will be yielded only once even if it","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85596,"byte_end":85669,"line_start":753,"line_end":753,"column_start":5,"column_end":78}},{"value":"/ has multiple associated values.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85674,"byte_end":85709,"line_start":754,"line_end":754,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85714,"byte_end":85717,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85722,"byte_end":85736,"line_start":756,"line_end":756,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85741,"byte_end":85744,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85749,"byte_end":85756,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85761,"byte_end":85790,"line_start":759,"line_end":759,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85795,"byte_end":85832,"line_start":760,"line_end":760,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85837,"byte_end":85840,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85845,"byte_end":85896,"line_start":762,"line_end":762,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85901,"byte_end":85954,"line_start":763,"line_end":763,"column_start":5,"column_end":58}},{"value":"/ map.insert_bin(\"x-number-bin\", MetadataValue::from_bytes(b\"123\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":85959,"byte_end":86029,"line_start":764,"line_end":764,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86034,"byte_end":86037,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86042,"byte_end":86069,"line_start":766,"line_end":766,"column_start":5,"column_end":32}},{"value":"/     match key {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86074,"byte_end":86093,"line_start":767,"line_end":767,"column_start":5,"column_end":24}},{"value":"/         KeyRef::Ascii(ref key) =>","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86098,"byte_end":86135,"line_start":768,"line_end":768,"column_start":5,"column_end":42}},{"value":"/             println!(\"Ascii key: {:?}\", key),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86140,"byte_end":86189,"line_start":769,"line_end":769,"column_start":5,"column_end":54}},{"value":"/         KeyRef::Binary(ref key) =>","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86194,"byte_end":86232,"line_start":770,"line_end":770,"column_start":5,"column_end":43}},{"value":"/             println!(\"Binary key: {:?}\", key),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86237,"byte_end":86287,"line_start":771,"line_end":771,"column_start":5,"column_end":55}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86292,"byte_end":86301,"line_start":772,"line_end":772,"column_start":5,"column_end":14}},{"value":"/     println!(\"{:?}\", key);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86306,"byte_end":86336,"line_start":773,"line_end":773,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86341,"byte_end":86346,"line_start":774,"line_end":774,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86351,"byte_end":86358,"line_start":775,"line_end":775,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87335,"byte_end":87341,"line_start":807,"line_end":807,"column_start":12,"column_end":18},"name":"values","qualname":"<MetadataMap>::values","value":"pub fn values(&Self) -> Values","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values (both ascii and binary).","sig":null,"attributes":[{"value":"/ An iterator visiting all values (both ascii and binary).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86472,"byte_end":86532,"line_start":782,"line_end":782,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86537,"byte_end":86540,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86545,"byte_end":86618,"line_start":784,"line_end":784,"column_start":5,"column_end":78}},{"value":"/ the same crate version.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86623,"byte_end":86650,"line_start":785,"line_end":785,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86655,"byte_end":86658,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86663,"byte_end":86677,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86682,"byte_end":86685,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86690,"byte_end":86697,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86702,"byte_end":86731,"line_start":790,"line_end":790,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86736,"byte_end":86773,"line_start":791,"line_end":791,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86778,"byte_end":86781,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86786,"byte_end":86837,"line_start":793,"line_end":793,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86842,"byte_end":86895,"line_start":794,"line_end":794,"column_start":5,"column_end":58}},{"value":"/ map.insert_bin(\"x-number-bin\", MetadataValue::from_bytes(b\"123\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86900,"byte_end":86970,"line_start":795,"line_end":795,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86975,"byte_end":86978,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ for value in map.values() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":86983,"byte_end":87014,"line_start":797,"line_end":797,"column_start":5,"column_end":36}},{"value":"/     match value {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87019,"byte_end":87040,"line_start":798,"line_end":798,"column_start":5,"column_end":26}},{"value":"/         ValueRef::Ascii(ref value) =>","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87045,"byte_end":87086,"line_start":799,"line_end":799,"column_start":5,"column_end":46}},{"value":"/             println!(\"Ascii value: {:?}\", value),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87091,"byte_end":87144,"line_start":800,"line_end":800,"column_start":5,"column_end":58}},{"value":"/         ValueRef::Binary(ref value) =>","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87149,"byte_end":87191,"line_start":801,"line_end":801,"column_start":5,"column_end":47}},{"value":"/             println!(\"Binary value: {:?}\", value),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87196,"byte_end":87250,"line_start":802,"line_end":802,"column_start":5,"column_end":59}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87255,"byte_end":87264,"line_start":803,"line_end":803,"column_start":5,"column_end":14}},{"value":"/     println!(\"{:?}\", value);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87269,"byte_end":87301,"line_start":804,"line_end":804,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87306,"byte_end":87311,"line_start":805,"line_end":805,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87316,"byte_end":87323,"line_start":806,"line_end":806,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88226,"byte_end":88236,"line_start":837,"line_end":837,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<MetadataMap>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87443,"byte_end":87487,"line_start":813,"line_end":813,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87492,"byte_end":87495,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87500,"byte_end":87573,"line_start":815,"line_end":815,"column_start":5,"column_end":78}},{"value":"/ the same crate version.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87578,"byte_end":87605,"line_start":816,"line_end":816,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87610,"byte_end":87613,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87618,"byte_end":87632,"line_start":818,"line_end":818,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87637,"byte_end":87640,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87645,"byte_end":87652,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87657,"byte_end":87686,"line_start":821,"line_end":821,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87691,"byte_end":87732,"line_start":822,"line_end":822,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87737,"byte_end":87740,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87745,"byte_end":87796,"line_start":824,"line_end":824,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87801,"byte_end":87854,"line_start":825,"line_end":825,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87859,"byte_end":87910,"line_start":826,"line_end":826,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87915,"byte_end":87918,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ for value in map.values_mut() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87923,"byte_end":87958,"line_start":828,"line_end":828,"column_start":5,"column_end":40}},{"value":"/     match value {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87963,"byte_end":87984,"line_start":829,"line_end":829,"column_start":5,"column_end":26}},{"value":"/         ValueRefMut::Ascii(mut value) =>","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":87989,"byte_end":88033,"line_start":830,"line_end":830,"column_start":5,"column_end":49}},{"value":"/             value.set_sensitive(true),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88038,"byte_end":88080,"line_start":831,"line_end":831,"column_start":5,"column_end":47}},{"value":"/         ValueRefMut::Binary(mut value) =>","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88085,"byte_end":88130,"line_start":832,"line_end":832,"column_start":5,"column_end":50}},{"value":"/             value.set_sensitive(false),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88135,"byte_end":88178,"line_start":833,"line_end":833,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88183,"byte_end":88192,"line_start":834,"line_end":834,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88197,"byte_end":88202,"line_start":835,"line_end":835,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88207,"byte_end":88214,"line_start":836,"line_end":836,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89864,"byte_end":89869,"line_start":883,"line_end":883,"column_start":12,"column_end":17},"name":"entry","qualname":"<MetadataMap>::entry","value":"pub fn entry<K>(&mut Self, K) -> Result<Entry<, Ascii>, InvalidMetadataKey>\nwhere K: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given ascii key's corresponding entry in the map for in-place\n manipulation. For binary keys, use `entry_bin`.","sig":null,"attributes":[{"value":"/ Gets the given ascii key's corresponding entry in the map for in-place","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88352,"byte_end":88426,"line_start":843,"line_end":843,"column_start":5,"column_end":79}},{"value":"/ manipulation. For binary keys, use `entry_bin`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88431,"byte_end":88482,"line_start":844,"line_end":844,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88487,"byte_end":88490,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88495,"byte_end":88509,"line_start":846,"line_end":846,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88514,"byte_end":88517,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88522,"byte_end":88529,"line_start":848,"line_end":848,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88534,"byte_end":88563,"line_start":849,"line_end":849,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88568,"byte_end":88609,"line_start":850,"line_end":850,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88614,"byte_end":88617,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ let headers = &[","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88622,"byte_end":88642,"line_start":852,"line_end":852,"column_start":5,"column_end":25}},{"value":"/     \"content-length\",","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88647,"byte_end":88672,"line_start":853,"line_end":853,"column_start":5,"column_end":30}},{"value":"/     \"x-hello\",","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88677,"byte_end":88695,"line_start":854,"line_end":854,"column_start":5,"column_end":23}},{"value":"/     \"Content-Length\",","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88700,"byte_end":88725,"line_start":855,"line_end":855,"column_start":5,"column_end":30}},{"value":"/     \"x-world\",","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88730,"byte_end":88748,"line_start":856,"line_end":856,"column_start":5,"column_end":23}},{"value":"/ ];","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88753,"byte_end":88759,"line_start":857,"line_end":857,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88764,"byte_end":88767,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ for &header in headers {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88772,"byte_end":88800,"line_start":859,"line_end":859,"column_start":5,"column_end":33}},{"value":"/     let counter = map.entry(header).unwrap().or_insert(\"\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88805,"byte_end":88885,"line_start":860,"line_end":860,"column_start":5,"column_end":85}},{"value":"/     *counter = format!(\"{}{}\", counter.to_str().unwrap(), \"1\").parse().unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88890,"byte_end":88974,"line_start":861,"line_end":861,"column_start":5,"column_end":89}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88979,"byte_end":88984,"line_start":862,"line_end":862,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88989,"byte_end":88992,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"content-length\").unwrap(), \"11\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":88997,"byte_end":89054,"line_start":864,"line_end":864,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"1\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89059,"byte_end":89108,"line_start":865,"line_end":865,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89113,"byte_end":89116,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ // Gracefully handles parting invalid key strings","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89121,"byte_end":89174,"line_start":867,"line_end":867,"column_start":5,"column_end":58}},{"value":"/ assert!(!map.entry(\"a{}b\").is_ok());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89179,"byte_end":89219,"line_start":868,"line_end":868,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89224,"byte_end":89227,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89232,"byte_end":89294,"line_start":870,"line_end":870,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89299,"byte_end":89323,"line_start":871,"line_end":871,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89328,"byte_end":89396,"line_start":872,"line_end":872,"column_start":5,"column_end":73}},{"value":"/ assert!(!map.entry(\"host-bin\").is_ok());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89401,"byte_end":89445,"line_start":873,"line_end":873,"column_start":5,"column_end":49}},{"value":"/ assert!(!map.entry(\"host-bin\".to_string()).is_ok());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89450,"byte_end":89506,"line_start":874,"line_end":874,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.entry(&(\"host-bin\".to_string())).is_ok());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89511,"byte_end":89570,"line_start":875,"line_end":875,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89575,"byte_end":89578,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89583,"byte_end":89643,"line_start":877,"line_end":877,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89648,"byte_end":89672,"line_start":878,"line_end":878,"column_start":5,"column_end":29}},{"value":"/ assert!(!map.entry(\"host{}\").is_ok());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89677,"byte_end":89719,"line_start":879,"line_end":879,"column_start":5,"column_end":47}},{"value":"/ assert!(!map.entry(\"host{}\".to_string()).is_ok());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89724,"byte_end":89778,"line_start":880,"line_end":880,"column_start":5,"column_end":59}},{"value":"/ assert!(!map.entry(&(\"host{}\".to_string())).is_ok());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89783,"byte_end":89840,"line_start":881,"line_end":881,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":89845,"byte_end":89852,"line_start":882,"line_end":882,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":91545,"byte_end":91554,"line_start":928,"line_end":928,"column_start":12,"column_end":21},"name":"entry_bin","qualname":"<MetadataMap>::entry_bin","value":"pub fn entry_bin<K>(&mut Self, K)\n-> Result<Entry<, Binary>, InvalidMetadataKey> where K: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given Binary key's corresponding entry in the map for in-place\n manipulation.","sig":null,"attributes":[{"value":"/ Gets the given Binary key's corresponding entry in the map for in-place","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90044,"byte_end":90119,"line_start":890,"line_end":890,"column_start":5,"column_end":80}},{"value":"/ manipulation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90124,"byte_end":90141,"line_start":891,"line_end":891,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90146,"byte_end":90149,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90154,"byte_end":90168,"line_start":893,"line_end":893,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90173,"byte_end":90176,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90181,"byte_end":90188,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90193,"byte_end":90222,"line_start":896,"line_end":896,"column_start":5,"column_end":34}},{"value":"/ # use std::str;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90227,"byte_end":90246,"line_start":897,"line_end":897,"column_start":5,"column_end":24}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90251,"byte_end":90292,"line_start":898,"line_end":898,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90297,"byte_end":90300,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ let headers = &[","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90305,"byte_end":90325,"line_start":900,"line_end":900,"column_start":5,"column_end":25}},{"value":"/     \"content-length-bin\",","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90330,"byte_end":90359,"line_start":901,"line_end":901,"column_start":5,"column_end":34}},{"value":"/     \"x-hello-bin\",","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90364,"byte_end":90386,"line_start":902,"line_end":902,"column_start":5,"column_end":27}},{"value":"/     \"Content-Length-bin\",","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90391,"byte_end":90420,"line_start":903,"line_end":903,"column_start":5,"column_end":34}},{"value":"/     \"x-world-bin\",","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90425,"byte_end":90447,"line_start":904,"line_end":904,"column_start":5,"column_end":27}},{"value":"/ ];","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90452,"byte_end":90458,"line_start":905,"line_end":905,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90463,"byte_end":90466,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ for &header in headers {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90471,"byte_end":90499,"line_start":907,"line_end":907,"column_start":5,"column_end":33}},{"value":"/     let counter = map.entry_bin(header).unwrap().or_insert(MetadataValue::from_bytes(b\"\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90504,"byte_end":90599,"line_start":908,"line_end":908,"column_start":5,"column_end":100}},{"value":"/     *counter = MetadataValue::from_bytes(format!(\"{}{}\", str::from_utf8(counter.to_bytes().unwrap().as_ref()).unwrap(), \"1\").as_bytes());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90604,"byte_end":90745,"line_start":909,"line_end":909,"column_start":5,"column_end":146}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90750,"byte_end":90755,"line_start":910,"line_end":910,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90760,"byte_end":90763,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get_bin(\"content-length-bin\").unwrap(), \"11\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90768,"byte_end":90833,"line_start":912,"line_end":912,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(map.get_bin(\"x-hello-bin\").unwrap(), \"1\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90838,"byte_end":90895,"line_start":913,"line_end":913,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90900,"byte_end":90903,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90908,"byte_end":90970,"line_start":915,"line_end":915,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":90975,"byte_end":90999,"line_start":916,"line_end":916,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":91004,"byte_end":91053,"line_start":917,"line_end":917,"column_start":5,"column_end":54}},{"value":"/ assert!(!map.entry_bin(\"host\").is_ok());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":91058,"byte_end":91102,"line_start":918,"line_end":918,"column_start":5,"column_end":49}},{"value":"/ assert!(!map.entry_bin(\"host\".to_string()).is_ok());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":91107,"byte_end":91163,"line_start":919,"line_end":919,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.entry_bin(&(\"host\".to_string())).is_ok());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":91168,"byte_end":91227,"line_start":920,"line_end":920,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":91232,"byte_end":91235,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":91240,"byte_end":91300,"line_start":922,"line_end":922,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":91305,"byte_end":91329,"line_start":923,"line_end":923,"column_start":5,"column_end":29}},{"value":"/ assert!(!map.entry_bin(\"host{}-bin\").is_ok());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":91334,"byte_end":91384,"line_start":924,"line_end":924,"column_start":5,"column_end":55}},{"value":"/ assert!(!map.entry_bin(\"host{}-bin\".to_string()).is_ok());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":91389,"byte_end":91451,"line_start":925,"line_end":925,"column_start":5,"column_end":67}},{"value":"/ assert!(!map.entry_bin(&(\"host{}-bin\".to_string())).is_ok());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":91456,"byte_end":91521,"line_start":926,"line_end":926,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":91526,"byte_end":91533,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94140,"byte_end":94146,"line_start":1001,"line_end":1001,"column_start":12,"column_end":18},"name":"insert","qualname":"<MetadataMap>::insert","value":"pub fn insert<K>(&mut Self, K, MetadataValue<Ascii>)\n-> Option<MetadataValue<Ascii>> where K: IntoMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an ascii key-value pair into the map. To insert a binary entry,\n use `insert_bin`.","sig":null,"attributes":[{"value":"/ Inserts an ascii key-value pair into the map. To insert a binary entry,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":92395,"byte_end":92470,"line_start":957,"line_end":957,"column_start":5,"column_end":80}},{"value":"/ use `insert_bin`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":92475,"byte_end":92496,"line_start":958,"line_end":958,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":92501,"byte_end":92504,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":92509,"byte_end":92579,"line_start":960,"line_end":960,"column_start":5,"column_end":75}},{"value":"/ converted to a MetadataKey<Ascii>.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":92584,"byte_end":92622,"line_start":961,"line_end":961,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":92627,"byte_end":92630,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ If the map did not previously have this key present, then `None` is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":92635,"byte_end":92706,"line_start":963,"line_end":963,"column_start":5,"column_end":76}},{"value":"/ returned.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":92711,"byte_end":92724,"line_start":964,"line_end":964,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":92729,"byte_end":92732,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new value is associated with","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":92737,"byte_end":92811,"line_start":966,"line_end":966,"column_start":5,"column_end":79}},{"value":"/ the key and all previous values are removed. **Note** that only a single","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":92816,"byte_end":92892,"line_start":967,"line_end":967,"column_start":5,"column_end":81}},{"value":"/ one of the previous values is returned. If there are multiple values","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":92897,"byte_end":92969,"line_start":968,"line_end":968,"column_start":5,"column_end":77}},{"value":"/ that have been previously associated with the key, then the first one is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":92974,"byte_end":93050,"line_start":969,"line_end":969,"column_start":5,"column_end":81}},{"value":"/ returned. See `insert_mult` on `OccupiedEntry` for an API that returns","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93055,"byte_end":93129,"line_start":970,"line_end":970,"column_start":5,"column_end":79}},{"value":"/ all values.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93134,"byte_end":93149,"line_start":971,"line_end":971,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93154,"byte_end":93157,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ The key is not updated, though; this matters for types that can be `==`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93162,"byte_end":93237,"line_start":973,"line_end":973,"column_start":5,"column_end":80}},{"value":"/ without being identical.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93242,"byte_end":93270,"line_start":974,"line_end":974,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93275,"byte_end":93278,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93283,"byte_end":93297,"line_start":976,"line_end":976,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93302,"byte_end":93305,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93310,"byte_end":93317,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93322,"byte_end":93351,"line_start":979,"line_end":979,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93356,"byte_end":93393,"line_start":980,"line_end":980,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert(\"x-host\", \"world\".parse().unwrap()).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93398,"byte_end":93468,"line_start":981,"line_end":981,"column_start":5,"column_end":75}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93473,"byte_end":93502,"line_start":982,"line_end":982,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93507,"byte_end":93510,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ let mut prev = map.insert(\"x-host\", \"earth\".parse().unwrap()).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93515,"byte_end":93590,"line_start":984,"line_end":984,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(\"world\", prev);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93595,"byte_end":93625,"line_start":985,"line_end":985,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93630,"byte_end":93637,"line_start":986,"line_end":986,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93642,"byte_end":93645,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93650,"byte_end":93669,"line_start":988,"line_end":988,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93674,"byte_end":93703,"line_start":989,"line_end":989,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93708,"byte_end":93745,"line_start":990,"line_end":990,"column_start":5,"column_end":42}},{"value":"/ // Trying to insert a key that is not valid panics.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93750,"byte_end":93805,"line_start":991,"line_end":991,"column_start":5,"column_end":60}},{"value":"/ map.insert(\"x{}host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93810,"byte_end":93862,"line_start":992,"line_end":992,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93867,"byte_end":93874,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93879,"byte_end":93882,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93887,"byte_end":93906,"line_start":995,"line_end":995,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93911,"byte_end":93940,"line_start":996,"line_end":996,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93945,"byte_end":93982,"line_start":997,"line_end":997,"column_start":5,"column_end":42}},{"value":"/ // Trying to insert a key that is binary panics (use insert_bin).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":93987,"byte_end":94056,"line_start":998,"line_end":998,"column_start":5,"column_end":74}},{"value":"/ map.insert(\"x-host-bin\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94061,"byte_end":94116,"line_start":999,"line_end":999,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94121,"byte_end":94128,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95515,"byte_end":95525,"line_start":1038,"line_end":1038,"column_start":12,"column_end":22},"name":"insert_bin","qualname":"<MetadataMap>::insert_bin","value":"pub fn insert_bin<K>(&mut Self, K, MetadataValue<Binary>)\n-> Option<MetadataValue<Binary>> where K: IntoMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like insert, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like insert, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94320,"byte_end":94389,"line_start":1008,"line_end":1008,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94394,"byte_end":94397,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94402,"byte_end":94472,"line_start":1010,"line_end":1010,"column_start":5,"column_end":75}},{"value":"/ converted to a MetadataKey<Binary>.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94477,"byte_end":94516,"line_start":1011,"line_end":1011,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94521,"byte_end":94524,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94529,"byte_end":94543,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94548,"byte_end":94551,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94556,"byte_end":94563,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94568,"byte_end":94597,"line_start":1016,"line_end":1016,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94602,"byte_end":94639,"line_start":1017,"line_end":1017,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"world\")).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94644,"byte_end":94738,"line_start":1018,"line_end":1018,"column_start":5,"column_end":99}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94743,"byte_end":94772,"line_start":1019,"line_end":1019,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94777,"byte_end":94780,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ let mut prev = map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"earth\")).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94785,"byte_end":94884,"line_start":1021,"line_end":1021,"column_start":5,"column_end":104}},{"value":"/ assert_eq!(\"world\", prev);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94889,"byte_end":94919,"line_start":1022,"line_end":1022,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94924,"byte_end":94931,"line_start":1023,"line_end":1023,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94936,"byte_end":94939,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94944,"byte_end":94963,"line_start":1025,"line_end":1025,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":94968,"byte_end":94997,"line_start":1026,"line_end":1026,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95002,"byte_end":95043,"line_start":1027,"line_end":1027,"column_start":5,"column_end":46}},{"value":"/ // Attempting to add a binary metadata entry with an invalid name","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95048,"byte_end":95117,"line_start":1028,"line_end":1028,"column_start":5,"column_end":74}},{"value":"/ map.insert_bin(\"trace-proto\", MetadataValue::from_bytes(b\"hello\")); // This line panics!","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95122,"byte_end":95214,"line_start":1029,"line_end":1029,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95219,"byte_end":95226,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95231,"byte_end":95234,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95239,"byte_end":95258,"line_start":1032,"line_end":1032,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95263,"byte_end":95292,"line_start":1033,"line_end":1033,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95297,"byte_end":95334,"line_start":1034,"line_end":1034,"column_start":5,"column_end":42}},{"value":"/ // Trying to insert a key that is not valid panics.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95339,"byte_end":95394,"line_start":1035,"line_end":1035,"column_start":5,"column_end":60}},{"value":"/ map.insert_bin(\"x{}host-bin\", MetadataValue::from_bytes(b\"world\")); // This line panics!","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95399,"byte_end":95491,"line_start":1036,"line_end":1036,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95496,"byte_end":95503,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97368,"byte_end":97374,"line_start":1092,"line_end":1092,"column_start":12,"column_end":18},"name":"append","qualname":"<MetadataMap>::append","value":"pub fn append<K>(&mut Self, K, MetadataValue<Ascii>) -> bool where\nK: IntoMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an ascii key-value pair into the map. To insert a binary entry,\n use `append_bin`.","sig":null,"attributes":[{"value":"/ Inserts an ascii key-value pair into the map. To insert a binary entry,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95733,"byte_end":95808,"line_start":1049,"line_end":1049,"column_start":5,"column_end":80}},{"value":"/ use `append_bin`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95813,"byte_end":95834,"line_start":1050,"line_end":1050,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95839,"byte_end":95842,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95847,"byte_end":95917,"line_start":1052,"line_end":1052,"column_start":5,"column_end":75}},{"value":"/ converted to a MetadataKey<Ascii>.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95922,"byte_end":95960,"line_start":1053,"line_end":1053,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95965,"byte_end":95968,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ If the map did not previously have this key present, then `false` is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":95973,"byte_end":96045,"line_start":1055,"line_end":1055,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96050,"byte_end":96063,"line_start":1056,"line_end":1056,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96068,"byte_end":96071,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new value is pushed to the end","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96076,"byte_end":96152,"line_start":1058,"line_end":1058,"column_start":5,"column_end":81}},{"value":"/ of the list of values currently associated with the key. The key is not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96157,"byte_end":96232,"line_start":1059,"line_end":1059,"column_start":5,"column_end":80}},{"value":"/ updated, though; this matters for types that can be `==` without being","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96237,"byte_end":96311,"line_start":1060,"line_end":1060,"column_start":5,"column_end":79}},{"value":"/ identical.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96316,"byte_end":96330,"line_start":1061,"line_end":1061,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96335,"byte_end":96338,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96343,"byte_end":96357,"line_start":1063,"line_end":1063,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96362,"byte_end":96365,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96370,"byte_end":96377,"line_start":1065,"line_end":1065,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96382,"byte_end":96411,"line_start":1066,"line_end":1066,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96416,"byte_end":96453,"line_start":1067,"line_end":1067,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert(\"x-host\", \"world\".parse().unwrap()).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96458,"byte_end":96528,"line_start":1068,"line_end":1068,"column_start":5,"column_end":75}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96533,"byte_end":96562,"line_start":1069,"line_end":1069,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96567,"byte_end":96570,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host\", \"earth\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96575,"byte_end":96626,"line_start":1071,"line_end":1071,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96631,"byte_end":96634,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all(\"x-host\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96639,"byte_end":96678,"line_start":1073,"line_end":1073,"column_start":5,"column_end":44}},{"value":"/ let mut i = values.iter();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96683,"byte_end":96713,"line_start":1074,"line_end":1074,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"world\", *i.next().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96718,"byte_end":96762,"line_start":1075,"line_end":1075,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(\"earth\", *i.next().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96767,"byte_end":96811,"line_start":1076,"line_end":1076,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96816,"byte_end":96823,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96828,"byte_end":96831,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96836,"byte_end":96855,"line_start":1079,"line_end":1079,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96860,"byte_end":96889,"line_start":1080,"line_end":1080,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96894,"byte_end":96931,"line_start":1081,"line_end":1081,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is not valid panics.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96936,"byte_end":96991,"line_start":1082,"line_end":1082,"column_start":5,"column_end":60}},{"value":"/ map.append(\"x{}host\", \"world\".parse().unwrap()); // This line panics!","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":96996,"byte_end":97069,"line_start":1083,"line_end":1083,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97074,"byte_end":97081,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97086,"byte_end":97089,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97094,"byte_end":97113,"line_start":1086,"line_end":1086,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97118,"byte_end":97147,"line_start":1087,"line_end":1087,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97152,"byte_end":97189,"line_start":1088,"line_end":1088,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is binary panics (use append_bin).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97194,"byte_end":97263,"line_start":1089,"line_end":1089,"column_start":5,"column_end":74}},{"value":"/ map.append(\"x-host-bin\", \"world\".parse().unwrap()); // This line panics!","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97268,"byte_end":97344,"line_start":1090,"line_end":1090,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97349,"byte_end":97356,"line_start":1091,"line_end":1091,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98848,"byte_end":98858,"line_start":1133,"line_end":1133,"column_start":12,"column_end":22},"name":"append_bin","qualname":"<MetadataMap>::append_bin","value":"pub fn append_bin<K>(&mut Self, K, MetadataValue<Binary>) -> bool where\nK: IntoMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like append, but for binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like append, but for binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97528,"byte_end":97597,"line_start":1099,"line_end":1099,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97602,"byte_end":97605,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97610,"byte_end":97680,"line_start":1101,"line_end":1101,"column_start":5,"column_end":75}},{"value":"/ converted to a MetadataKey<Binary>.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97685,"byte_end":97724,"line_start":1102,"line_end":1102,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97729,"byte_end":97732,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97737,"byte_end":97751,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97756,"byte_end":97759,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97764,"byte_end":97771,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97776,"byte_end":97805,"line_start":1107,"line_end":1107,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97810,"byte_end":97847,"line_start":1108,"line_end":1108,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"world\")).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97852,"byte_end":97946,"line_start":1109,"line_end":1109,"column_start":5,"column_end":99}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97951,"byte_end":97980,"line_start":1110,"line_end":1110,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97985,"byte_end":97988,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ map.append_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"earth\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":97993,"byte_end":98068,"line_start":1112,"line_end":1112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98073,"byte_end":98076,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all_bin(\"trace-proto-bin\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98081,"byte_end":98133,"line_start":1114,"line_end":1114,"column_start":5,"column_end":57}},{"value":"/ let mut i = values.iter();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98138,"byte_end":98168,"line_start":1115,"line_end":1115,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"world\", *i.next().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98173,"byte_end":98217,"line_start":1116,"line_end":1116,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(\"earth\", *i.next().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98222,"byte_end":98266,"line_start":1117,"line_end":1117,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98271,"byte_end":98278,"line_start":1118,"line_end":1118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98283,"byte_end":98286,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98291,"byte_end":98310,"line_start":1120,"line_end":1120,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98315,"byte_end":98344,"line_start":1121,"line_end":1121,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98349,"byte_end":98386,"line_start":1122,"line_end":1122,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is not valid panics.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98391,"byte_end":98446,"line_start":1123,"line_end":1123,"column_start":5,"column_end":60}},{"value":"/ map.append_bin(\"x{}host-bin\", MetadataValue::from_bytes(b\"world\")); // This line panics!","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98451,"byte_end":98543,"line_start":1124,"line_end":1124,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98548,"byte_end":98555,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98560,"byte_end":98563,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98568,"byte_end":98587,"line_start":1127,"line_end":1127,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98592,"byte_end":98621,"line_start":1128,"line_end":1128,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98626,"byte_end":98663,"line_start":1129,"line_end":1129,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is ascii panics (use append).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98668,"byte_end":98732,"line_start":1130,"line_end":1130,"column_start":5,"column_end":69}},{"value":"/ map.append_bin(\"x-host\", MetadataValue::from_bytes(b\"world\")); // This line panics!","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98737,"byte_end":98824,"line_start":1131,"line_end":1131,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":98829,"byte_end":98836,"line_start":1132,"line_end":1132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100405,"byte_end":100411,"line_start":1173,"line_end":1173,"column_start":12,"column_end":18},"name":"remove","qualname":"<MetadataMap>::remove","value":"pub fn remove<K>(&mut Self, K) -> Option<MetadataValue<Ascii>> where\nK: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Removes an ascii key from the map, returning the value associated with\n the key. To remove a binary key, use `remove_bin`.","sig":null,"attributes":[{"value":"/ Removes an ascii key from the map, returning the value associated with","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99014,"byte_end":99088,"line_start":1140,"line_end":1140,"column_start":5,"column_end":79}},{"value":"/ the key. To remove a binary key, use `remove_bin`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99093,"byte_end":99147,"line_start":1141,"line_end":1141,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99152,"byte_end":99155,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the map does not contain the key. If there are","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99160,"byte_end":99228,"line_start":1143,"line_end":1143,"column_start":5,"column_end":73}},{"value":"/ multiple values associated with the key, then the first one is returned.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99233,"byte_end":99309,"line_start":1144,"line_end":1144,"column_start":5,"column_end":81}},{"value":"/ See `remove_entry_mult` on `OccupiedEntry` for an API that yields all","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99314,"byte_end":99387,"line_start":1145,"line_end":1145,"column_start":5,"column_end":78}},{"value":"/ values.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99392,"byte_end":99403,"line_start":1146,"line_end":1146,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99408,"byte_end":99411,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99416,"byte_end":99430,"line_start":1148,"line_end":1148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99435,"byte_end":99438,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99443,"byte_end":99450,"line_start":1150,"line_end":1150,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99455,"byte_end":99484,"line_start":1151,"line_end":1151,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99489,"byte_end":99526,"line_start":1152,"line_end":1152,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99531,"byte_end":99588,"line_start":1153,"line_end":1153,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99593,"byte_end":99596,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ let prev = map.remove(\"x-host\").unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99601,"byte_end":99646,"line_start":1155,"line_end":1155,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(\"hello.world\", prev);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99651,"byte_end":99687,"line_start":1156,"line_end":1156,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99692,"byte_end":99695,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ assert!(map.remove(\"x-host\").is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99700,"byte_end":99744,"line_start":1158,"line_end":1158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99749,"byte_end":99752,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove a key of the wrong type fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99757,"byte_end":99821,"line_start":1160,"line_end":1160,"column_start":5,"column_end":69}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99826,"byte_end":99850,"line_start":1161,"line_end":1161,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99855,"byte_end":99923,"line_start":1162,"line_end":1162,"column_start":5,"column_end":73}},{"value":"/ assert!(map.remove(\"host-bin\").is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99928,"byte_end":99974,"line_start":1163,"line_end":1163,"column_start":5,"column_end":51}},{"value":"/ assert!(map.remove(\"host-bin\".to_string()).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":99979,"byte_end":100037,"line_start":1164,"line_end":1164,"column_start":5,"column_end":63}},{"value":"/ assert!(map.remove(&(\"host-bin\".to_string())).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100042,"byte_end":100103,"line_start":1165,"line_end":1165,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100108,"byte_end":100111,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove an invalid key string fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100116,"byte_end":100178,"line_start":1167,"line_end":1167,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100183,"byte_end":100207,"line_start":1168,"line_end":1168,"column_start":5,"column_end":29}},{"value":"/ assert!(map.remove(\"host{}\").is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100212,"byte_end":100256,"line_start":1169,"line_end":1169,"column_start":5,"column_end":49}},{"value":"/ assert!(map.remove(\"host{}\".to_string()).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100261,"byte_end":100317,"line_start":1170,"line_end":1170,"column_start":5,"column_end":61}},{"value":"/ assert!(map.remove(&(\"host{}\".to_string())).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100322,"byte_end":100381,"line_start":1171,"line_end":1171,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100386,"byte_end":100393,"line_start":1172,"line_end":1172,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101677,"byte_end":101687,"line_start":1207,"line_end":1207,"column_start":12,"column_end":22},"name":"remove_bin","qualname":"<MetadataMap>::remove_bin","value":"pub fn remove_bin<K>(&mut Self, K) -> Option<MetadataValue<Binary>> where\nK: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like remove, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like remove, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100551,"byte_end":100620,"line_start":1180,"line_end":1180,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100625,"byte_end":100628,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100633,"byte_end":100647,"line_start":1182,"line_end":1182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100652,"byte_end":100655,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100660,"byte_end":100667,"line_start":1184,"line_end":1184,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100672,"byte_end":100701,"line_start":1185,"line_end":1185,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100706,"byte_end":100743,"line_start":1186,"line_end":1186,"column_start":5,"column_end":42}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello.world\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100748,"byte_end":100829,"line_start":1187,"line_end":1187,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100834,"byte_end":100837,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ let prev = map.remove_bin(\"trace-proto-bin\").unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100842,"byte_end":100900,"line_start":1189,"line_end":1189,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(\"hello.world\", prev);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100905,"byte_end":100941,"line_start":1190,"line_end":1190,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100946,"byte_end":100949,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ assert!(map.remove_bin(\"trace-proto-bin\").is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":100954,"byte_end":101011,"line_start":1192,"line_end":1192,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101016,"byte_end":101019,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove a key of the wrong type fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101024,"byte_end":101088,"line_start":1194,"line_end":1194,"column_start":5,"column_end":69}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101093,"byte_end":101117,"line_start":1195,"line_end":1195,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101122,"byte_end":101171,"line_start":1196,"line_end":1196,"column_start":5,"column_end":54}},{"value":"/ assert!(map.remove_bin(\"host\").is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101176,"byte_end":101222,"line_start":1197,"line_end":1197,"column_start":5,"column_end":51}},{"value":"/ assert!(map.remove_bin(\"host\".to_string()).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101227,"byte_end":101285,"line_start":1198,"line_end":1198,"column_start":5,"column_end":63}},{"value":"/ assert!(map.remove_bin(&(\"host\".to_string())).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101290,"byte_end":101351,"line_start":1199,"line_end":1199,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101356,"byte_end":101359,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove an invalid key string fails by not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101364,"byte_end":101426,"line_start":1201,"line_end":1201,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101431,"byte_end":101455,"line_start":1202,"line_end":1202,"column_start":5,"column_end":29}},{"value":"/ assert!(map.remove_bin(\"host{}-bin\").is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101460,"byte_end":101512,"line_start":1203,"line_end":1203,"column_start":5,"column_end":57}},{"value":"/ assert!(map.remove_bin(\"host{}-bin\".to_string()).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101517,"byte_end":101581,"line_start":1204,"line_end":1204,"column_start":5,"column_end":69}},{"value":"/ assert!(map.remove_bin(&(\"host{}-bin\".to_string())).is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101586,"byte_end":101653,"line_start":1205,"line_end":1205,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101658,"byte_end":101665,"line_start":1206,"line_end":1206,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108649,"byte_end":108658,"line_start":1460,"line_end":1460,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, MetadataValue<VE>) -> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107796,"byte_end":107866,"line_start":1433,"line_end":1433,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107871,"byte_end":107874,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the **first** value in the entry.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107879,"byte_end":107947,"line_start":1435,"line_end":1435,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107952,"byte_end":107955,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107960,"byte_end":107974,"line_start":1437,"line_end":1437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107979,"byte_end":107982,"line_start":1438,"line_end":1438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107987,"byte_end":107994,"line_start":1439,"line_end":1439,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107999,"byte_end":108028,"line_start":1440,"line_end":1440,"column_start":5,"column_end":34}},{"value":"/ let mut map: MetadataMap = MetadataMap::default();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108033,"byte_end":108087,"line_start":1441,"line_end":1441,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108092,"byte_end":108095,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ let keys = &[","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108100,"byte_end":108117,"line_start":1443,"line_end":1443,"column_start":5,"column_end":22}},{"value":"/     \"content-length\",","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108122,"byte_end":108147,"line_start":1444,"line_end":1444,"column_start":5,"column_end":30}},{"value":"/     \"x-hello\",","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108152,"byte_end":108170,"line_start":1445,"line_end":1445,"column_start":5,"column_end":23}},{"value":"/     \"Content-Length\",","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108175,"byte_end":108200,"line_start":1446,"line_end":1446,"column_start":5,"column_end":30}},{"value":"/     \"x-world\",","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108205,"byte_end":108223,"line_start":1447,"line_end":1447,"column_start":5,"column_end":23}},{"value":"/ ];","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108228,"byte_end":108234,"line_start":1448,"line_end":1448,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108239,"byte_end":108242,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ for &key in keys {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108247,"byte_end":108269,"line_start":1450,"line_end":1450,"column_start":5,"column_end":27}},{"value":"/     let counter = map.entry(key)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108274,"byte_end":108310,"line_start":1451,"line_end":1451,"column_start":5,"column_end":41}},{"value":"/         .expect(\"valid key names\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108315,"byte_end":108353,"line_start":1452,"line_end":1452,"column_start":5,"column_end":43}},{"value":"/         .or_insert(\"\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108358,"byte_end":108402,"line_start":1453,"line_end":1453,"column_start":5,"column_end":49}},{"value":"/     *counter = format!(\"{}{}\", counter.to_str().unwrap(), \"1\").parse().unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108407,"byte_end":108491,"line_start":1454,"line_end":1454,"column_start":5,"column_end":89}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108496,"byte_end":108501,"line_start":1455,"line_end":1455,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108506,"byte_end":108509,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"content-length\").unwrap(), \"11\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108514,"byte_end":108571,"line_start":1457,"line_end":1457,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"1\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108576,"byte_end":108625,"line_start":1458,"line_end":1458,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108630,"byte_end":108637,"line_start":1459,"line_end":1459,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109902,"byte_end":109916,"line_start":1503,"line_end":1503,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> MetadataValue<VE>>(Self, F)\n-> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default\n function if empty.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108880,"byte_end":108954,"line_start":1469,"line_end":1469,"column_start":5,"column_end":79}},{"value":"/ function if empty.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108959,"byte_end":108981,"line_start":1470,"line_end":1470,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108986,"byte_end":108989,"line_start":1471,"line_end":1471,"column_start":5,"column_end":8}},{"value":"/ The default function is not called if the entry exists in the map.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":108994,"byte_end":109064,"line_start":1472,"line_end":1472,"column_start":5,"column_end":75}},{"value":"/ Returns a mutable reference to the **first** value in the entry.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109069,"byte_end":109137,"line_start":1473,"line_end":1473,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109142,"byte_end":109145,"line_start":1474,"line_end":1474,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109150,"byte_end":109164,"line_start":1475,"line_end":1475,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109169,"byte_end":109172,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ Basic usage.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109177,"byte_end":109193,"line_start":1477,"line_end":1477,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109198,"byte_end":109201,"line_start":1478,"line_end":1478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109206,"byte_end":109213,"line_start":1479,"line_end":1479,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109218,"byte_end":109247,"line_start":1480,"line_end":1480,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109252,"byte_end":109289,"line_start":1481,"line_end":1481,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109294,"byte_end":109297,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ let res = map.entry(\"x-hello\").unwrap()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109302,"byte_end":109345,"line_start":1483,"line_end":1483,"column_start":5,"column_end":48}},{"value":"/     .or_insert_with(|| \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109350,"byte_end":109403,"line_start":1484,"line_end":1484,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109408,"byte_end":109411,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(res, \"world\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109416,"byte_end":109445,"line_start":1486,"line_end":1486,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109450,"byte_end":109457,"line_start":1487,"line_end":1487,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109462,"byte_end":109465,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ The default function is not called if the entry exists in the map.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109470,"byte_end":109540,"line_start":1489,"line_end":1489,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109545,"byte_end":109548,"line_start":1490,"line_end":1490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109553,"byte_end":109560,"line_start":1491,"line_end":1491,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109565,"byte_end":109594,"line_start":1492,"line_end":1492,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109599,"byte_end":109636,"line_start":1493,"line_end":1493,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109641,"byte_end":109690,"line_start":1494,"line_end":1494,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109695,"byte_end":109698,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ let res = map.entry(\"host\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109703,"byte_end":109734,"line_start":1496,"line_end":1496,"column_start":5,"column_end":36}},{"value":"/     .expect(\"host is a valid string\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109739,"byte_end":109780,"line_start":1497,"line_end":1497,"column_start":5,"column_end":46}},{"value":"/     .or_insert_with(|| unreachable!());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109785,"byte_end":109828,"line_start":1498,"line_end":1498,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109833,"byte_end":109836,"line_start":1499,"line_end":1499,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109841,"byte_end":109844,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(res, \"world\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109849,"byte_end":109878,"line_start":1501,"line_end":1501,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":109883,"byte_end":109890,"line_start":1502,"line_end":1502,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110446,"byte_end":110449,"line_start":1525,"line_end":1525,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the entry's key","sig":null,"attributes":[{"value":"/ Returns a reference to the entry's key","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110181,"byte_end":110223,"line_start":1515,"line_end":1515,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110228,"byte_end":110231,"line_start":1516,"line_end":1516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110236,"byte_end":110250,"line_start":1517,"line_end":1517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110255,"byte_end":110258,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110263,"byte_end":110270,"line_start":1519,"line_end":1519,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110275,"byte_end":110304,"line_start":1520,"line_end":1520,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110309,"byte_end":110346,"line_start":1521,"line_end":1521,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110351,"byte_end":110354,"line_start":1522,"line_end":1522,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.entry(\"x-hello\").unwrap().key(), \"x-hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110359,"byte_end":110422,"line_start":1523,"line_end":1523,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110427,"byte_end":110434,"line_start":1524,"line_end":1524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111036,"byte_end":111039,"line_start":1548,"line_end":1548,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the entry's key","sig":null,"attributes":[{"value":"/ Returns a reference to the entry's key","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110771,"byte_end":110813,"line_start":1538,"line_end":1538,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110818,"byte_end":110821,"line_start":1539,"line_end":1539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110826,"byte_end":110840,"line_start":1540,"line_end":1540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110845,"byte_end":110848,"line_start":1541,"line_end":1541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110853,"byte_end":110860,"line_start":1542,"line_end":1542,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110865,"byte_end":110894,"line_start":1543,"line_end":1543,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110899,"byte_end":110936,"line_start":1544,"line_end":1544,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110941,"byte_end":110944,"line_start":1545,"line_end":1545,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.entry(\"x-hello\").unwrap().key(), \"x-hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110949,"byte_end":111012,"line_start":1546,"line_end":1546,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111017,"byte_end":111024,"line_start":1547,"line_end":1547,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111468,"byte_end":111476,"line_start":1564,"line_end":1564,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key","sig":null,"attributes":[{"value":"/ Take ownership of the key","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111150,"byte_end":111179,"line_start":1552,"line_end":1552,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111184,"byte_end":111187,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111192,"byte_end":111206,"line_start":1554,"line_end":1554,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111211,"byte_end":111214,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111219,"byte_end":111226,"line_start":1556,"line_end":1556,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111231,"byte_end":111260,"line_start":1557,"line_end":1557,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111265,"byte_end":111302,"line_start":1558,"line_end":1558,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111307,"byte_end":111310,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"x-hello\").unwrap() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111315,"byte_end":111376,"line_start":1560,"line_end":1560,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(v.into_key().as_str(), \"x-hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111381,"byte_end":111434,"line_start":1561,"line_end":1561,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111439,"byte_end":111444,"line_start":1562,"line_end":1562,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111449,"byte_end":111456,"line_start":1563,"line_end":1563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112103,"byte_end":112109,"line_start":1585,"line_end":1585,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, MetadataValue<VE>) -> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the entry.","sig":null,"attributes":[{"value":"/ Insert the value into the entry.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111586,"byte_end":111622,"line_start":1568,"line_end":1568,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111627,"byte_end":111630,"line_start":1569,"line_end":1569,"column_start":5,"column_end":8}},{"value":"/ The value will be associated with this entry's key. A mutable reference","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111635,"byte_end":111710,"line_start":1570,"line_end":1570,"column_start":5,"column_end":80}},{"value":"/ to the inserted value will be returned.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111715,"byte_end":111758,"line_start":1571,"line_end":1571,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111763,"byte_end":111766,"line_start":1572,"line_end":1572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111771,"byte_end":111785,"line_start":1573,"line_end":1573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111790,"byte_end":111793,"line_start":1574,"line_end":1574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111798,"byte_end":111805,"line_start":1575,"line_end":1575,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111810,"byte_end":111839,"line_start":1576,"line_end":1576,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111844,"byte_end":111881,"line_start":1577,"line_end":1577,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111886,"byte_end":111889,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"x-hello\").unwrap() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111894,"byte_end":111955,"line_start":1579,"line_end":1579,"column_start":5,"column_end":66}},{"value":"/     v.insert(\"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":111960,"byte_end":112003,"line_start":1580,"line_end":1580,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112008,"byte_end":112013,"line_start":1581,"line_end":1581,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112018,"byte_end":112021,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"world\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112026,"byte_end":112079,"line_start":1583,"line_end":1583,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112084,"byte_end":112091,"line_start":1584,"line_end":1584,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112872,"byte_end":112884,"line_start":1607,"line_end":1607,"column_start":12,"column_end":24},"name":"insert_entry","qualname":"<VacantEntry>::insert_entry","value":"pub fn insert_entry(Self, MetadataValue<VE>) -> OccupiedEntry","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the entry.","sig":null,"attributes":[{"value":"/ Insert the value into the entry.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112275,"byte_end":112311,"line_start":1589,"line_end":1589,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112316,"byte_end":112319,"line_start":1590,"line_end":1590,"column_start":5,"column_end":8}},{"value":"/ The value will be associated with this entry's key. The new","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112324,"byte_end":112387,"line_start":1591,"line_end":1591,"column_start":5,"column_end":68}},{"value":"/ `OccupiedEntry` is returned, allowing for further manipulation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112392,"byte_end":112459,"line_start":1592,"line_end":1592,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112464,"byte_end":112467,"line_start":1593,"line_end":1593,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112472,"byte_end":112486,"line_start":1594,"line_end":1594,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112491,"byte_end":112494,"line_start":1595,"line_end":1595,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112499,"byte_end":112506,"line_start":1596,"line_end":1596,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112511,"byte_end":112540,"line_start":1597,"line_end":1597,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112545,"byte_end":112582,"line_start":1598,"line_end":1598,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112587,"byte_end":112590,"line_start":1599,"line_end":1599,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"x-hello\").unwrap() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112595,"byte_end":112656,"line_start":1600,"line_end":1600,"column_start":5,"column_end":66}},{"value":"/     let mut e = v.insert_entry(\"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112661,"byte_end":112722,"line_start":1601,"line_end":1601,"column_start":5,"column_end":66}},{"value":"/     e.insert(\"world2\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112727,"byte_end":112771,"line_start":1602,"line_end":1602,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112776,"byte_end":112781,"line_start":1603,"line_end":1603,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112786,"byte_end":112789,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"world2\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112794,"byte_end":112848,"line_start":1605,"line_end":1605,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":112853,"byte_end":112860,"line_start":1606,"line_end":1606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113540,"byte_end":113543,"line_start":1631,"line_end":1631,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to the entry's key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113172,"byte_end":113215,"line_start":1618,"line_end":1618,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113220,"byte_end":113223,"line_start":1619,"line_end":1619,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113228,"byte_end":113242,"line_start":1620,"line_end":1620,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113247,"byte_end":113250,"line_start":1621,"line_end":1621,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113255,"byte_end":113262,"line_start":1622,"line_end":1622,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113267,"byte_end":113296,"line_start":1623,"line_end":1623,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113301,"byte_end":113338,"line_start":1624,"line_end":1624,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113343,"byte_end":113392,"line_start":1625,"line_end":1625,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113397,"byte_end":113400,"line_start":1626,"line_end":1626,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113405,"byte_end":113465,"line_start":1627,"line_end":1627,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(\"host\", e.key());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113470,"byte_end":113506,"line_start":1628,"line_end":1628,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113511,"byte_end":113516,"line_start":1629,"line_end":1629,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113521,"byte_end":113528,"line_start":1630,"line_end":1630,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114326,"byte_end":114329,"line_start":1658,"line_end":1658,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the first value in the entry.","sig":null,"attributes":[{"value":"/ Get a reference to the first value in the entry.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113654,"byte_end":113706,"line_start":1635,"line_end":1635,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113711,"byte_end":113714,"line_start":1636,"line_end":1636,"column_start":5,"column_end":8}},{"value":"/ Values are stored in insertion order.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113719,"byte_end":113760,"line_start":1637,"line_end":1637,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113765,"byte_end":113768,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113773,"byte_end":113785,"line_start":1639,"line_end":1639,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113790,"byte_end":113793,"line_start":1640,"line_end":1640,"column_start":5,"column_end":8}},{"value":"/ `get` panics if there are no values associated with the entry.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113798,"byte_end":113864,"line_start":1641,"line_end":1641,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113869,"byte_end":113872,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113877,"byte_end":113891,"line_start":1643,"line_end":1643,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113896,"byte_end":113899,"line_start":1644,"line_end":1644,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113904,"byte_end":113911,"line_start":1645,"line_end":1645,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113916,"byte_end":113945,"line_start":1646,"line_end":1646,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113950,"byte_end":113987,"line_start":1647,"line_end":1647,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113992,"byte_end":114047,"line_start":1648,"line_end":1648,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114052,"byte_end":114055,"line_start":1649,"line_end":1649,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114060,"byte_end":114124,"line_start":1650,"line_end":1650,"column_start":5,"column_end":69}},{"value":"/     assert_eq!(e.get(), &\"hello.world\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114129,"byte_end":114173,"line_start":1651,"line_end":1651,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114178,"byte_end":114181,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/     e.append(\"hello.earth\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114186,"byte_end":114235,"line_start":1653,"line_end":1653,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114240,"byte_end":114243,"line_start":1654,"line_end":1654,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(e.get(), &\"hello.world\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114248,"byte_end":114292,"line_start":1655,"line_end":1655,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114297,"byte_end":114302,"line_start":1656,"line_end":1656,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114307,"byte_end":114314,"line_start":1657,"line_end":1657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115104,"byte_end":115111,"line_start":1683,"line_end":1683,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the first value in the entry.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the first value in the entry.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114445,"byte_end":114505,"line_start":1662,"line_end":1662,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114510,"byte_end":114513,"line_start":1663,"line_end":1663,"column_start":5,"column_end":8}},{"value":"/ Values are stored in insertion order.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114518,"byte_end":114559,"line_start":1664,"line_end":1664,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114564,"byte_end":114567,"line_start":1665,"line_end":1665,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114572,"byte_end":114584,"line_start":1666,"line_end":1666,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114589,"byte_end":114592,"line_start":1667,"line_end":1667,"column_start":5,"column_end":8}},{"value":"/ `get_mut` panics if there are no values associated with the entry.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114597,"byte_end":114667,"line_start":1668,"line_end":1668,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114672,"byte_end":114675,"line_start":1669,"line_end":1669,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114680,"byte_end":114694,"line_start":1670,"line_end":1670,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114699,"byte_end":114702,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114707,"byte_end":114714,"line_start":1672,"line_end":1672,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114719,"byte_end":114748,"line_start":1673,"line_end":1673,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114753,"byte_end":114794,"line_start":1674,"line_end":1674,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114799,"byte_end":114854,"line_start":1675,"line_end":1675,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114859,"byte_end":114862,"line_start":1676,"line_end":1676,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114867,"byte_end":114931,"line_start":1677,"line_end":1677,"column_start":5,"column_end":69}},{"value":"/     e.get_mut().set_sensitive(true);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114936,"byte_end":114976,"line_start":1678,"line_end":1678,"column_start":5,"column_end":45}},{"value":"/     assert_eq!(e.get(), &\"hello.world\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":114981,"byte_end":115025,"line_start":1679,"line_end":1679,"column_start":5,"column_end":49}},{"value":"/     assert!(e.get().is_sensitive());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115030,"byte_end":115070,"line_start":1680,"line_end":1680,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115075,"byte_end":115080,"line_start":1681,"line_end":1681,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115085,"byte_end":115092,"line_start":1682,"line_end":1682,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115992,"byte_end":116000,"line_start":1710,"line_end":1710,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Converts the `OccupiedEntry` into a mutable reference to the **first**\n value.","sig":null,"attributes":[{"value":"/ Converts the `OccupiedEntry` into a mutable reference to the **first**","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115243,"byte_end":115317,"line_start":1687,"line_end":1687,"column_start":5,"column_end":79}},{"value":"/ value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115322,"byte_end":115332,"line_start":1688,"line_end":1688,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115337,"byte_end":115340,"line_start":1689,"line_end":1689,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned reference is bound to the original map.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115345,"byte_end":115417,"line_start":1690,"line_end":1690,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115422,"byte_end":115425,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115430,"byte_end":115442,"line_start":1692,"line_end":1692,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115447,"byte_end":115450,"line_start":1693,"line_end":1693,"column_start":5,"column_end":8}},{"value":"/ `into_mut` panics if there are no values associated with the entry.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115455,"byte_end":115526,"line_start":1694,"line_end":1694,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115531,"byte_end":115534,"line_start":1695,"line_end":1695,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115539,"byte_end":115553,"line_start":1696,"line_end":1696,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115558,"byte_end":115561,"line_start":1697,"line_end":1697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115566,"byte_end":115573,"line_start":1698,"line_end":1698,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115578,"byte_end":115607,"line_start":1699,"line_end":1699,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115612,"byte_end":115653,"line_start":1700,"line_end":1700,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115658,"byte_end":115713,"line_start":1701,"line_end":1701,"column_start":5,"column_end":60}},{"value":"/ map.append(\"host\", \"hello.earth\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115718,"byte_end":115773,"line_start":1702,"line_end":1702,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115778,"byte_end":115781,"line_start":1703,"line_end":1703,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115786,"byte_end":115846,"line_start":1704,"line_end":1704,"column_start":5,"column_end":65}},{"value":"/     e.into_mut().set_sensitive(true);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115851,"byte_end":115892,"line_start":1705,"line_end":1705,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115897,"byte_end":115902,"line_start":1706,"line_end":1706,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115907,"byte_end":115910,"line_start":1707,"line_end":1707,"column_start":5,"column_end":8}},{"value":"/ assert!(map.get(\"host\").unwrap().is_sensitive());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115915,"byte_end":115968,"line_start":1708,"line_end":1708,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":115973,"byte_end":115980,"line_start":1709,"line_end":1709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116795,"byte_end":116801,"line_start":1733,"line_end":1733,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, MetadataValue<VE>) -> MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116131,"byte_end":116163,"line_start":1714,"line_end":1714,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116168,"byte_end":116171,"line_start":1715,"line_end":1715,"column_start":5,"column_end":8}},{"value":"/ All previous values associated with the entry are removed and the first","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116176,"byte_end":116251,"line_start":1716,"line_end":1716,"column_start":5,"column_end":80}},{"value":"/ one is returned. See `insert_mult` for an API that returns all values.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116256,"byte_end":116330,"line_start":1717,"line_end":1717,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116335,"byte_end":116338,"line_start":1718,"line_end":1718,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116343,"byte_end":116357,"line_start":1719,"line_end":1719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116362,"byte_end":116365,"line_start":1720,"line_end":1720,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116370,"byte_end":116377,"line_start":1721,"line_end":1721,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116382,"byte_end":116411,"line_start":1722,"line_end":1722,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116416,"byte_end":116453,"line_start":1723,"line_end":1723,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116458,"byte_end":116513,"line_start":1724,"line_end":1724,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116518,"byte_end":116521,"line_start":1725,"line_end":1725,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116526,"byte_end":116590,"line_start":1726,"line_end":1726,"column_start":5,"column_end":69}},{"value":"/     let mut prev = e.insert(\"earth\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116595,"byte_end":116653,"line_start":1727,"line_end":1727,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(\"hello.world\", prev);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116658,"byte_end":116698,"line_start":1728,"line_end":1728,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116703,"byte_end":116708,"line_start":1729,"line_end":1729,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116713,"byte_end":116716,"line_start":1730,"line_end":1730,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"earth\", map.get(\"host\").unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116721,"byte_end":116771,"line_start":1731,"line_end":1731,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116776,"byte_end":116783,"line_start":1732,"line_end":1732,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117811,"byte_end":117822,"line_start":1760,"line_end":1760,"column_start":12,"column_end":23},"name":"insert_mult","qualname":"<OccupiedEntry>::insert_mult","value":"pub fn insert_mult(&mut Self, MetadataValue<VE>) -> ValueDrain<, VE>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":116997,"byte_end":117029,"line_start":1738,"line_end":1738,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117034,"byte_end":117037,"line_start":1739,"line_end":1739,"column_start":5,"column_end":8}},{"value":"/ This function does the same as `insert` except it returns an iterator","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117042,"byte_end":117115,"line_start":1740,"line_end":1740,"column_start":5,"column_end":78}},{"value":"/ that yields all values previously associated with the key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117120,"byte_end":117182,"line_start":1741,"line_end":1741,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117187,"byte_end":117190,"line_start":1742,"line_end":1742,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117195,"byte_end":117209,"line_start":1743,"line_end":1743,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117214,"byte_end":117217,"line_start":1744,"line_end":1744,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117222,"byte_end":117229,"line_start":1745,"line_end":1745,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117234,"byte_end":117263,"line_start":1746,"line_end":1746,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117268,"byte_end":117305,"line_start":1747,"line_end":1747,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117310,"byte_end":117359,"line_start":1748,"line_end":1748,"column_start":5,"column_end":54}},{"value":"/ map.append(\"host\", \"world2\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117364,"byte_end":117414,"line_start":1749,"line_end":1749,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117419,"byte_end":117422,"line_start":1750,"line_end":1750,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117427,"byte_end":117491,"line_start":1751,"line_end":1751,"column_start":5,"column_end":69}},{"value":"/     let mut prev = e.insert_mult(\"earth\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117496,"byte_end":117559,"line_start":1752,"line_end":1752,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(\"world\", prev.next().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117564,"byte_end":117614,"line_start":1753,"line_end":1753,"column_start":5,"column_end":55}},{"value":"/     assert_eq!(\"world2\", prev.next().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117619,"byte_end":117670,"line_start":1754,"line_end":1754,"column_start":5,"column_end":56}},{"value":"/     assert!(prev.next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117675,"byte_end":117714,"line_start":1755,"line_end":1755,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117719,"byte_end":117724,"line_start":1756,"line_end":1756,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117729,"byte_end":117732,"line_start":1757,"line_end":1757,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"earth\", map.get(\"host\").unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117737,"byte_end":117787,"line_start":1758,"line_end":1758,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":117792,"byte_end":117799,"line_start":1759,"line_end":1759,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118719,"byte_end":118725,"line_start":1788,"line_end":1788,"column_start":12,"column_end":18},"name":"append","qualname":"<OccupiedEntry>::append","value":"pub fn append(&mut Self, MetadataValue<VE>)","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the entry.","sig":null,"attributes":[{"value":"/ Insert the value into the entry.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118016,"byte_end":118052,"line_start":1767,"line_end":1767,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118057,"byte_end":118060,"line_start":1768,"line_end":1768,"column_start":5,"column_end":8}},{"value":"/ The new value is appended to the end of the entry's value list. All","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118065,"byte_end":118136,"line_start":1769,"line_end":1769,"column_start":5,"column_end":76}},{"value":"/ previous values associated with the entry are retained.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118141,"byte_end":118200,"line_start":1770,"line_end":1770,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118205,"byte_end":118208,"line_start":1771,"line_end":1771,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118213,"byte_end":118227,"line_start":1772,"line_end":1772,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118232,"byte_end":118235,"line_start":1773,"line_end":1773,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118240,"byte_end":118247,"line_start":1774,"line_end":1774,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118252,"byte_end":118281,"line_start":1775,"line_end":1775,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118286,"byte_end":118323,"line_start":1776,"line_end":1776,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118328,"byte_end":118377,"line_start":1777,"line_end":1777,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118382,"byte_end":118385,"line_start":1778,"line_end":1778,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118390,"byte_end":118454,"line_start":1779,"line_end":1779,"column_start":5,"column_end":69}},{"value":"/     e.append(\"earth\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118459,"byte_end":118502,"line_start":1780,"line_end":1780,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118507,"byte_end":118512,"line_start":1781,"line_end":1781,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118517,"byte_end":118520,"line_start":1782,"line_end":1782,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all(\"host\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118525,"byte_end":118562,"line_start":1783,"line_end":1783,"column_start":5,"column_end":42}},{"value":"/ let mut i = values.iter();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118567,"byte_end":118597,"line_start":1784,"line_end":1784,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"world\", *i.next().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118602,"byte_end":118646,"line_start":1785,"line_end":1785,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(\"earth\", *i.next().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118651,"byte_end":118695,"line_start":1786,"line_end":1786,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118700,"byte_end":118707,"line_start":1787,"line_end":1787,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119427,"byte_end":119433,"line_start":1811,"line_end":1811,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Remove the entry from the map.","sig":null,"attributes":[{"value":"/ Remove the entry from the map.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118815,"byte_end":118849,"line_start":1792,"line_end":1792,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118854,"byte_end":118857,"line_start":1793,"line_end":1793,"column_start":5,"column_end":8}},{"value":"/ All values associated with the entry are removed and the first one is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118862,"byte_end":118935,"line_start":1794,"line_end":1794,"column_start":5,"column_end":78}},{"value":"/ returned. See `remove_entry_mult` for an API that returns all values.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":118940,"byte_end":119013,"line_start":1795,"line_end":1795,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119018,"byte_end":119021,"line_start":1796,"line_end":1796,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119026,"byte_end":119040,"line_start":1797,"line_end":1797,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119045,"byte_end":119048,"line_start":1798,"line_end":1798,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119053,"byte_end":119060,"line_start":1799,"line_end":1799,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119065,"byte_end":119094,"line_start":1800,"line_end":1800,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119099,"byte_end":119136,"line_start":1801,"line_end":1801,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119141,"byte_end":119190,"line_start":1802,"line_end":1802,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119195,"byte_end":119198,"line_start":1803,"line_end":1803,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119203,"byte_end":119263,"line_start":1804,"line_end":1804,"column_start":5,"column_end":65}},{"value":"/     let mut prev = e.remove();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119268,"byte_end":119302,"line_start":1805,"line_end":1805,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(\"world\", prev);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119307,"byte_end":119341,"line_start":1806,"line_end":1806,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119346,"byte_end":119351,"line_start":1807,"line_end":1807,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119356,"byte_end":119359,"line_start":1808,"line_end":1808,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"host\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119364,"byte_end":119403,"line_start":1809,"line_end":1809,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119408,"byte_end":119415,"line_start":1810,"line_end":1810,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":120264,"byte_end":120276,"line_start":1837,"line_end":1837,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (MetadataKey<VE>, MetadataValue<VE>)","parent":null,"children":[],"decl_id":null,"docs":" Remove the entry from the map.","sig":null,"attributes":[{"value":"/ Remove the entry from the map.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119573,"byte_end":119607,"line_start":1816,"line_end":1816,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119612,"byte_end":119615,"line_start":1817,"line_end":1817,"column_start":5,"column_end":8}},{"value":"/ The key and all values associated with the entry are removed and the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119620,"byte_end":119692,"line_start":1818,"line_end":1818,"column_start":5,"column_end":77}},{"value":"/ first one is returned. See `remove_entry_mult` for an API that returns","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119697,"byte_end":119771,"line_start":1819,"line_end":1819,"column_start":5,"column_end":79}},{"value":"/ all values.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119776,"byte_end":119791,"line_start":1820,"line_end":1820,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119796,"byte_end":119799,"line_start":1821,"line_end":1821,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119804,"byte_end":119818,"line_start":1822,"line_end":1822,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119823,"byte_end":119826,"line_start":1823,"line_end":1823,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119831,"byte_end":119838,"line_start":1824,"line_end":1824,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119843,"byte_end":119872,"line_start":1825,"line_end":1825,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119877,"byte_end":119914,"line_start":1826,"line_end":1826,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119919,"byte_end":119968,"line_start":1827,"line_end":1827,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119973,"byte_end":119976,"line_start":1828,"line_end":1828,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":119981,"byte_end":120041,"line_start":1829,"line_end":1829,"column_start":5,"column_end":65}},{"value":"/     let (key, mut prev) = e.remove_entry();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":120046,"byte_end":120093,"line_start":1830,"line_end":1830,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(\"host\", key.as_str());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":120098,"byte_end":120139,"line_start":1831,"line_end":1831,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(\"world\", prev);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":120144,"byte_end":120178,"line_start":1832,"line_end":1832,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":120183,"byte_end":120188,"line_start":1833,"line_end":1833,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":120193,"byte_end":120196,"line_start":1834,"line_end":1834,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"host\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":120201,"byte_end":120240,"line_start":1835,"line_end":1835,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":120245,"byte_end":120252,"line_start":1836,"line_end":1836,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":120678,"byte_end":120695,"line_start":1849,"line_end":1849,"column_start":12,"column_end":29},"name":"remove_entry_mult","qualname":"<OccupiedEntry>::remove_entry_mult","value":"pub fn remove_entry_mult(Self) -> (MetadataKey<VE>, ValueDrain)","parent":null,"children":[],"decl_id":null,"docs":" Remove the entry from the map.","sig":null,"attributes":[{"value":"/ Remove the entry from the map.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":120533,"byte_end":120567,"line_start":1845,"line_end":1845,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":120572,"byte_end":120575,"line_start":1846,"line_end":1846,"column_start":5,"column_end":8}},{"value":"/ The key and all values associated with the entry are removed and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":120580,"byte_end":120648,"line_start":1847,"line_end":1847,"column_start":5,"column_end":73}},{"value":"/ returned.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":120653,"byte_end":120666,"line_start":1848,"line_end":1848,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121672,"byte_end":121676,"line_start":1879,"line_end":1879,"column_start":12,"column_end":16},"name":"iter","qualname":"<OccupiedEntry>::iter","value":"pub fn iter(&Self) -> ValueIter<, VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all values associated with the entry.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all values associated with the entry.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121015,"byte_end":121085,"line_start":1860,"line_end":1860,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121090,"byte_end":121093,"line_start":1861,"line_end":1861,"column_start":5,"column_end":8}},{"value":"/ Values are iterated in insertion order.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121098,"byte_end":121141,"line_start":1862,"line_end":1862,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121146,"byte_end":121149,"line_start":1863,"line_end":1863,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121154,"byte_end":121168,"line_start":1864,"line_end":1864,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121173,"byte_end":121176,"line_start":1865,"line_end":1865,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121181,"byte_end":121188,"line_start":1866,"line_end":1866,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121193,"byte_end":121222,"line_start":1867,"line_end":1867,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121227,"byte_end":121264,"line_start":1868,"line_end":1868,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121269,"byte_end":121318,"line_start":1869,"line_end":1869,"column_start":5,"column_end":54}},{"value":"/ map.append(\"host\", \"earth\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121323,"byte_end":121372,"line_start":1870,"line_end":1870,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121377,"byte_end":121380,"line_start":1871,"line_end":1871,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121385,"byte_end":121445,"line_start":1872,"line_end":1872,"column_start":5,"column_end":65}},{"value":"/     let mut iter = e.iter();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121450,"byte_end":121482,"line_start":1873,"line_end":1873,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(&\"world\", iter.next().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121487,"byte_end":121538,"line_start":1874,"line_end":1874,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(&\"earth\", iter.next().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121543,"byte_end":121594,"line_start":1875,"line_end":1875,"column_start":5,"column_end":56}},{"value":"/     assert!(iter.next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121599,"byte_end":121638,"line_start":1876,"line_end":1876,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121643,"byte_end":121648,"line_start":1877,"line_end":1877,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121653,"byte_end":121660,"line_start":1878,"line_end":1878,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122594,"byte_end":122602,"line_start":1910,"line_end":1910,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<OccupiedEntry>::iter_mut","value":"pub fn iter_mut(&mut Self) -> ValueIterMut<, VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator mutably visiting all values associated with the\n entry.","sig":null,"attributes":[{"value":"/ Returns an iterator mutably visiting all values associated with the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121826,"byte_end":121897,"line_start":1886,"line_end":1886,"column_start":5,"column_end":76}},{"value":"/ entry.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121902,"byte_end":121912,"line_start":1887,"line_end":1887,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121917,"byte_end":121920,"line_start":1888,"line_end":1888,"column_start":5,"column_end":8}},{"value":"/ Values are iterated in insertion order.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121925,"byte_end":121968,"line_start":1889,"line_end":1889,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121973,"byte_end":121976,"line_start":1890,"line_end":1890,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":121981,"byte_end":121995,"line_start":1891,"line_end":1891,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122000,"byte_end":122003,"line_start":1892,"line_end":1892,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122008,"byte_end":122015,"line_start":1893,"line_end":1893,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122020,"byte_end":122049,"line_start":1894,"line_end":1894,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122054,"byte_end":122095,"line_start":1895,"line_end":1895,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122100,"byte_end":122149,"line_start":1896,"line_end":1896,"column_start":5,"column_end":54}},{"value":"/ map.append(\"host\", \"earth\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122154,"byte_end":122203,"line_start":1897,"line_end":1897,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122208,"byte_end":122211,"line_start":1898,"line_end":1898,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122216,"byte_end":122280,"line_start":1899,"line_end":1899,"column_start":5,"column_end":69}},{"value":"/     for e in e.iter_mut() {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122285,"byte_end":122316,"line_start":1900,"line_end":1900,"column_start":5,"column_end":36}},{"value":"/         e.set_sensitive(true);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122321,"byte_end":122355,"line_start":1901,"line_end":1901,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122360,"byte_end":122369,"line_start":1902,"line_end":1902,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122374,"byte_end":122379,"line_start":1903,"line_end":1903,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122384,"byte_end":122387,"line_start":1904,"line_end":1904,"column_start":5,"column_end":8}},{"value":"/ let mut values = map.get_all(\"host\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122392,"byte_end":122433,"line_start":1905,"line_end":1905,"column_start":5,"column_end":46}},{"value":"/ let mut i = values.iter();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122438,"byte_end":122468,"line_start":1906,"line_end":1906,"column_start":5,"column_end":35}},{"value":"/ assert!(i.next().unwrap().is_sensitive());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122473,"byte_end":122519,"line_start":1907,"line_end":1907,"column_start":5,"column_end":51}},{"value":"/ assert!(i.next().unwrap().is_sensitive());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122524,"byte_end":122570,"line_start":1908,"line_end":1908,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122575,"byte_end":122582,"line_start":1909,"line_end":1909,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":124307,"byte_end":124311,"line_start":1972,"line_end":1972,"column_start":12,"column_end":16},"name":"iter","qualname":"<GetAll>::iter","value":"pub fn iter(&Self) -> ValueIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all values associated with the entry.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all values associated with the entry.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":123664,"byte_end":123734,"line_start":1954,"line_end":1954,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":123739,"byte_end":123742,"line_start":1955,"line_end":1955,"column_start":5,"column_end":8}},{"value":"/ Values are iterated in insertion order.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":123747,"byte_end":123790,"line_start":1956,"line_end":1956,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":123795,"byte_end":123798,"line_start":1957,"line_end":1957,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":123803,"byte_end":123817,"line_start":1958,"line_end":1958,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":123822,"byte_end":123825,"line_start":1959,"line_end":1959,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":123830,"byte_end":123837,"line_start":1960,"line_end":1960,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":123842,"byte_end":123871,"line_start":1961,"line_end":1961,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":123876,"byte_end":123913,"line_start":1962,"line_end":1962,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":123918,"byte_end":123975,"line_start":1963,"line_end":1963,"column_start":5,"column_end":62}},{"value":"/ map.append(\"x-host\", \"hello.earth\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":123980,"byte_end":124037,"line_start":1964,"line_end":1964,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":124042,"byte_end":124045,"line_start":1965,"line_end":1965,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all(\"x-host\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":124050,"byte_end":124089,"line_start":1966,"line_end":1966,"column_start":5,"column_end":44}},{"value":"/ let mut iter = values.iter();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":124094,"byte_end":124127,"line_start":1967,"line_end":1967,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&\"hello.world\", iter.next().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":124132,"byte_end":124185,"line_start":1968,"line_end":1968,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(&\"hello.earth\", iter.next().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":124190,"byte_end":124243,"line_start":1969,"line_end":1969,"column_start":5,"column_end":58}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":124248,"byte_end":124283,"line_start":1970,"line_end":1970,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":124288,"byte_end":124295,"line_start":1971,"line_end":1971,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":125627,"byte_end":125642,"line_start":2021,"line_end":2021,"column_start":15,"column_end":30},"name":"IntoMetadataKey","qualname":"::metadata::map::into_metadata_key::IntoMetadataKey","value":"IntoMetadataKey<VE: ValueEncoding>: Sealed<VE>","parent":null,"children":[],"decl_id":null,"docs":" A marker trait used to identify values that can be used as insert keys\n to a `MetadataMap`.\n","sig":null,"attributes":[{"value":"/ A marker trait used to identify values that can be used as insert keys","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":125510,"byte_end":125584,"line_start":2019,"line_end":2019,"column_start":5,"column_end":79}},{"value":"/ to a `MetadataMap`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":125589,"byte_end":125612,"line_start":2020,"line_end":2020,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":126082,"byte_end":126088,"line_start":2031,"line_end":2031,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::map::into_metadata_key::Sealed","value":"Sealed<VE: ValueEncoding>","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":126144,"byte_end":126150,"line_start":2033,"line_end":2033,"column_start":12,"column_end":18},"name":"insert","qualname":"::metadata::map::into_metadata_key::Sealed::insert","value":"pub fn insert(Self, &mut MetadataMap, MetadataValue<VE>)\n-> Option<MetadataValue<VE>>","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":126281,"byte_end":126287,"line_start":2037,"line_end":2037,"column_start":12,"column_end":18},"name":"append","qualname":"::metadata::map::into_metadata_key::Sealed::append","value":"pub fn append(Self, &mut MetadataMap, MetadataValue<VE>) -> bool","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":128904,"byte_end":128917,"line_start":2120,"line_end":2120,"column_start":15,"column_end":28},"name":"AsMetadataKey","qualname":"::metadata::map::as_metadata_key::AsMetadataKey","value":"AsMetadataKey<VE: ValueEncoding>: Sealed<VE>","parent":null,"children":[],"decl_id":null,"docs":" A marker trait used to identify values that can be used as search keys\n to a `MetadataMap`.\n","sig":null,"attributes":[{"value":"/ A marker trait used to identify values that can be used as search keys","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":128787,"byte_end":128861,"line_start":2118,"line_end":2118,"column_start":5,"column_end":79}},{"value":"/ to a `MetadataMap`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":128866,"byte_end":128889,"line_start":2119,"line_end":2119,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":129334,"byte_end":129340,"line_start":2130,"line_end":2130,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::map::as_metadata_key::Sealed","value":"Sealed<VE: ValueEncoding>","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":129396,"byte_end":129399,"line_start":2132,"line_end":2132,"column_start":12,"column_end":15},"name":"get","qualname":"::metadata::map::as_metadata_key::Sealed::get","value":"pub fn get(Self, &MetadataMap) -> Option<&MetadataValue<VE>>","parent":{"krate":0,"index":1066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":129491,"byte_end":129498,"line_start":2135,"line_end":2135,"column_start":12,"column_end":19},"name":"get_mut","qualname":"::metadata::map::as_metadata_key::Sealed::get_mut","value":"pub fn get_mut(Self, &mut MetadataMap) -> Option<&mut MetadataValue<VE>>","parent":{"krate":0,"index":1066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":129598,"byte_end":129605,"line_start":2138,"line_end":2138,"column_start":12,"column_end":19},"name":"get_all","qualname":"::metadata::map::as_metadata_key::Sealed::get_all","value":"pub fn get_all(Self, &MetadataMap) -> Option<GetAll<, HeaderValue>>","parent":{"krate":0,"index":1066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":129702,"byte_end":129707,"line_start":2141,"line_end":2141,"column_start":12,"column_end":17},"name":"entry","qualname":"::metadata::map::as_metadata_key::Sealed::entry","value":"pub fn entry(Self, &mut MetadataMap)\n-> Result<Entry<, HeaderValue>, InvalidMetadataKey>","parent":{"krate":0,"index":1066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":129839,"byte_end":129845,"line_start":2145,"line_end":2145,"column_start":12,"column_end":18},"name":"remove","qualname":"::metadata::map::as_metadata_key::Sealed::remove","value":"pub fn remove(Self, &mut MetadataMap) -> Option<MetadataValue<VE>>","parent":{"krate":0,"index":1066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":138695,"byte_end":138724,"line_start":2427,"line_end":2427,"column_start":15,"column_end":44},"name":"AsEncodingAgnosticMetadataKey","qualname":"::metadata::map::as_encoding_agnostic_metadata_key::AsEncodingAgnosticMetadataKey","value":"AsEncodingAgnosticMetadataKey: Sealed","parent":null,"children":[],"decl_id":null,"docs":" A marker trait used to identify values that can be used as search keys\n to a `MetadataMap`, for operations that don't expose the actual value.\n","sig":null,"attributes":[{"value":"/ A marker trait used to identify values that can be used as search keys","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":138527,"byte_end":138601,"line_start":2425,"line_end":2425,"column_start":5,"column_end":79}},{"value":"/ to a `MetadataMap`, for operations that don't expose the actual value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":138606,"byte_end":138680,"line_start":2426,"line_end":2426,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":139165,"byte_end":139171,"line_start":2438,"line_end":2438,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::map::as_encoding_agnostic_metadata_key::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":1140}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":139208,"byte_end":139220,"line_start":2440,"line_end":2440,"column_start":12,"column_end":24},"name":"contains_key","qualname":"::metadata::map::as_encoding_agnostic_metadata_key::Sealed::contains_key","value":"pub fn contains_key(&Self, &MetadataMap) -> bool","parent":{"krate":0,"index":1139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3897},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":148641,"byte_end":148654,"line_start":22,"line_end":22,"column_start":12,"column_end":25},"name":"MetadataValue","qualname":"::metadata::value::MetadataValue","value":"MetadataValue {  }","parent":null,"children":[{"krate":0,"index":3899},{"krate":0,"index":3900}],"decl_id":null,"docs":" Represents a custom metadata field value.","sig":null,"attributes":[{"value":"/ Represents a custom metadata field value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":148394,"byte_end":148439,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":148440,"byte_end":148443,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `MetadataValue` is used as the [`MetadataMap`] value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":148444,"byte_end":148501,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":148502,"byte_end":148505,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`HeaderMap`]: struct.HeaderMap.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":148506,"byte_end":148546,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ [`MetadataMap`]: struct.MetadataMap.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":148547,"byte_end":148591,"line_start":19,"line_end":19,"column_start":1,"column_end":45}},{"value":"repr(transparent)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":148609,"byte_end":148629,"line_start":21,"line_end":21,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":3904},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149112,"byte_end":149122,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"ToStrError","qualname":"::metadata::value::ToStrError","value":"ToStrError {  }","parent":null,"children":[{"krate":0,"index":3905}],"decl_id":null,"docs":" A possible error when converting a `MetadataValue` to a string representation.","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataValue` to a string representation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":148872,"byte_end":148954,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":148955,"byte_end":148958,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Metadata field values may contain opaque bytes, in which case it is not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":148959,"byte_end":149034,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ possible to represent the value as a string.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149035,"byte_end":149083,"line_start":32,"line_end":32,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1215},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149181,"byte_end":149199,"line_start":39,"line_end":39,"column_start":10,"column_end":28},"name":"AsciiMetadataValue","qualname":"::metadata::value::AsciiMetadataValue","value":"MetadataValue<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" An ascii metadata value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149143,"byte_end":149171,"line_start":38,"line_end":38,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1216},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149262,"byte_end":149281,"line_start":41,"line_end":41,"column_start":10,"column_end":29},"name":"BinaryMetadataValue","qualname":"::metadata::value::BinaryMetadataValue","value":"MetadataValue<Binary>","parent":null,"children":[],"decl_id":null,"docs":" A binary metadata value.\n","sig":null,"attributes":[{"value":"/ A binary metadata value.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149224,"byte_end":149252,"line_start":40,"line_end":40,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1219},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150214,"byte_end":150225,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"from_static","qualname":"<MetadataValue<VE>>::from_static","value":"pub fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a static string to a `MetadataValue`.","sig":null,"attributes":[{"value":"/ Convert a static string to a `MetadataValue`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149356,"byte_end":149405,"line_start":44,"line_end":44,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149410,"byte_end":149413,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function will not perform any copying, however the string is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149418,"byte_end":149487,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/ checked to ensure that no invalid characters are present.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149492,"byte_end":149553,"line_start":47,"line_end":47,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149558,"byte_end":149561,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ For Ascii values, only visible ASCII characters (32-127) are permitted.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149566,"byte_end":149641,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ For Binary values, the string must be valid base64.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149646,"byte_end":149701,"line_start":50,"line_end":50,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149706,"byte_end":149709,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149714,"byte_end":149726,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149731,"byte_end":149734,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This function panics if the argument contains invalid metadata value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149739,"byte_end":149811,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ characters.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149816,"byte_end":149831,"line_start":55,"line_end":55,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149836,"byte_end":149839,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149844,"byte_end":149858,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149863,"byte_end":149866,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149871,"byte_end":149878,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149883,"byte_end":149912,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149917,"byte_end":149972,"line_start":61,"line_end":61,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val, \"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149977,"byte_end":150006,"line_start":62,"line_end":62,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150011,"byte_end":150018,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150023,"byte_end":150026,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150031,"byte_end":150038,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150043,"byte_end":150072,"line_start":66,"line_end":66,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_static(\"SGVsbG8hIQ==\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150077,"byte_end":150140,"line_start":67,"line_end":67,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(val, \"Hello!!\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150145,"byte_end":150176,"line_start":68,"line_end":68,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150181,"byte_end":150188,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150193,"byte_end":150202,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151372,"byte_end":151386,"line_start":106,"line_end":106,"column_start":12,"column_end":26},"name":"try_from_bytes","qualname":"<MetadataValue<VE>>::try_from_bytes","value":"pub fn try_from_bytes(&[u8]) -> Result<Self, InvalidMetadataValueBytes>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert a byte slice to a `MetadataValue`.","sig":null,"attributes":[{"value":"/ Attempt to convert a byte slice to a `MetadataValue`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150375,"byte_end":150432,"line_start":78,"line_end":78,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150437,"byte_end":150440,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ For Ascii metadata values, If the argument contains invalid metadata","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150445,"byte_end":150517,"line_start":80,"line_end":80,"column_start":5,"column_end":77}},{"value":"/ value bytes, an error is returned. Only byte values between 32 and 255","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150522,"byte_end":150596,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ (inclusive) are permitted, excluding byte 127 (DEL).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150601,"byte_end":150657,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150662,"byte_end":150665,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ For Binary metadata values this method cannot fail. See also the Binary","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150670,"byte_end":150745,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ only version of this method `from_bytes`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150750,"byte_end":150795,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150800,"byte_end":150803,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be replaced in the future by a `TryFrom`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150808,"byte_end":150881,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ implementation once the trait is stabilized in std.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150886,"byte_end":150941,"line_start":88,"line_end":88,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150946,"byte_end":150949,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150954,"byte_end":150968,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150973,"byte_end":150976,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150981,"byte_end":150988,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":150993,"byte_end":151022,"line_start":93,"line_end":93,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::try_from_bytes(b\"hello\\xfa\").unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151027,"byte_end":151099,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(val, &b\"hello\\xfa\"[..]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151104,"byte_end":151143,"line_start":95,"line_end":95,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151148,"byte_end":151155,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151160,"byte_end":151163,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ An invalid value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151168,"byte_end":151188,"line_start":98,"line_end":98,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151193,"byte_end":151196,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151201,"byte_end":151208,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151213,"byte_end":151242,"line_start":101,"line_end":101,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::try_from_bytes(b\"\\n\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151247,"byte_end":151303,"line_start":102,"line_end":102,"column_start":5,"column_end":61}},{"value":"/ assert!(val.is_err());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151308,"byte_end":151334,"line_start":103,"line_end":103,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151339,"byte_end":151346,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151351,"byte_end":151360,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152317,"byte_end":152328,"line_start":127,"line_end":127,"column_start":12,"column_end":23},"name":"from_shared","qualname":"<MetadataValue<VE>>::from_shared","value":"pub fn from_shared(Bytes) -> Result<Self, InvalidMetadataValueBytes>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert a `Bytes` buffer to a `MetadataValue`.","sig":null,"attributes":[{"value":"/ Attempt to convert a `Bytes` buffer to a `MetadataValue`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151582,"byte_end":151643,"line_start":113,"line_end":113,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151648,"byte_end":151651,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ For `MetadataValue<Ascii>`, if the argument contains invalid metadata","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151656,"byte_end":151729,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ value bytes, an error is returned. Only byte values between 32 and 255","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151734,"byte_end":151808,"line_start":116,"line_end":116,"column_start":5,"column_end":79}},{"value":"/ (inclusive) are permitted, excluding byte 127 (DEL).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151813,"byte_end":151869,"line_start":117,"line_end":117,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151874,"byte_end":151877,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ For `MetadataValue<Binary>`, if the argument is not valid base64, an","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151882,"byte_end":151954,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/ error is returned. In use cases where the input is not base64 encoded,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":151959,"byte_end":152033,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ use `from_bytes`; if the value has to be encoded it's not possible to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152038,"byte_end":152111,"line_start":121,"line_end":121,"column_start":5,"column_end":78}},{"value":"/ share the memory anyways.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152116,"byte_end":152145,"line_start":122,"line_end":122,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152150,"byte_end":152153,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be replaced in the future by a `TryFrom`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152158,"byte_end":152231,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ implementation once the trait is stabilized in std.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152236,"byte_end":152291,"line_start":125,"line_end":125,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152296,"byte_end":152305,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152890,"byte_end":152911,"line_start":143,"line_end":143,"column_start":19,"column_end":40},"name":"from_shared_unchecked","qualname":"<MetadataValue<VE>>::from_shared_unchecked","value":"pub unsafe fn from_shared_unchecked(Bytes) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Bytes` directly into a `MetadataValue` without validating.\n For MetadataValue<Binary> the provided parameter must be base64\n encoded without padding bytes at the end.","sig":null,"attributes":[{"value":"/ Convert a `Bytes` directly into a `MetadataValue` without validating.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152525,"byte_end":152598,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ For MetadataValue<Binary> the provided parameter must be base64","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152603,"byte_end":152670,"line_start":135,"line_end":135,"column_start":5,"column_end":72}},{"value":"/ encoded without padding bytes at the end.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152675,"byte_end":152720,"line_start":136,"line_end":136,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152725,"byte_end":152728,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152733,"byte_end":152745,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152750,"byte_end":152753,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This function does NOT validate that illegal bytes are not contained","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152758,"byte_end":152830,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ within the buffer.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152835,"byte_end":152857,"line_start":141,"line_end":141,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":152862,"byte_end":152871,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153455,"byte_end":153463,"line_start":163,"line_end":163,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MetadataValue<VE>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `MetadataValue` has a length of zero bytes.","sig":null,"attributes":[{"value":"/ Returns true if the `MetadataValue` has a length of zero bytes.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153079,"byte_end":153146,"line_start":150,"line_end":150,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153151,"byte_end":153154,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153159,"byte_end":153173,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153178,"byte_end":153181,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153186,"byte_end":153193,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153198,"byte_end":153227,"line_start":155,"line_end":155,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153232,"byte_end":153282,"line_start":156,"line_end":156,"column_start":5,"column_end":55}},{"value":"/ assert!(val.is_empty());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153287,"byte_end":153315,"line_start":157,"line_end":157,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153320,"byte_end":153323,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153328,"byte_end":153383,"line_start":159,"line_end":159,"column_start":5,"column_end":60}},{"value":"/ assert!(!val.is_empty());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153388,"byte_end":153417,"line_start":160,"line_end":160,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153422,"byte_end":153429,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153434,"byte_end":153443,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154133,"byte_end":154141,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<MetadataValue<VE>>::to_bytes","value":"pub fn to_bytes(&Self) -> Result<Bytes, InvalidMetadataValueBytes>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MetadataValue` to a Bytes buffer. This method cannot\n fail for Ascii values. For Ascii values, `as_bytes` is more convenient\n to use.","sig":null,"attributes":[{"value":"/ Converts a `MetadataValue` to a Bytes buffer. This method cannot","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153536,"byte_end":153604,"line_start":167,"line_end":167,"column_start":5,"column_end":73}},{"value":"/ fail for Ascii values. For Ascii values, `as_bytes` is more convenient","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153609,"byte_end":153683,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ to use.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153688,"byte_end":153699,"line_start":169,"line_end":169,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153704,"byte_end":153707,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153712,"byte_end":153726,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153731,"byte_end":153734,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153739,"byte_end":153746,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153751,"byte_end":153780,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153785,"byte_end":153840,"line_start":175,"line_end":175,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.to_bytes().unwrap().as_ref(), b\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153845,"byte_end":153904,"line_start":176,"line_end":176,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153909,"byte_end":153916,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153921,"byte_end":153924,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153929,"byte_end":153936,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153941,"byte_end":153970,"line_start":180,"line_end":180,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_bytes(b\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":153975,"byte_end":154031,"line_start":181,"line_end":181,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(val.to_bytes().unwrap().as_ref(), b\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154036,"byte_end":154095,"line_start":182,"line_end":182,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154100,"byte_end":154107,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154112,"byte_end":154121,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154659,"byte_end":154672,"line_start":204,"line_end":204,"column_start":12,"column_end":25},"name":"set_sensitive","qualname":"<MetadataValue<VE>>::set_sensitive","value":"pub fn set_sensitive(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Mark that the metadata value represents sensitive information.","sig":null,"attributes":[{"value":"/ Mark that the metadata value represents sensitive information.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154248,"byte_end":154314,"line_start":189,"line_end":189,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154319,"byte_end":154322,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154327,"byte_end":154341,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154346,"byte_end":154349,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154354,"byte_end":154361,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154366,"byte_end":154395,"line_start":194,"line_end":194,"column_start":5,"column_end":34}},{"value":"/ let mut val = AsciiMetadataValue::from_static(\"my secret\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154400,"byte_end":154463,"line_start":195,"line_end":195,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154468,"byte_end":154471,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(true);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154476,"byte_end":154504,"line_start":197,"line_end":197,"column_start":5,"column_end":33}},{"value":"/ assert!(val.is_sensitive());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154509,"byte_end":154541,"line_start":198,"line_end":198,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154546,"byte_end":154549,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(false);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154554,"byte_end":154583,"line_start":200,"line_end":200,"column_start":5,"column_end":34}},{"value":"/ assert!(!val.is_sensitive());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154588,"byte_end":154621,"line_start":201,"line_end":201,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154626,"byte_end":154633,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154638,"byte_end":154647,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155545,"byte_end":155557,"line_start":230,"line_end":230,"column_start":12,"column_end":24},"name":"is_sensitive","qualname":"<MetadataValue<VE>>::is_sensitive","value":"pub fn is_sensitive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value represents sensitive data.","sig":null,"attributes":[{"value":"/ Returns `true` if the value represents sensitive data.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154747,"byte_end":154805,"line_start":208,"line_end":208,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154810,"byte_end":154813,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Sensitive data could represent passwords or other data that should not","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154818,"byte_end":154892,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ be stored on disk or in memory. This setting can be used by components","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154897,"byte_end":154971,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ like caches to avoid storing the value. HPACK encoders must set the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":154976,"byte_end":155047,"line_start":212,"line_end":212,"column_start":5,"column_end":76}},{"value":"/ metadata field to never index when `is_sensitive` returns true.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155052,"byte_end":155119,"line_start":213,"line_end":213,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155124,"byte_end":155127,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that sensitivity is not factored into equality or ordering.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155132,"byte_end":155200,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155205,"byte_end":155208,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155213,"byte_end":155227,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155232,"byte_end":155235,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155240,"byte_end":155247,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155252,"byte_end":155281,"line_start":220,"line_end":220,"column_start":5,"column_end":34}},{"value":"/ let mut val = AsciiMetadataValue::from_static(\"my secret\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155286,"byte_end":155349,"line_start":221,"line_end":221,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155354,"byte_end":155357,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(true);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155362,"byte_end":155390,"line_start":223,"line_end":223,"column_start":5,"column_end":33}},{"value":"/ assert!(val.is_sensitive());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155395,"byte_end":155427,"line_start":224,"line_end":224,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155432,"byte_end":155435,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(false);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155440,"byte_end":155469,"line_start":226,"line_end":226,"column_start":5,"column_end":34}},{"value":"/ assert!(!val.is_sensitive());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155474,"byte_end":155507,"line_start":227,"line_end":227,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155512,"byte_end":155519,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155524,"byte_end":155533,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":156148,"byte_end":156164,"line_start":251,"line_end":251,"column_start":12,"column_end":28},"name":"as_encoded_bytes","qualname":"<MetadataValue<VE>>::as_encoded_bytes","value":"pub fn as_encoded_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MetadataValue` to a byte slice. For Binary values, the\n return value is base64 encoded.","sig":null,"attributes":[{"value":"/ Converts a `MetadataValue` to a byte slice. For Binary values, the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155620,"byte_end":155690,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/ return value is base64 encoded.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155695,"byte_end":155730,"line_start":235,"line_end":235,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155735,"byte_end":155738,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155743,"byte_end":155757,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155762,"byte_end":155765,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155770,"byte_end":155777,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155782,"byte_end":155811,"line_start":240,"line_end":240,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155816,"byte_end":155871,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.as_encoded_bytes(), b\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155876,"byte_end":155925,"line_start":242,"line_end":242,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155930,"byte_end":155937,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155942,"byte_end":155945,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155950,"byte_end":155957,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155962,"byte_end":155991,"line_start":246,"line_end":246,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_bytes(b\"Hello!\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":155996,"byte_end":156053,"line_start":247,"line_end":247,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(val.as_encoded_bytes(), b\"SGVsbG8h\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":156058,"byte_end":156110,"line_start":248,"line_end":248,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":156115,"byte_end":156122,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":156127,"byte_end":156136,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158397,"byte_end":158405,"line_start":313,"line_end":313,"column_start":12,"column_end":20},"name":"from_str","qualname":"<MetadataValue<Ascii>>::from_str","value":"pub fn from_str(&str) -> Result<Self, InvalidMetadataValue>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert a string to a `MetadataValue<Ascii>`.","sig":null,"attributes":[{"value":"/ Attempt to convert a string to a `MetadataValue<Ascii>`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":157483,"byte_end":157543,"line_start":286,"line_end":286,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":157548,"byte_end":157551,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ If the argument contains invalid metadata value characters, an error is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":157556,"byte_end":157631,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ returned. Only visible ASCII characters (32-127) are permitted. Use","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":157636,"byte_end":157707,"line_start":289,"line_end":289,"column_start":5,"column_end":76}},{"value":"/ `from_bytes` to create a `MetadataValue` that includes opaque octets","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":157712,"byte_end":157784,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ (128-255).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":157789,"byte_end":157803,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":157808,"byte_end":157811,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be replaced in the future by a `TryFrom`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":157816,"byte_end":157889,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ implementation once the trait is stabilized in std.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":157894,"byte_end":157949,"line_start":294,"line_end":294,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":157954,"byte_end":157957,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":157962,"byte_end":157976,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":157981,"byte_end":157984,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":157989,"byte_end":157996,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158001,"byte_end":158030,"line_start":299,"line_end":299,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_str(\"hello\").unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158035,"byte_end":158096,"line_start":300,"line_end":300,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(val, \"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158101,"byte_end":158130,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158135,"byte_end":158142,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158147,"byte_end":158150,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ An invalid value","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158155,"byte_end":158175,"line_start":304,"line_end":304,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158180,"byte_end":158183,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158188,"byte_end":158195,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158200,"byte_end":158229,"line_start":307,"line_end":307,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_str(\"\\n\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158234,"byte_end":158283,"line_start":308,"line_end":308,"column_start":5,"column_end":54}},{"value":"/ assert!(val.is_err());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158288,"byte_end":158314,"line_start":309,"line_end":309,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158319,"byte_end":158326,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158331,"byte_end":158371,"line_start":311,"line_end":311,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158376,"byte_end":158385,"line_start":312,"line_end":312,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159124,"byte_end":159132,"line_start":335,"line_end":335,"column_start":12,"column_end":20},"name":"from_key","qualname":"<MetadataValue<Ascii>>::from_key","value":"pub fn from_key<KeyVE: ValueEncoding>(MetadataKey<KeyVE>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a MetadataKey into a MetadataValue<Ascii>.","sig":null,"attributes":[{"value":"/ Converts a MetadataKey into a MetadataValue<Ascii>.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158681,"byte_end":158736,"line_start":322,"line_end":322,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158741,"byte_end":158744,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Since every valid MetadataKey is a valid MetadataValue this is done","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158749,"byte_end":158820,"line_start":324,"line_end":324,"column_start":5,"column_end":76}},{"value":"/ infallibly.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158825,"byte_end":158840,"line_start":325,"line_end":325,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158845,"byte_end":158848,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158853,"byte_end":158867,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158872,"byte_end":158875,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158880,"byte_end":158887,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158892,"byte_end":158921,"line_start":330,"line_end":330,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_key::<Ascii>(\"accept\".parse().unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":158926,"byte_end":159005,"line_start":331,"line_end":331,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(val, AsciiMetadataValue::try_from_bytes(b\"accept\").unwrap());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159010,"byte_end":159086,"line_start":332,"line_end":332,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159091,"byte_end":159098,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159103,"byte_end":159112,"line_start":334,"line_end":334,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159761,"byte_end":159764,"line_start":354,"line_end":354,"column_start":12,"column_end":15},"name":"len","qualname":"<MetadataValue<Ascii>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of `self`, in bytes.","sig":null,"attributes":[{"value":"/ Returns the length of `self`, in bytes.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159220,"byte_end":159263,"line_start":339,"line_end":339,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159268,"byte_end":159271,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ This method is not available for MetadataValue<Binary> because that","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159276,"byte_end":159347,"line_start":341,"line_end":341,"column_start":5,"column_end":76}},{"value":"/ cannot be implemented in constant time, which most people would probably","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159352,"byte_end":159428,"line_start":342,"line_end":342,"column_start":5,"column_end":81}},{"value":"/ expect. To get the length of MetadataValue<Binary>, convert it to a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159433,"byte_end":159504,"line_start":343,"line_end":343,"column_start":5,"column_end":76}},{"value":"/ Bytes value and measure its length.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159509,"byte_end":159548,"line_start":344,"line_end":344,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159553,"byte_end":159556,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159561,"byte_end":159575,"line_start":346,"line_end":346,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159580,"byte_end":159583,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159588,"byte_end":159595,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159600,"byte_end":159629,"line_start":349,"line_end":349,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159634,"byte_end":159689,"line_start":350,"line_end":350,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.len(), 5);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159694,"byte_end":159723,"line_start":351,"line_end":351,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159728,"byte_end":159735,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159740,"byte_end":159749,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160237,"byte_end":160243,"line_start":371,"line_end":371,"column_start":12,"column_end":18},"name":"to_str","qualname":"<MetadataValue<Ascii>>::to_str","value":"pub fn to_str(&Self) -> Result<&str, ToStrError>","parent":null,"children":[],"decl_id":null,"docs":" Yields a `&str` slice if the `MetadataValue` only contains visible ASCII\n chars.","sig":null,"attributes":[{"value":"/ Yields a `&str` slice if the `MetadataValue` only contains visible ASCII","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159819,"byte_end":159895,"line_start":358,"line_end":358,"column_start":5,"column_end":81}},{"value":"/ chars.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159900,"byte_end":159910,"line_start":359,"line_end":359,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159915,"byte_end":159918,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will perform a scan of the metadata value, checking all the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":159923,"byte_end":160000,"line_start":361,"line_end":361,"column_start":5,"column_end":82}},{"value":"/ characters.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160005,"byte_end":160020,"line_start":362,"line_end":362,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160025,"byte_end":160028,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160033,"byte_end":160047,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160052,"byte_end":160055,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160060,"byte_end":160067,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160072,"byte_end":160101,"line_start":367,"line_end":367,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160106,"byte_end":160161,"line_start":368,"line_end":368,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.to_str().unwrap(), \"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160166,"byte_end":160213,"line_start":369,"line_end":369,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160218,"byte_end":160225,"line_start":370,"line_end":370,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160666,"byte_end":160674,"line_start":386,"line_end":386,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<MetadataValue<Ascii>>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MetadataValue` to a byte slice. For Binary values, use\n `to_bytes`.","sig":null,"attributes":[{"value":"/ Converts a `MetadataValue` to a byte slice. For Binary values, use","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160351,"byte_end":160421,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/ `to_bytes`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160426,"byte_end":160441,"line_start":376,"line_end":376,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160446,"byte_end":160449,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160454,"byte_end":160468,"line_start":378,"line_end":378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160473,"byte_end":160476,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160481,"byte_end":160488,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160493,"byte_end":160522,"line_start":381,"line_end":381,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160527,"byte_end":160582,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.as_bytes(), b\"hello\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160587,"byte_end":160628,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160633,"byte_end":160640,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160645,"byte_end":160654,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":161047,"byte_end":161057,"line_start":402,"line_end":402,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<MetadataValue<Binary>>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a byte slice to a `MetadataValue<Binary>`.","sig":null,"attributes":[{"value":"/ Convert a byte slice to a `MetadataValue<Binary>`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160765,"byte_end":160819,"line_start":392,"line_end":392,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160824,"byte_end":160827,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160832,"byte_end":160846,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160851,"byte_end":160854,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160859,"byte_end":160866,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160871,"byte_end":160900,"line_start":397,"line_end":397,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_bytes(b\"hello\\xfa\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160905,"byte_end":160965,"line_start":398,"line_end":398,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(val, &b\"hello\\xfa\"[..]);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160970,"byte_end":161009,"line_start":399,"line_end":399,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":161014,"byte_end":161021,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":161026,"byte_end":161035,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45698,"byte_end":45704,"line_start":34,"line_end":34,"column_start":9,"column_end":15},"name":"errors","qualname":"::metadata::errors","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1425},{"krate":0,"index":1428}],"decl_id":null,"docs":" The metadata::errors module contains types for errors that can occur\n while handling gRPC custom metadata.\n","sig":null,"attributes":[{"value":"/ The metadata::errors module contains types for errors that can occur","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45576,"byte_end":45648,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ while handling gRPC custom metadata.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/mod.rs","byte_start":45649,"byte_end":45689,"line_start":33,"line_end":33,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/mod.rs","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":1540},{"krate":0,"index":1617},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":1630}],"decl_id":null,"docs":" Generic server implementation.","sig":null,"attributes":[{"value":"/ Generic server implementation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/mod.rs","byte_start":174707,"byte_end":174741,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/mod.rs","byte_start":174742,"byte_end":174745,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the low level components to build a gRPC server. It","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/mod.rs","byte_start":174746,"byte_end":174822,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ provides a codec agnostic gRPC server handler.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/mod.rs","byte_start":174823,"byte_end":174873,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/mod.rs","byte_start":174874,"byte_end":174877,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The items in this module are generally designed to be used by some codegen","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/mod.rs","byte_start":174878,"byte_end":174956,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ tool that will provide the user some custom way to implement the server that","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/mod.rs","byte_start":174957,"byte_end":175037,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ will implement the proper gRPC service. Thusly, they are a bit hard to use","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/mod.rs","byte_start":175038,"byte_end":175116,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ by hand.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/mod.rs","byte_start":175117,"byte_end":175129,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1492},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":176243,"byte_end":176247,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Grpc","qualname":"::server::grpc::Grpc","value":"Grpc {  }","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1495}],"decl_id":null,"docs":" A gRPC Server handler.","sig":null,"attributes":[{"value":"/ A gRPC Server handler.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":175843,"byte_end":175869,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":175870,"byte_end":175873,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This will wrap some inner [`Codec`] and provide utilities to handle","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":175874,"byte_end":175945,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ inbound unary, client side streaming, server side streaming, and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":175946,"byte_end":176014,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ bi-directional streaming.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":176015,"byte_end":176044,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":176045,"byte_end":176048,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Each request handler method accepts some service that implements the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":176049,"byte_end":176121,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ corresponding service trait and a http request that contains some body that","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":176122,"byte_end":176201,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ implements some [`Body`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":176202,"byte_end":176231,"line_start":31,"line_end":31,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":176441,"byte_end":176444,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Grpc<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new gRPC server with the provided [`Codec`].\n","sig":null,"attributes":[{"value":"/ Creates a new gRPC server with the provided [`Codec`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":176371,"byte_end":176429,"line_start":42,"line_end":42,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":176693,"byte_end":176709,"line_start":52,"line_end":52,"column_start":12,"column_end":28},"name":"with_interceptor","qualname":"<Grpc<T>>::with_interceptor","value":"pub fn with_interceptor<impl Into<Interceptor>: Into<Interceptor>>(T,\n                                                                   impl Into<Interceptor>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new gRPC server with the provided [`Codec`] and will apply the provided\n interceptor on each inbound request.\n","sig":null,"attributes":[{"value":"/ Creates a new gRPC server with the provided [`Codec`] and will apply the provided","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":176551,"byte_end":176636,"line_start":50,"line_end":50,"column_start":5,"column_end":90}},{"value":"/ interceptor on each inbound request.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":176641,"byte_end":176681,"line_start":51,"line_end":51,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":176930,"byte_end":176935,"line_start":60,"line_end":60,"column_start":18,"column_end":23},"name":"unary","qualname":"<Grpc<T>>::unary","value":"pub async fn unary<S, B, '_>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: UnaryService<T::Decode, Response = T::Encode>,\nB: Body + Send + Sync + 'static, B::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Handle a single unary gRPC request.\n","sig":null,"attributes":[{"value":"/ Handle a single unary gRPC request.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":176873,"byte_end":176912,"line_start":59,"line_end":59,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":177842,"byte_end":177858,"line_start":91,"line_end":91,"column_start":18,"column_end":34},"name":"server_streaming","qualname":"<Grpc<T>>::server_streaming","value":"pub async fn server_streaming<S, B, '_>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: ServerStreamingService<T::Decode, Response =\nT::Encode>, S::ResponseStream: Send + Sync + 'static, B: Body + Send + Sync +\n'static, B::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Handle a server side streaming request.\n","sig":null,"attributes":[{"value":"/ Handle a server side streaming request.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":177781,"byte_end":177824,"line_start":90,"line_end":90,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":178638,"byte_end":178654,"line_start":117,"line_end":117,"column_start":18,"column_end":34},"name":"client_streaming","qualname":"<Grpc<T>>::client_streaming","value":"pub async fn client_streaming<S, B, '_>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: ClientStreamingService<T::Decode, Response =\nT::Encode>, B: Body + Send + Sync + 'static, B::Error: Into<crate::Error> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Handle a client side streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Handle a client side streaming gRPC request.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":178572,"byte_end":178620,"line_start":116,"line_end":116,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":179318,"byte_end":179327,"line_start":137,"line_end":137,"column_start":18,"column_end":27},"name":"streaming","qualname":"<Grpc<T>>::streaming","value":"pub async fn streaming<S, B, '_>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: StreamingService<T::Decode, Response = T::Encode> +\nSend, S::ResponseStream: Send + Sync + 'static, B: Body + Send + Sync +\n'static, B::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Handle a bi-directional streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Handle a bi-directional streaming gRPC request.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":179249,"byte_end":179300,"line_start":136,"line_end":136,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":1563},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":182629,"byte_end":182641,"line_start":10,"line_end":10,"column_start":11,"column_end":23},"name":"UnaryService","qualname":"::server::service::UnaryService","value":"UnaryService<R>","parent":null,"children":[{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":182444,"byte_end":182491,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":182492,"byte_end":182495,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":182496,"byte_end":182574,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ automatically implement `UnaryService`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":182575,"byte_end":182618,"line_start":9,"line_end":9,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1565},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":182695,"byte_end":182703,"line_start":12,"line_end":12,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::UnaryService::Response","value":"type Response;","parent":{"krate":0,"index":1563},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":182651,"byte_end":182685,"line_start":11,"line_end":11,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1566},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":182739,"byte_end":182745,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::UnaryService::Future","value":"type Future: Future<Output = Result<Response<Self::Response>, Status>>;","parent":{"krate":0,"index":1563},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":182710,"byte_end":182729,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":182839,"byte_end":182843,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::UnaryService::call","value":"pub fn call(&mut Self, Request<R>) -> Self::Future","parent":{"krate":0,"index":1563},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":182811,"byte_end":182831,"line_start":17,"line_end":17,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":183378,"byte_end":183400,"line_start":37,"line_end":37,"column_start":11,"column_end":33},"name":"ServerStreamingService","qualname":"::server::service::ServerStreamingService","value":"ServerStreamingService<R>","parent":null,"children":[{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":183183,"byte_end":183230,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":183231,"byte_end":183234,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":183235,"byte_end":183313,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ automatically implement `ServerStreamingService`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":183314,"byte_end":183367,"line_start":36,"line_end":36,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":183454,"byte_end":183462,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::ServerStreamingService::Response","value":"type Response;","parent":{"krate":0,"index":1575},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":183410,"byte_end":183444,"line_start":38,"line_end":38,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":183519,"byte_end":183533,"line_start":42,"line_end":42,"column_start":10,"column_end":24},"name":"ResponseStream","qualname":"::server::service::ServerStreamingService::ResponseStream","value":"type ResponseStream: Stream<Item = Result<Self::Response, Status>>;","parent":{"krate":0,"index":1575},"children":[],"decl_id":null,"docs":" Stream of outbound response messages\n","sig":null,"attributes":[{"value":"/ Stream of outbound response messages","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":183469,"byte_end":183509,"line_start":41,"line_end":41,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":183616,"byte_end":183622,"line_start":45,"line_end":45,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::ServerStreamingService::Future","value":"type Future: Future<Output = Result<Response<Self::ResponseStream>, Status>>;","parent":{"krate":0,"index":1575},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":183587,"byte_end":183606,"line_start":44,"line_end":44,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":183722,"byte_end":183726,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::ServerStreamingService::call","value":"pub fn call(&mut Self, Request<R>) -> Self::Future","parent":{"krate":0,"index":1575},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":183694,"byte_end":183714,"line_start":47,"line_end":47,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1590},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":184351,"byte_end":184373,"line_start":69,"line_end":69,"column_start":11,"column_end":33},"name":"ClientStreamingService","qualname":"::server::service::ClientStreamingService","value":"ClientStreamingService<R>","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":184156,"byte_end":184203,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":184204,"byte_end":184207,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":184208,"byte_end":184286,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ automatically implement `ClientStreamingService`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":184287,"byte_end":184340,"line_start":68,"line_end":68,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1592},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":184427,"byte_end":184435,"line_start":71,"line_end":71,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::ClientStreamingService::Response","value":"type Response;","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":184383,"byte_end":184417,"line_start":70,"line_end":70,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1593},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":184471,"byte_end":184477,"line_start":74,"line_end":74,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::ClientStreamingService::Future","value":"type Future: Future<Output = Result<Response<Self::Response>, Status>>;","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":184442,"byte_end":184461,"line_start":73,"line_end":73,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":184571,"byte_end":184575,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::ClientStreamingService::call","value":"pub fn call(&mut Self, Request<Streaming<R>>) -> Self::Future","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":184543,"byte_end":184563,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1602},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":185147,"byte_end":185163,"line_start":96,"line_end":96,"column_start":11,"column_end":27},"name":"StreamingService","qualname":"::server::service::StreamingService","value":"StreamingService<R>","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":184958,"byte_end":185005,"line_start":92,"line_end":92,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":185006,"byte_end":185009,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":185010,"byte_end":185088,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/ automatically implement `StreamingService`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":185089,"byte_end":185136,"line_start":95,"line_end":95,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1604},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":185217,"byte_end":185225,"line_start":98,"line_end":98,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::StreamingService::Response","value":"type Response;","parent":{"krate":0,"index":1602},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":185173,"byte_end":185207,"line_start":97,"line_end":97,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1605},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":185282,"byte_end":185296,"line_start":101,"line_end":101,"column_start":10,"column_end":24},"name":"ResponseStream","qualname":"::server::service::StreamingService::ResponseStream","value":"type ResponseStream: Stream<Item = Result<Self::Response, Status>>;","parent":{"krate":0,"index":1602},"children":[],"decl_id":null,"docs":" Stream of outbound response messages\n","sig":null,"attributes":[{"value":"/ Stream of outbound response messages","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":185232,"byte_end":185272,"line_start":100,"line_end":100,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":185379,"byte_end":185385,"line_start":104,"line_end":104,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::StreamingService::Future","value":"type Future: Future<Output = Result<Response<Self::ResponseStream>, Status>>;","parent":{"krate":0,"index":1602},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":185350,"byte_end":185369,"line_start":103,"line_end":103,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":185485,"byte_end":185489,"line_start":107,"line_end":107,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::StreamingService::call","value":"pub fn call(&mut Self, Request<Streaming<R>>) -> Self::Future","parent":{"krate":0,"index":1602},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":185457,"byte_end":185477,"line_start":106,"line_end":106,"column_start":5,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":1633},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"transport","qualname":"::transport","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1899},{"krate":0,"index":2291},{"krate":0,"index":2321},{"krate":0,"index":3007},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3024},{"krate":0,"index":3027},{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3034},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3041},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3048},{"krate":0,"index":3051},{"krate":0,"index":3054},{"krate":0,"index":3057}],"decl_id":null,"docs":" Batteries included server and client.","sig":null,"attributes":[{"value":"cfg(feature = \"transport\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":3493,"byte_end":3522,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ Batteries included server and client.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":185946,"byte_end":185987,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":185988,"byte_end":185991,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a set of batteries included, fully featured and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":185992,"byte_end":186064,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ fast set of HTTP/2 server and client's. These components each provide a or","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186065,"byte_end":186143,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ `rustls` tls backend when the respective feature flag is enabled, and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186144,"byte_end":186217,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ provides builders to configure transport behavior.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186218,"byte_end":186272,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186273,"byte_end":186276,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186277,"byte_end":186291,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186292,"byte_end":186295,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ - TLS support via [rustls].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186296,"byte_end":186327,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/ - Load balancing","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186328,"byte_end":186348,"line_start":11,"line_end":11,"column_start":1,"column_end":21}},{"value":"/ - Timeouts","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186349,"byte_end":186363,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/ - Concurrency Limits","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186364,"byte_end":186388,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/ - Rate limiting","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186389,"byte_end":186408,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186409,"byte_end":186412,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186413,"byte_end":186427,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186428,"byte_end":186431,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Client","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186432,"byte_end":186445,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186446,"byte_end":186449,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186450,"byte_end":186463,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/ # use tonic::transport::{Channel, Certificate, ClientTlsConfig};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186464,"byte_end":186532,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186533,"byte_end":186563,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ # use tonic::body::BoxBody;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186564,"byte_end":186595,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/ # use tonic::client::GrpcService;;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186596,"byte_end":186634,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/ # use http::Request;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186635,"byte_end":186659,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/ # #[cfg(feature = \"rustls\")]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186660,"byte_end":186692,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ # async fn do_thing() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186693,"byte_end":186762,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ let cert = std::fs::read_to_string(\"ca.pem\")?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186763,"byte_end":186813,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186814,"byte_end":186817,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let mut channel = Channel::from_static(\"https://example.com\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186818,"byte_end":186883,"line_start":30,"line_end":30,"column_start":1,"column_end":66}},{"value":"/     .tls_config(ClientTlsConfig::new()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186884,"byte_end":186926,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/         .ca_certificate(Certificate::from_pem(&cert))","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186927,"byte_end":186984,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/         .domain_name(\"example.com\".to_string()))?","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":186985,"byte_end":187038,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/     .timeout(Duration::from_secs(5))","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187039,"byte_end":187079,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/     .rate_limit(5, Duration::from_secs(1))","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187080,"byte_end":187126,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/     .concurrency_limit(256)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187127,"byte_end":187158,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"/     .connect()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187159,"byte_end":187177,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/     .await?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187178,"byte_end":187194,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187195,"byte_end":187198,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ channel.call(Request::new(BoxBody::empty())).await?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187199,"byte_end":187255,"line_start":40,"line_end":40,"column_start":1,"column_end":57}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187256,"byte_end":187268,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187269,"byte_end":187276,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187277,"byte_end":187284,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187285,"byte_end":187288,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Server","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187289,"byte_end":187302,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187303,"byte_end":187306,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187307,"byte_end":187320,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/ # use tonic::transport::{Server, Identity, ServerTlsConfig};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187321,"byte_end":187385,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/ # use tower::{Service, service_fn};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187386,"byte_end":187425,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ # use futures_util::future::{err, ok};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187426,"byte_end":187468,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ # #[cfg(feature = \"rustls\")]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187469,"byte_end":187501,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/ # async fn do_thing() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187502,"byte_end":187571,"line_start":52,"line_end":52,"column_start":1,"column_end":70}},{"value":"/ # #[derive(Clone)]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187572,"byte_end":187594,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ # pub struct Svc;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187595,"byte_end":187616,"line_start":54,"line_end":54,"column_start":1,"column_end":22}},{"value":"/ # impl Service<hyper::Request<hyper::Body>> for Svc {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187617,"byte_end":187674,"line_start":55,"line_end":55,"column_start":1,"column_end":58}},{"value":"/ #   type Response = hyper::Response<tonic::body::BoxBody>;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187675,"byte_end":187737,"line_start":56,"line_end":56,"column_start":1,"column_end":63}},{"value":"/ #   type Error = tonic::Status;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187738,"byte_end":187773,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Self::Response, Self::Error>>;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187774,"byte_end":187861,"line_start":58,"line_end":58,"column_start":1,"column_end":88}},{"value":"/ #   fn poll_ready(&mut self, _cx: &mut std::task::Context<'_>) -> std::task::Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187862,"byte_end":187974,"line_start":59,"line_end":59,"column_start":1,"column_end":113}},{"value":"/ #       Ok(()).into()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":187975,"byte_end":188000,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/ #  }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188001,"byte_end":188009,"line_start":61,"line_end":61,"column_start":1,"column_end":9}},{"value":"/ #   fn call(&mut self, _req: hyper::Request<hyper::Body>) -> Self::Future {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188010,"byte_end":188089,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ #       unimplemented!()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188090,"byte_end":188118,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/ #   }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188119,"byte_end":188128,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188129,"byte_end":188136,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # impl tonic::transport::NamedService for Svc {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188137,"byte_end":188188,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/ # const NAME: &'static str = \"some_svc\";","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188189,"byte_end":188233,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188234,"byte_end":188241,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ # let my_svc = Svc;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188242,"byte_end":188265,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/ let cert = std::fs::read_to_string(\"server.pem\")?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188266,"byte_end":188320,"line_start":70,"line_end":70,"column_start":1,"column_end":55}},{"value":"/ let key = std::fs::read_to_string(\"server.key\")?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188321,"byte_end":188374,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188375,"byte_end":188378,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let addr = \"[::1]:50051\".parse()?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188379,"byte_end":188417,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188418,"byte_end":188421,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Server::builder()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188422,"byte_end":188443,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"/     .tls_config(ServerTlsConfig::new()","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188444,"byte_end":188486,"line_start":76,"line_end":76,"column_start":1,"column_end":43}},{"value":"/         .identity(Identity::from_pem(&cert, &key)))?","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188487,"byte_end":188543,"line_start":77,"line_end":77,"column_start":1,"column_end":57}},{"value":"/     .concurrency_limit_per_connection(256)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188544,"byte_end":188590,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/     .add_service(my_svc)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188591,"byte_end":188619,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/     .serve(addr)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188620,"byte_end":188640,"line_start":80,"line_end":80,"column_start":1,"column_end":21}},{"value":"/     .await?;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188641,"byte_end":188657,"line_start":81,"line_end":81,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188658,"byte_end":188661,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188662,"byte_end":188674,"line_start":83,"line_end":83,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188675,"byte_end":188682,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188683,"byte_end":188690,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188691,"byte_end":188694,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [rustls]: https://docs.rs/rustls/0.16.0/rustls/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188695,"byte_end":188746,"line_start":87,"line_end":87,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::transport::channel","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1734},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1775},{"krate":0,"index":1778},{"krate":0,"index":1781},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1789},{"krate":0,"index":1792},{"krate":0,"index":1795},{"krate":0,"index":1798},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1805},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1811},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1818},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1826},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1851},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1858},{"krate":0,"index":1861},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":3950},{"krate":0,"index":3952},{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1886},{"krate":0,"index":1892},{"krate":0,"index":1895},{"krate":0,"index":1897}],"decl_id":null,"docs":" Client implementation and builder.\n","sig":null,"attributes":[{"value":"/ Client implementation and builder.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":189372,"byte_end":189410,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3924},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":196860,"byte_end":196868,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"Endpoint","qualname":"::transport::channel::endpoint::Endpoint","value":"Endpoint {  }","parent":null,"children":[{"krate":0,"index":3925},{"krate":0,"index":3926},{"krate":0,"index":3927},{"krate":0,"index":3928},{"krate":0,"index":3929},{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3932},{"krate":0,"index":3933},{"krate":0,"index":3934},{"krate":0,"index":3935},{"krate":0,"index":3936},{"krate":0,"index":3937},{"krate":0,"index":3938}],"decl_id":null,"docs":" Channel builder.","sig":null,"attributes":[{"value":"/ Channel builder.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":196743,"byte_end":196763,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":196764,"byte_end":196767,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This struct is used to build and configure HTTP/2 channels.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":196768,"byte_end":196831,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":197735,"byte_end":197738,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<Endpoint>::new","value":"pub fn new<D>(D) -> Result<Self, Error> where D: TryInto<Self>,\nD::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198239,"byte_end":198250,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"from_static","qualname":"<Endpoint>::from_static","value":"pub fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an `Endpoint` from a static string.","sig":null,"attributes":[{"value":"/ Convert an `Endpoint` from a static string.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":197955,"byte_end":198002,"line_start":56,"line_end":56,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198007,"byte_end":198010,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198015,"byte_end":198027,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198032,"byte_end":198035,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if the argument is an invalid URI.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198040,"byte_end":198099,"line_start":60,"line_end":60,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198104,"byte_end":198107,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198112,"byte_end":198119,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198124,"byte_end":198161,"line_start":63,"line_end":63,"column_start":5,"column_end":42}},{"value":"/ Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198166,"byte_end":198215,"line_start":64,"line_end":64,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198220,"byte_end":198227,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198548,"byte_end":198559,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"from_shared","qualname":"<Endpoint>::from_shared","value":"pub fn from_shared<impl Into<Bytes>: Into<Bytes>>(impl Into<Bytes>)\n-> Result<Self, InvalidUri>","parent":null,"children":[],"decl_id":null,"docs":" Convert an `Endpoint` from shared bytes.","sig":null,"attributes":[{"value":"/ Convert an `Endpoint` from shared bytes.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198352,"byte_end":198396,"line_start":71,"line_end":71,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198401,"byte_end":198404,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198409,"byte_end":198416,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198421,"byte_end":198458,"line_start":74,"line_end":74,"column_start":5,"column_end":42}},{"value":"/ Endpoint::from_shared(\"https://example.com\".to_string());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198463,"byte_end":198524,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198529,"byte_end":198536,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":199251,"byte_end":199261,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"user_agent","qualname":"<Endpoint>::user_agent","value":"pub fn user_agent<T>(Self, T) -> Result<Self, Error> where\nT: TryInto<HeaderValue>","parent":null,"children":[],"decl_id":null,"docs":" Set a custom user-agent header.","sig":null,"attributes":[{"value":"/ Set a custom user-agent header.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198703,"byte_end":198738,"line_start":82,"line_end":82,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198743,"byte_end":198746,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ `user_agent` will be prepended to Tonic's default user-agent string (`tonic/x.x.x`).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198751,"byte_end":198839,"line_start":84,"line_end":84,"column_start":5,"column_end":93}},{"value":"/ It must be a value that can be converted into a valid  `http::HeaderValue` or building","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198844,"byte_end":198934,"line_start":85,"line_end":85,"column_start":5,"column_end":95}},{"value":"/ the endpoint will fail.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198939,"byte_end":198966,"line_start":86,"line_end":86,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198971,"byte_end":198978,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":198983,"byte_end":199020,"line_start":88,"line_end":88,"column_start":5,"column_end":42}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":199025,"byte_end":199094,"line_start":89,"line_end":89,"column_start":5,"column_end":74}},{"value":"/ builder.user_agent(\"Greeter\").expect(\"Greeter should be a valid header value\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":199099,"byte_end":199182,"line_start":90,"line_end":90,"column_start":5,"column_end":88}},{"value":"/ // user-agent: \"Greeter tonic/x.x.x\"","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":199187,"byte_end":199227,"line_start":91,"line_end":91,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":199232,"byte_end":199239,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":199859,"byte_end":199866,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Endpoint>::timeout","value":"pub fn timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a timeout to each request.","sig":null,"attributes":[{"value":"/ Apply a timeout to each request.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":199579,"byte_end":199615,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":199620,"byte_end":199623,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":199628,"byte_end":199635,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":199640,"byte_end":199677,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":199682,"byte_end":199712,"line_start":110,"line_end":110,"column_start":5,"column_end":35}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":199717,"byte_end":199786,"line_start":111,"line_end":111,"column_start":5,"column_end":74}},{"value":"/ builder.timeout(Duration::from_secs(5));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":199791,"byte_end":199835,"line_start":112,"line_end":112,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":199840,"byte_end":199847,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200314,"byte_end":200327,"line_start":129,"line_end":129,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<Endpoint>::tcp_keepalive","value":"pub fn tcp_keepalive(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether TCP keepalive messages are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether TCP keepalive messages are enabled on accepted connections.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":199989,"byte_end":200064,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200069,"byte_end":200072,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, keepalive is disabled, otherwise the duration","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200077,"byte_end":200150,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/ specified will be the time to remain idle before sending TCP keepalive","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200155,"byte_end":200229,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/ probes.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200234,"byte_end":200245,"line_start":125,"line_end":125,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200250,"byte_end":200253,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Default is no keepalive (`None`)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200258,"byte_end":200294,"line_start":127,"line_end":127,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200299,"byte_end":200302,"line_start":128,"line_end":128,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200709,"byte_end":200726,"line_start":143,"line_end":143,"column_start":12,"column_end":29},"name":"concurrency_limit","qualname":"<Endpoint>::concurrency_limit","value":"pub fn concurrency_limit(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a concurrency limit to each request.","sig":null,"attributes":[{"value":"/ Apply a concurrency limit to each request.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200463,"byte_end":200509,"line_start":136,"line_end":136,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200514,"byte_end":200517,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200522,"byte_end":200529,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200534,"byte_end":200571,"line_start":139,"line_end":139,"column_start":5,"column_end":42}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200576,"byte_end":200645,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ builder.concurrency_limit(256);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200650,"byte_end":200685,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200690,"byte_end":200697,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":201150,"byte_end":201160,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"rate_limit","qualname":"<Endpoint>::rate_limit","value":"pub fn rate_limit(Self, u64, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a rate limit to each request.","sig":null,"attributes":[{"value":"/ Apply a rate limit to each request.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200860,"byte_end":200899,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200904,"byte_end":200907,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200912,"byte_end":200919,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200924,"byte_end":200961,"line_start":153,"line_end":153,"column_start":5,"column_end":42}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":200966,"byte_end":200996,"line_start":154,"line_end":154,"column_start":5,"column_end":35}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":201001,"byte_end":201070,"line_start":155,"line_end":155,"column_start":5,"column_end":74}},{"value":"/ builder.rate_limit(32, Duration::from_secs(1));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":201075,"byte_end":201126,"line_start":156,"line_end":156,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":201131,"byte_end":201138,"line_start":157,"line_end":157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":201555,"byte_end":201581,"line_start":171,"line_end":171,"column_start":12,"column_end":38},"name":"initial_stream_window_size","qualname":"<Endpoint>::initial_stream_window_size","value":"pub fn initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                             impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":201317,"byte_end":201385,"line_start":165,"line_end":165,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":201390,"byte_end":201420,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":201425,"byte_end":201428,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":201433,"byte_end":201454,"line_start":168,"line_end":168,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":201459,"byte_end":201462,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":201467,"byte_end":201543,"line_start":170,"line_end":170,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":201835,"byte_end":201865,"line_start":181,"line_end":181,"column_start":12,"column_end":42},"name":"initial_connection_window_size","qualname":"<Endpoint>::initial_connection_window_size","value":"pub fn initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                                 impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":201733,"byte_end":201789,"line_start":178,"line_end":178,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":201794,"byte_end":201797,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":201802,"byte_end":201823,"line_start":180,"line_end":180,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":202148,"byte_end":202158,"line_start":191,"line_end":191,"column_start":12,"column_end":22},"name":"tls_config","qualname":"<Endpoint>::tls_config","value":"pub fn tls_config(Self, ClientTlsConfig) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Configures TLS for the endpoint.\n","sig":null,"attributes":[{"value":"/ Configures TLS for the endpoint.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":202021,"byte_end":202057,"line_start":188,"line_end":188,"column_start":5,"column_end":41}},{"value":"cfg(feature = \"tls\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":202062,"byte_end":202085,"line_start":189,"line_end":189,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":202550,"byte_end":202561,"line_start":203,"line_end":203,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<Endpoint>::tcp_nodelay","value":"pub fn tcp_nodelay(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.\n","sig":null,"attributes":[{"value":"/ Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":202451,"byte_end":202538,"line_start":202,"line_end":202,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":202766,"byte_end":202791,"line_start":211,"line_end":211,"column_start":12,"column_end":37},"name":"http2_keep_alive_interval","qualname":"<Endpoint>::http2_keep_alive_interval","value":"pub fn http2_keep_alive_interval(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set http2 KEEP_ALIVE_INTERVAL. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Set http2 KEEP_ALIVE_INTERVAL. Uses `hyper`'s default otherwise.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":202686,"byte_end":202754,"line_start":210,"line_end":210,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":203021,"byte_end":203039,"line_start":219,"line_end":219,"column_start":12,"column_end":30},"name":"keep_alive_timeout","qualname":"<Endpoint>::keep_alive_timeout","value":"pub fn keep_alive_timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set http2 KEEP_ALIVE_TIMEOUT. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Set http2 KEEP_ALIVE_TIMEOUT. Uses `hyper`'s default otherwise.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":202942,"byte_end":203009,"line_start":218,"line_end":218,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":203271,"byte_end":203292,"line_start":227,"line_end":227,"column_start":12,"column_end":33},"name":"keep_alive_while_idle","qualname":"<Endpoint>::keep_alive_while_idle","value":"pub fn keep_alive_while_idle(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set http2 KEEP_ALIVE_WHILE_IDLE. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Set http2 KEEP_ALIVE_WHILE_IDLE. Uses `hyper`'s default otherwise.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":203189,"byte_end":203259,"line_start":226,"line_end":226,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":203495,"byte_end":203502,"line_start":235,"line_end":235,"column_start":18,"column_end":25},"name":"connect","qualname":"<Endpoint>::connect","value":"pub async fn connect<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Create a channel from this config.\n","sig":null,"attributes":[{"value":"/ Create a channel from this config.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":203439,"byte_end":203477,"line_start":234,"line_end":234,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":204161,"byte_end":204173,"line_start":254,"line_end":254,"column_start":12,"column_end":24},"name":"connect_lazy","qualname":"<Endpoint>::connect_lazy","value":"pub fn connect_lazy(&Self) -> Result<Channel, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a channel from this config.","sig":null,"attributes":[{"value":"/ Create a channel from this config.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":203990,"byte_end":204028,"line_start":250,"line_end":250,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":204033,"byte_end":204036,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ The channel returned by this method does not attempt to connect to the endpoint until first","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":204041,"byte_end":204136,"line_start":252,"line_end":252,"column_start":5,"column_end":100}},{"value":"/ use.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":204141,"byte_end":204149,"line_start":253,"line_end":253,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":204948,"byte_end":204970,"line_start":274,"line_end":274,"column_start":18,"column_end":40},"name":"connect_with_connector","qualname":"<Endpoint>::connect_with_connector","value":"pub async fn connect_with_connector<C, '_>(&'_ Self, C) -> /*impl Trait*/\nwhere C: MakeConnection<Uri> + Send + 'static, C::Connection: Unpin + Send +\n'static, C::Future: Send + 'static, crate::Error: From<C::Error> + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Connect with a custom connector.","sig":null,"attributes":[{"value":"/ Connect with a custom connector.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":204655,"byte_end":204691,"line_start":269,"line_end":269,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":204696,"byte_end":204699,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This allows you to build a [Channel](struct.Channel.html) that uses a non-HTTP transport.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":204704,"byte_end":204797,"line_start":271,"line_end":271,"column_start":5,"column_end":98}},{"value":"/ See the `uds` example for an example on how to use this function to build channel that","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":204802,"byte_end":204892,"line_start":272,"line_end":272,"column_start":5,"column_end":95}},{"value":"/ uses a Unix socket transport.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":204897,"byte_end":204930,"line_start":273,"line_end":273,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":205780,"byte_end":205783,"line_start":299,"line_end":299,"column_start":12,"column_end":15},"name":"uri","qualname":"<Endpoint>::uri","value":"pub fn uri(&Self) -> &Uri","parent":null,"children":[],"decl_id":null,"docs":" Get the endpoint uri.","sig":null,"attributes":[{"value":"/ Get the endpoint uri.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":205489,"byte_end":205514,"line_start":290,"line_end":290,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":205519,"byte_end":205522,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":205527,"byte_end":205534,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":205539,"byte_end":205576,"line_start":293,"line_end":293,"column_start":5,"column_end":42}},{"value":"/ # use http::Uri;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":205581,"byte_end":205601,"line_start":294,"line_end":294,"column_start":5,"column_end":25}},{"value":"/ let endpoint = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":205606,"byte_end":205670,"line_start":295,"line_end":295,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":205675,"byte_end":205678,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(endpoint.uri(), &Uri::from_static(\"https://example.com\"));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":205683,"byte_end":205756,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":205761,"byte_end":205768,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3941},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":207549,"byte_end":207564,"line_start":13,"line_end":13,"column_start":12,"column_end":27},"name":"ClientTlsConfig","qualname":"::transport::channel::tls::ClientTlsConfig","value":"ClientTlsConfig {  }","parent":null,"children":[{"krate":0,"index":3942},{"krate":0,"index":3943},{"krate":0,"index":3944},{"krate":0,"index":3945}],"decl_id":null,"docs":" Configures TLS settings for endpoints.\n","sig":null,"attributes":[{"value":"/ Configures TLS settings for endpoints.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":207398,"byte_end":207440,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"tls\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":207441,"byte_end":207464,"line_start":10,"line_end":10,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":208160,"byte_end":208163,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<ClientTlsConfig>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ClientTlsConfig` using Rustls.\n","sig":null,"attributes":[{"value":"/ Creates a new `ClientTlsConfig` using Rustls.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":208099,"byte_end":208148,"line_start":33,"line_end":33,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":208421,"byte_end":208432,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"domain_name","qualname":"<ClientTlsConfig>::domain_name","value":"pub fn domain_name<impl Into<String>: Into<String>>(Self, impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the domain name against which to verify the server's TLS certificate.\n","sig":null,"attributes":[{"value":"/ Sets the domain name against which to verify the server's TLS certificate.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":208331,"byte_end":208409,"line_start":43,"line_end":43,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":208776,"byte_end":208790,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"ca_certificate","qualname":"<ClientTlsConfig>::ca_certificate","value":"pub fn ca_certificate(Self, Certificate) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the CA Certificate against which to verify the server's TLS certificate.","sig":null,"attributes":[{"value":"/ Sets the CA Certificate against which to verify the server's TLS certificate.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":208593,"byte_end":208674,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":208679,"byte_end":208682,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This has no effect if `rustls_client_config` is used to configure Rustls.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":208687,"byte_end":208764,"line_start":53,"line_end":53,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":209098,"byte_end":209106,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"identity","qualname":"<ClientTlsConfig>::identity","value":"pub fn identity(Self, Identity) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the client identity to present to the server.","sig":null,"attributes":[{"value":"/ Sets the client identity to present to the server.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":208942,"byte_end":208996,"line_start":61,"line_end":61,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":209001,"byte_end":209004,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This has no effect if `rustls_client_config` is used to configure Rustls.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":209009,"byte_end":209086,"line_start":63,"line_end":63,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":209404,"byte_end":209424,"line_start":74,"line_end":74,"column_start":12,"column_end":32},"name":"rustls_client_config","qualname":"<ClientTlsConfig>::rustls_client_config","value":"pub fn rustls_client_config(Self, tokio_rustls::rustls::ClientConfig) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use options specified by the given `ClientConfig` to configure TLS.","sig":null,"attributes":[{"value":"/ Use options specified by the given `ClientConfig` to configure TLS.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":209247,"byte_end":209318,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":209323,"byte_end":209326,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This overrides all other TLS options set via other means.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":209331,"byte_end":209392,"line_start":73,"line_end":73,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3950},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191575,"byte_end":191582,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"Channel","qualname":"::transport::channel::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":3951}],"decl_id":null,"docs":" A default batteries included `transport` channel.","sig":null,"attributes":[{"value":"/ A default batteries included `transport` channel.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":190299,"byte_end":190352,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":190353,"byte_end":190356,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This provides a fully featured http2 gRPC client based on [`hyper::Client`]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":190357,"byte_end":190436,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ and `tower` services.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":190437,"byte_end":190462,"line_start":47,"line_end":47,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":190463,"byte_end":190466,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Multiplexing requests","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":190467,"byte_end":190494,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":190495,"byte_end":190498,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Sending a request on a channel requires a `&mut self` and thus can only send","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":190499,"byte_end":190579,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ one request in flight. This is intentional and is required to follow the `Service`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":190580,"byte_end":190666,"line_start":52,"line_end":52,"column_start":1,"column_end":87}},{"value":"/ contract from the `tower` library which this channel implementation is built on","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":190667,"byte_end":190750,"line_start":53,"line_end":53,"column_start":1,"column_end":84}},{"value":"/ top of.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":190751,"byte_end":190762,"line_start":54,"line_end":54,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":190763,"byte_end":190766,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ `tower` itself has a concept of `poll_ready` which is the main mechanism to apply","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":190767,"byte_end":190852,"line_start":56,"line_end":56,"column_start":1,"column_end":86}},{"value":"/ back pressure. `poll_ready` takes a `&mut self` and when it returns `Poll::Ready`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":190853,"byte_end":190938,"line_start":57,"line_end":57,"column_start":1,"column_end":86}},{"value":"/ we know the `Service` is able to accept only one request before we must `poll_ready`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":190939,"byte_end":191027,"line_start":58,"line_end":58,"column_start":1,"column_end":89}},{"value":"/ again. Due to this fact any `async fn` that wants to poll for readiness and submit","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191028,"byte_end":191114,"line_start":59,"line_end":59,"column_start":1,"column_end":87}},{"value":"/ the request must have a `&mut self` reference.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191115,"byte_end":191165,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191166,"byte_end":191169,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ To work around this and to ease the use of the channel, `Channel` provides a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191170,"byte_end":191250,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/ `Clone` implementation that is _cheap_. This is because at the very top level","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191251,"byte_end":191332,"line_start":63,"line_end":63,"column_start":1,"column_end":82}},{"value":"/ the channel is backed by a `tower_buffer::Buffer` which runs the connection","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191333,"byte_end":191412,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ in a background task and provides a `mpsc` channel interface. Due to this","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191413,"byte_end":191490,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ cloning the `Channel` type is cheap and encouraged.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191491,"byte_end":191546,"line_start":66,"line_end":66,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191751,"byte_end":191765,"line_start":75,"line_end":75,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::transport::channel::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":1867}],"decl_id":null,"docs":" A future that resolves to an HTTP response.","sig":null,"attributes":[{"value":"/ A future that resolves to an HTTP response.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191628,"byte_end":191675,"line_start":72,"line_end":72,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191676,"byte_end":191679,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This is returned by the `Service::call` on [`Channel`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191680,"byte_end":191739,"line_start":74,"line_end":74,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1869},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191955,"byte_end":191962,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"builder","qualname":"<Channel>::builder","value":"pub fn builder(Uri) -> Endpoint","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Endpoint`] builder that can create a [`Channel`]'s.\n","sig":null,"attributes":[{"value":"/ Create a [`Endpoint`] builder that can create a [`Channel`]'s.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191877,"byte_end":191943,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192210,"byte_end":192221,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"from_static","qualname":"<Channel>::from_static","value":"pub fn from_static(&'static str) -> Endpoint","parent":null,"children":[],"decl_id":null,"docs":" Create an `Endpoint` from a static string.","sig":null,"attributes":[{"value":"/ Create an `Endpoint` from a static string.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192026,"byte_end":192072,"line_start":85,"line_end":85,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192077,"byte_end":192080,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192085,"byte_end":192092,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Channel;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192097,"byte_end":192133,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/ Channel::from_static(\"https://example.com\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192138,"byte_end":192186,"line_start":89,"line_end":89,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192191,"byte_end":192198,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192511,"byte_end":192522,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"from_shared","qualname":"<Channel>::from_shared","value":"pub fn from_shared<impl Into<Bytes>: Into<Bytes>>(impl Into<Bytes>)\n-> Result<Endpoint, InvalidUri>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Endpoint` from shared bytes.","sig":null,"attributes":[{"value":"/ Create an `Endpoint` from shared bytes.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192330,"byte_end":192373,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192378,"byte_end":192381,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192386,"byte_end":192393,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Channel;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192398,"byte_end":192434,"line_start":99,"line_end":99,"column_start":5,"column_end":41}},{"value":"/ Channel::from_shared(\"https://example.com\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192439,"byte_end":192487,"line_start":100,"line_end":100,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192492,"byte_end":192499,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192832,"byte_end":192844,"line_start":111,"line_end":111,"column_start":12,"column_end":24},"name":"balance_list","qualname":"<Channel>::balance_list","value":"pub fn balance_list<impl Iterator<Item = Endpoint>: Iterator<Item =\n                    Endpoint>>(impl Iterator<Item = Endpoint>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Balance a list of [`Endpoint`]'s.","sig":null,"attributes":[{"value":"/ Balance a list of [`Endpoint`]'s.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192673,"byte_end":192710,"line_start":107,"line_end":107,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192715,"byte_end":192718,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This creates a [`Channel`] that will load balance accross all the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192723,"byte_end":192792,"line_start":109,"line_end":109,"column_start":5,"column_end":74}},{"value":"/ provided endpoints.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":192797,"byte_end":192820,"line_start":110,"line_end":110,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1876},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":193320,"byte_end":193335,"line_start":124,"line_end":124,"column_start":12,"column_end":27},"name":"balance_channel","qualname":"<Channel>::balance_channel","value":"pub fn balance_channel<K>(usize) -> (Self, Sender<Change<K, Endpoint>>) where\nK: Hash + Eq + Send + Clone + 'static","parent":null,"children":[],"decl_id":null,"docs":" Balance a list of [`Endpoint`]'s.","sig":null,"attributes":[{"value":"/ Balance a list of [`Endpoint`]'s.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":193139,"byte_end":193176,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":193181,"byte_end":193184,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This creates a [`Channel`] that will listen to a stream of change events and will add or remove provided endpoints.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":193189,"byte_end":193308,"line_start":123,"line_end":123,"column_start":5,"column_end":124}}]},{"kind":"Mod","id":{"krate":0,"index":1899},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::transport::server","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","parent":null,"children":[{"krate":0,"index":1900},{"krate":0,"index":1932},{"krate":0,"index":2018},{"krate":0,"index":2041},{"krate":0,"index":2044},{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2053},{"krate":0,"index":2056},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2064},{"krate":0,"index":2067},{"krate":0,"index":2070},{"krate":0,"index":2073},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2080},{"krate":0,"index":2083},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2091},{"krate":0,"index":2094},{"krate":0,"index":2097},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2104},{"krate":0,"index":2107},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2114},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2121},{"krate":0,"index":2124},{"krate":0,"index":2127},{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2134},{"krate":0,"index":2137},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2144},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2151},{"krate":0,"index":2154},{"krate":0,"index":2157},{"krate":0,"index":2160},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2167},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":4018},{"krate":0,"index":4031},{"krate":0,"index":4033},{"krate":0,"index":4035},{"krate":0,"index":4040},{"krate":0,"index":4044},{"krate":0,"index":4048},{"krate":0,"index":2173},{"krate":0,"index":2181},{"krate":0,"index":2183},{"krate":0,"index":2187},{"krate":0,"index":2189},{"krate":0,"index":2219},{"krate":0,"index":2223},{"krate":0,"index":2253},{"krate":0,"index":2255},{"krate":0,"index":2260},{"krate":0,"index":2268},{"krate":0,"index":2271},{"krate":0,"index":2277},{"krate":0,"index":4052},{"krate":0,"index":4054},{"krate":0,"index":4056},{"krate":0,"index":4058},{"krate":0,"index":2285}],"decl_id":null,"docs":" Server implementation and builder.\n","sig":null,"attributes":[{"value":"/ Server implementation and builder.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":210117,"byte_end":210155,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":1920},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","byte_start":232649,"byte_end":232658,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"name":"Connected","qualname":"::transport::server::conn::Connected","value":"Connected","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":1922}],"decl_id":null,"docs":" Trait that connected IO resources implement.","sig":null,"attributes":[{"value":"/ Trait that connected IO resources implement.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","byte_start":232450,"byte_end":232498,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","byte_start":232499,"byte_end":232502,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The goal for this trait is to allow users to implement","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","byte_start":232503,"byte_end":232561,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/ custom IO types that can still provide the same connection","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","byte_start":232562,"byte_end":232624,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/ metadata.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","byte_start":232625,"byte_end":232638,"line_start":12,"line_end":12,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","byte_start":232737,"byte_end":232748,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"remote_addr","qualname":"::transport::server::conn::Connected::remote_addr","value":"pub fn remote_addr(&Self) -> Option<SocketAddr>","parent":{"krate":0,"index":1920},"children":[],"decl_id":null,"docs":" Return the remote address this IO resource is connected too.\n","sig":null,"attributes":[{"value":"/ Return the remote address this IO resource is connected too.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","byte_start":232665,"byte_end":232729,"line_start":14,"line_end":14,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","byte_start":232866,"byte_end":232876,"line_start":20,"line_end":20,"column_start":8,"column_end":18},"name":"peer_certs","qualname":"::transport::server::conn::Connected::peer_certs","value":"pub fn peer_certs(&Self) -> Option<Vec<Certificate>>","parent":{"krate":0,"index":1920},"children":[],"decl_id":null,"docs":" Return the set of connected peer TLS certificates.\n","sig":null,"attributes":[{"value":"/ Return the set of connected peer TLS certificates.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","byte_start":232804,"byte_end":232858,"line_start":19,"line_end":19,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4010},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":238252,"byte_end":238267,"line_start":11,"line_end":11,"column_start":12,"column_end":27},"name":"ServerTlsConfig","qualname":"::transport::server::tls::ServerTlsConfig","value":"ServerTlsConfig {  }","parent":null,"children":[{"krate":0,"index":4011},{"krate":0,"index":4012},{"krate":0,"index":4013}],"decl_id":null,"docs":" Configures TLS settings for servers.\n","sig":null,"attributes":[{"value":"/ Configures TLS settings for servers.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":238103,"byte_end":238143,"line_start":7,"line_end":7,"column_start":1,"column_end":41}},{"value":"cfg(feature = \"tls\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":238144,"byte_end":238167,"line_start":8,"line_end":8,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2036},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":238690,"byte_end":238693,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<ServerTlsConfig>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ServerTlsConfig`.\n","sig":null,"attributes":[{"value":"/ Creates a new `ServerTlsConfig`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":238642,"byte_end":238678,"line_start":26,"line_end":26,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2037},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":238897,"byte_end":238905,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"identity","qualname":"<ServerTlsConfig>::identity","value":"pub fn identity(Self, Identity) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`Identity`] of the server.\n","sig":null,"attributes":[{"value":"/ Sets the [`Identity`] of the server.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":238845,"byte_end":238885,"line_start":35,"line_end":35,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":239131,"byte_end":239145,"line_start":44,"line_end":44,"column_start":12,"column_end":26},"name":"client_ca_root","qualname":"<ServerTlsConfig>::client_ca_root","value":"pub fn client_ca_root(Self, Certificate) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a certificate against which to validate client TLS certificates.\n","sig":null,"attributes":[{"value":"/ Sets a certificate against which to validate client TLS certificates.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":239046,"byte_end":239119,"line_start":43,"line_end":43,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2039},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":239444,"byte_end":239464,"line_start":54,"line_end":54,"column_start":12,"column_end":32},"name":"rustls_server_config","qualname":"<ServerTlsConfig>::rustls_server_config","value":"pub fn rustls_server_config(&mut Self, tokio_rustls::rustls::ServerConfig)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Use options specified by the given `ServerConfig` to configure TLS.","sig":null,"attributes":[{"value":"/ Use options specified by the given `ServerConfig` to configure TLS.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":239287,"byte_end":239358,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":239363,"byte_end":239366,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This overrides all other TLS options set via other means.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":239371,"byte_end":239432,"line_start":53,"line_end":53,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4018},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":212035,"byte_end":212041,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"Server","qualname":"::transport::server::Server","value":"Server {  }","parent":null,"children":[{"krate":0,"index":4019},{"krate":0,"index":4020},{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027},{"krate":0,"index":4028},{"krate":0,"index":4029},{"krate":0,"index":4030}],"decl_id":null,"docs":" A default batteries included `transport` server.","sig":null,"attributes":[{"value":"/ A default batteries included `transport` server.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":211473,"byte_end":211525,"line_start":56,"line_end":56,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":211526,"byte_end":211529,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper around [`hyper::Server`] and provides an easy builder","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":211530,"byte_end":211605,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ pattern style builder [`Server`]. This builder exposes easy configuration parameters","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":211606,"byte_end":211694,"line_start":59,"line_end":59,"column_start":1,"column_end":89}},{"value":"/ for providing a fully featured http2 based gRPC server. This should provide","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":211695,"byte_end":211774,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ a very good out of the box http2 server for use with tonic but is also a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":211775,"byte_end":211851,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ reference implementation that should be a good starting point for anyone","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":211852,"byte_end":211928,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ wanting to create a more complex and/or specific implementation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":211929,"byte_end":211997,"line_start":63,"line_end":63,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4035},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":212604,"byte_end":212610,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"Router","qualname":"::transport::server::Router","value":"Router {  }","parent":null,"children":[{"krate":0,"index":4038},{"krate":0,"index":4039}],"decl_id":null,"docs":" A stack based `Service` router.\n","sig":null,"attributes":[{"value":"/ A stack based `Service` router.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":212540,"byte_end":212575,"line_start":81,"line_end":81,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4044},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":212918,"byte_end":212931,"line_start":94,"line_end":94,"column_start":12,"column_end":25},"name":"RouterService","qualname":"::transport::server::RouterService","value":"RouterService {  }","parent":null,"children":[{"krate":0,"index":4047}],"decl_id":null,"docs":" A service that is produced from a Tonic `Router`.","sig":null,"attributes":[{"value":"/ A service that is produced from a Tonic `Router`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":212683,"byte_end":212736,"line_start":88,"line_end":88,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":212737,"byte_end":212740,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ This service implementation will route between multiple Tonic","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":212741,"byte_end":212806,"line_start":90,"line_end":90,"column_start":1,"column_end":66}},{"value":"/ gRPC endpoints and can be consumed with the rest of the `tower`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":212807,"byte_end":212874,"line_start":91,"line_end":91,"column_start":1,"column_end":68}},{"value":"/ ecosystem.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":212875,"byte_end":212889,"line_start":92,"line_end":92,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":2181},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":213988,"byte_end":214000,"line_start":128,"line_end":128,"column_start":11,"column_end":23},"name":"NamedService","qualname":"::transport::server::NamedService","value":"NamedService","parent":null,"children":[{"krate":0,"index":2182}],"decl_id":null,"docs":" A trait to provide a static reference to the service's\n name. This is used for routing service's within the router.\n","sig":null,"attributes":[{"value":"/ A trait to provide a static reference to the service's","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":213855,"byte_end":213913,"line_start":126,"line_end":126,"column_start":1,"column_end":59}},{"value":"/ name. This is used for routing service's within the router.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":213914,"byte_end":213977,"line_start":127,"line_end":127,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":2182},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214157,"byte_end":214161,"line_start":132,"line_end":132,"column_start":11,"column_end":15},"name":"NAME","qualname":"::transport::server::NamedService::NAME","value":"&'static str","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" The `Service-Name` as described [here].","sig":null,"attributes":[{"value":"/ The `Service-Name` as described [here].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214007,"byte_end":214050,"line_start":129,"line_end":129,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214055,"byte_end":214058,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [here]: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#requests","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214063,"byte_end":214146,"line_start":131,"line_end":131,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214374,"byte_end":214381,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"builder","qualname":"<Server>::builder","value":"pub fn builder() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new server builder that can configure a [`Server`].\n","sig":null,"attributes":[{"value":"/ Create a new server builder that can configure a [`Server`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214298,"byte_end":214362,"line_start":140,"line_end":140,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214637,"byte_end":214647,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"tls_config","qualname":"<Server>::tls_config","value":"pub fn tls_config(Self, ServerTlsConfig) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Configure TLS for this server.\n","sig":null,"attributes":[{"value":"/ Configure TLS for this server.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214512,"byte_end":214546,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"tls\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214551,"byte_end":214574,"line_start":151,"line_end":151,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215169,"byte_end":215201,"line_start":170,"line_end":170,"column_start":12,"column_end":44},"name":"concurrency_limit_per_connection","qualname":"<Server>::concurrency_limit_per_connection","value":"pub fn concurrency_limit_per_connection(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the concurrency limit applied to on requests inbound per connection.","sig":null,"attributes":[{"value":"/ Set the concurrency limit applied to on requests inbound per connection.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214848,"byte_end":214924,"line_start":160,"line_end":160,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214929,"byte_end":214932,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214937,"byte_end":214950,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214955,"byte_end":214958,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214963,"byte_end":214970,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Server;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214975,"byte_end":215010,"line_start":165,"line_end":165,"column_start":5,"column_end":40}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215015,"byte_end":215048,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ # let builder = Server::builder();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215053,"byte_end":215091,"line_start":167,"line_end":167,"column_start":5,"column_end":43}},{"value":"/ builder.concurrency_limit_per_connection(32);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215096,"byte_end":215145,"line_start":168,"line_end":168,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215150,"byte_end":215157,"line_start":169,"line_end":169,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215659,"byte_end":215666,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Server>::timeout","value":"pub fn timeout(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set a timeout on for all request handlers.","sig":null,"attributes":[{"value":"/ Set a timeout on for all request handlers.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215333,"byte_end":215379,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215384,"byte_end":215387,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215392,"byte_end":215405,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215410,"byte_end":215413,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215418,"byte_end":215425,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Server;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215430,"byte_end":215465,"line_start":182,"line_end":182,"column_start":5,"column_end":40}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215470,"byte_end":215503,"line_start":183,"line_end":183,"column_start":5,"column_end":38}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215508,"byte_end":215538,"line_start":184,"line_end":184,"column_start":5,"column_end":35}},{"value":"/ # let mut builder = Server::builder();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215543,"byte_end":215585,"line_start":185,"line_end":185,"column_start":5,"column_end":47}},{"value":"/ builder.timeout(Duration::from_secs(30));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215590,"byte_end":215635,"line_start":186,"line_end":186,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215640,"byte_end":215647,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":216012,"byte_end":216038,"line_start":199,"line_end":199,"column_start":12,"column_end":38},"name":"initial_stream_window_size","qualname":"<Server>::initial_stream_window_size","value":"pub fn initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                             impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215774,"byte_end":215842,"line_start":193,"line_end":193,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215847,"byte_end":215877,"line_start":194,"line_end":194,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215882,"byte_end":215885,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215890,"byte_end":215911,"line_start":196,"line_end":196,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215916,"byte_end":215919,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":215924,"byte_end":216000,"line_start":198,"line_end":198,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":216290,"byte_end":216320,"line_start":209,"line_end":209,"column_start":12,"column_end":42},"name":"initial_connection_window_size","qualname":"<Server>::initial_connection_window_size","value":"pub fn initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                                 impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":216188,"byte_end":216244,"line_start":206,"line_end":206,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":216249,"byte_end":216252,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":216257,"byte_end":216278,"line_start":208,"line_end":208,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":216716,"byte_end":216738,"line_start":222,"line_end":222,"column_start":12,"column_end":34},"name":"max_concurrent_streams","qualname":"<Server>::max_concurrent_streams","value":"pub fn max_concurrent_streams<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                         impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2\n connections.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":216474,"byte_end":216545,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ connections.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":216550,"byte_end":216566,"line_start":217,"line_end":217,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":216571,"byte_end":216574,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Default is no limit (`None`).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":216579,"byte_end":216612,"line_start":219,"line_end":219,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":216617,"byte_end":216620,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_MAX_CONCURRENT_STREAMS","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":216625,"byte_end":216704,"line_start":221,"line_end":221,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":217333,"byte_end":217357,"line_start":238,"line_end":238,"column_start":12,"column_end":36},"name":"http2_keepalive_interval","qualname":"<Server>::http2_keepalive_interval","value":"pub fn http2_keepalive_interval(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP2 Ping frames are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether HTTP2 Ping frames are enabled on accepted connections.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":216889,"byte_end":216959,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":216964,"byte_end":216967,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, HTTP2 keepalive is disabled, otherwise the duration","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":216972,"byte_end":217051,"line_start":231,"line_end":231,"column_start":5,"column_end":84}},{"value":"/ specified will be the time interval between HTTP2 Ping frames.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":217056,"byte_end":217122,"line_start":232,"line_end":232,"column_start":5,"column_end":71}},{"value":"/ The timeout for receiving an acknowledgement of the keepalive ping","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":217127,"byte_end":217197,"line_start":233,"line_end":233,"column_start":5,"column_end":75}},{"value":"/ can be set with [`Server::http2_keepalive_timeout`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":217202,"byte_end":217258,"line_start":234,"line_end":234,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":217263,"byte_end":217266,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Default is no HTTP2 keepalive (`None`)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":217271,"byte_end":217313,"line_start":236,"line_end":236,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":217318,"byte_end":217321,"line_start":237,"line_end":237,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":217808,"byte_end":217831,"line_start":252,"line_end":252,"column_start":12,"column_end":35},"name":"http2_keepalive_timeout","qualname":"<Server>::http2_keepalive_timeout","value":"pub fn http2_keepalive_timeout(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a timeout for receiving an acknowledgement of the keepalive ping.","sig":null,"attributes":[{"value":"/ Sets a timeout for receiving an acknowledgement of the keepalive ping.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":217513,"byte_end":217587,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":217592,"byte_end":217595,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ If the ping is not acknowledged within the timeout, the connection will be closed.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":217600,"byte_end":217686,"line_start":247,"line_end":247,"column_start":5,"column_end":91}},{"value":"/ Does nothing if http2_keep_alive_interval is disabled.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":217691,"byte_end":217749,"line_start":248,"line_end":248,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":217754,"byte_end":217757,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Default is 20 seconds.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":217762,"byte_end":217788,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":217793,"byte_end":217796,"line_start":251,"line_end":251,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":218310,"byte_end":218323,"line_start":267,"line_end":267,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<Server>::tcp_keepalive","value":"pub fn tcp_keepalive(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether TCP keepalive messages are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether TCP keepalive messages are enabled on accepted connections.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":217985,"byte_end":218060,"line_start":259,"line_end":259,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":218065,"byte_end":218068,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, keepalive is disabled, otherwise the duration","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":218073,"byte_end":218146,"line_start":261,"line_end":261,"column_start":5,"column_end":78}},{"value":"/ specified will be the time to remain idle before sending TCP keepalive","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":218151,"byte_end":218225,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ probes.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":218230,"byte_end":218241,"line_start":263,"line_end":263,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":218246,"byte_end":218249,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Default is no keepalive (`None`)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":218254,"byte_end":218290,"line_start":265,"line_end":265,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":218295,"byte_end":218298,"line_start":266,"line_end":266,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":218556,"byte_end":218567,"line_start":275,"line_end":275,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<Server>::tcp_nodelay","value":"pub fn tcp_nodelay(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.\n","sig":null,"attributes":[{"value":"/ Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":218457,"byte_end":218544,"line_start":274,"line_end":274,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":218867,"byte_end":218881,"line_start":287,"line_end":287,"column_start":12,"column_end":26},"name":"max_frame_size","qualname":"<Server>::max_frame_size","value":"pub fn max_frame_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                 impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":218690,"byte_end":218739,"line_start":282,"line_end":282,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":218744,"byte_end":218747,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":218752,"byte_end":218787,"line_start":284,"line_end":284,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":218792,"byte_end":218795,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ If not set, will default from underlying transport.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":218800,"byte_end":218855,"line_start":286,"line_end":286,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":219132,"byte_end":219140,"line_start":295,"line_end":295,"column_start":12,"column_end":20},"name":"trace_fn","qualname":"<Server>::trace_fn","value":"pub fn trace_fn<F>(Self, F) -> Self where F: Fn(&HeaderMap) -> tracing::Span +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Intercept inbound headers and add a [`tracing::Span`] to each response future.\n","sig":null,"attributes":[{"value":"/ Intercept inbound headers and add a [`tracing::Span`] to each response future.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":219038,"byte_end":219120,"line_start":294,"line_end":294,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":219559,"byte_end":219570,"line_start":309,"line_end":309,"column_start":12,"column_end":23},"name":"add_service","qualname":"<Server>::add_service","value":"pub fn add_service<S>(&mut Self, S) -> Router<S, Unimplemented> where\nS: Service<Request<Body>, Response = Response<BoxBody>> + NamedService +\nClone + Send + 'static, S::Future: Send + 'static,\nS::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Create a router with the `S` typed service as the first service.","sig":null,"attributes":[{"value":"/ Create a router with the `S` typed service as the first service.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":219355,"byte_end":219423,"line_start":305,"line_end":305,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":219428,"byte_end":219431,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This will clone the `Server` builder and create a router that will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":219436,"byte_end":219506,"line_start":307,"line_end":307,"column_start":5,"column_end":75}},{"value":"/ route around different services.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":219511,"byte_end":219547,"line_start":308,"line_end":308,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":220356,"byte_end":220376,"line_start":330,"line_end":330,"column_start":12,"column_end":32},"name":"add_optional_service","qualname":"<Server>::add_optional_service","value":"pub fn add_optional_service<S>(&mut Self, Option<S>)\n-> Router<Either<S, Unimplemented>, Unimplemented> where\nS: Service<Request<Body>, Response = Response<BoxBody>> + NamedService +\nClone + Send + 'static, S::Future: Send + 'static,\nS::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Create a router with the optional `S` typed service as the first service.","sig":null,"attributes":[{"value":"/ Create a router with the optional `S` typed service as the first service.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":219920,"byte_end":219997,"line_start":322,"line_end":322,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":220002,"byte_end":220005,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This will clone the `Server` builder and create a router that will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":220010,"byte_end":220080,"line_start":324,"line_end":324,"column_start":5,"column_end":75}},{"value":"/ route around different services.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":220085,"byte_end":220121,"line_start":325,"line_end":325,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":220126,"byte_end":220129,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":220134,"byte_end":220144,"line_start":327,"line_end":327,"column_start":5,"column_end":15}},{"value":"/ Even when the argument given is `None` this will capture *all* requests to this service name.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":220149,"byte_end":220246,"line_start":328,"line_end":328,"column_start":5,"column_end":102}},{"value":"/ As a result, one cannot use this to toggle between two identically named implementations.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":220251,"byte_end":220344,"line_start":329,"line_end":329,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":2226},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":224275,"byte_end":224286,"line_start":446,"line_end":446,"column_start":12,"column_end":23},"name":"add_service","qualname":"<Router<A, B>>::add_service","value":"pub fn add_service<S>(Self, S) -> Router<S, Or<A, B, Request<Body>>> where\nS: Service<Request<Body>, Response = Response<BoxBody>> + NamedService +\nClone + Send + 'static, S::Future: Send + 'static,\nS::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Add a new service to this router.\n","sig":null,"attributes":[{"value":"/ Add a new service to this router.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":224226,"byte_end":224263,"line_start":445,"line_end":445,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":225250,"byte_end":225270,"line_start":475,"line_end":475,"column_start":12,"column_end":32},"name":"add_optional_service","qualname":"<Router<A, B>>::add_optional_service","value":"pub fn add_optional_service<S>(Self, Option<S>)\n-> Router<Either<S, Unimplemented>, Or<A, B, Request<Body>>> where\nS: Service<Request<Body>, Response = Response<BoxBody>> + NamedService +\nClone + Send + 'static, S::Future: Send + 'static,\nS::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Add a new optional service to this router.","sig":null,"attributes":[{"value":"/ Add a new optional service to this router.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":224969,"byte_end":225015,"line_start":470,"line_end":470,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":225020,"byte_end":225023,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":225028,"byte_end":225038,"line_start":472,"line_end":472,"column_start":5,"column_end":15}},{"value":"/ Even when the argument given is `None` this will capture *all* requests to this service name.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":225043,"byte_end":225140,"line_start":473,"line_end":473,"column_start":5,"column_end":102}},{"value":"/ As a result, one cannot use this to toggle between two identically named implementations.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":225145,"byte_end":225238,"line_start":474,"line_end":474,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":226328,"byte_end":226333,"line_start":510,"line_end":510,"column_start":18,"column_end":23},"name":"serve","qualname":"<Router<A, B>>::serve","value":"pub async fn serve(Self, SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server\n on [`tokio`]'s default executor.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":226148,"byte_end":226222,"line_start":506,"line_end":506,"column_start":5,"column_end":79}},{"value":"/ on [`tokio`]'s default executor.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":226227,"byte_end":226263,"line_start":507,"line_end":507,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":226268,"byte_end":226271,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":226276,"byte_end":226310,"line_start":509,"line_end":509,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":226920,"byte_end":226939,"line_start":523,"line_end":523,"column_start":18,"column_end":37},"name":"serve_with_shutdown","qualname":"<Router<A, B>>::serve_with_shutdown","value":"pub async fn serve_with_shutdown<F: Future<Output = ()>>(Self, SocketAddr, F)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server\n on [`tokio`]'s default executor. And shutdown when the provided signal\n is received.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":226681,"byte_end":226755,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ on [`tokio`]'s default executor. And shutdown when the provided signal","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":226760,"byte_end":226834,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ is received.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":226839,"byte_end":226855,"line_start":520,"line_end":520,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":226860,"byte_end":226863,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":226868,"byte_end":226902,"line_start":522,"line_end":522,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":227536,"byte_end":227555,"line_start":539,"line_end":539,"column_start":18,"column_end":37},"name":"serve_with_incoming","qualname":"<Router<A, B>>::serve_with_incoming","value":"pub async fn serve_with_incoming<I, IO, IE>(Self, I) -> /*impl Trait*/ where\nI: Stream<Item = Result<IO, IE>>, IO: AsyncRead + AsyncWrite + Connected +\nUnpin + Send + 'static, IE: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server on\n the provided incoming stream of `AsyncRead + AsyncWrite`.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server on","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":227328,"byte_end":227405,"line_start":535,"line_end":535,"column_start":5,"column_end":82}},{"value":"/ the provided incoming stream of `AsyncRead + AsyncWrite`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":227410,"byte_end":227471,"line_start":536,"line_end":536,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":227476,"byte_end":227479,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":227484,"byte_end":227518,"line_start":538,"line_end":538,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":228257,"byte_end":228285,"line_start":556,"line_end":556,"column_start":18,"column_end":46},"name":"serve_with_incoming_shutdown","qualname":"<Router<A, B>>::serve_with_incoming_shutdown","value":"pub async fn serve_with_incoming_shutdown<I, IO, IE, F>(Self, I, F)\n-> /*impl Trait*/ where I: Stream<Item = Result<IO, IE>>, IO: AsyncRead +\nAsyncWrite + Connected + Unpin + Send + 'static, IE: Into<crate::Error>,\nF: Future<Output = ()>","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server on\n the provided incoming stream of `AsyncRead + AsyncWrite`. Similar to\n `serve_with_shutdown` this method will also take a signal future to\n gracefully shutdown the server.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server on","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":227922,"byte_end":227999,"line_start":550,"line_end":550,"column_start":5,"column_end":82}},{"value":"/ the provided incoming stream of `AsyncRead + AsyncWrite`. Similar to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":228004,"byte_end":228076,"line_start":551,"line_end":551,"column_start":5,"column_end":77}},{"value":"/ `serve_with_shutdown` this method will also take a signal future to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":228081,"byte_end":228152,"line_start":552,"line_end":552,"column_start":5,"column_end":76}},{"value":"/ gracefully shutdown the server.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":228157,"byte_end":228192,"line_start":553,"line_end":553,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":228197,"byte_end":228200,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":228205,"byte_end":228239,"line_start":555,"line_end":555,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2252},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":228759,"byte_end":228771,"line_start":573,"line_end":573,"column_start":12,"column_end":24},"name":"into_service","qualname":"<Router<A, B>>::into_service","value":"pub fn into_service(Self) -> RouterService<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Create a tower service out of a router.\n","sig":null,"attributes":[{"value":"/ Create a tower service out of a router.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":228704,"byte_end":228747,"line_start":572,"line_end":572,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":4052},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":231568,"byte_end":231581,"line_start":675,"line_end":675,"column_start":12,"column_end":25},"name":"Unimplemented","qualname":"::transport::server::Unimplemented","value":"Unimplemented {  }","parent":null,"children":[{"krate":0,"index":4053}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2300},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/error.rs","byte_start":240348,"byte_end":240353,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Error","qualname":"::transport::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":2301}],"decl_id":null,"docs":" Error's that originate from the client or server;\n","sig":null,"attributes":[{"value":"/ Error's that originate from the client or server;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/error.rs","byte_start":240283,"byte_end":240336,"line_start":10,"line_end":10,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2807},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":264726,"byte_end":264728,"line_start":70,"line_end":70,"column_start":12,"column_end":14},"name":"Or","qualname":"::transport::service::router::Or","value":"Or {  }","parent":null,"children":[{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4553},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":275667,"byte_end":275678,"line_start":3,"line_end":3,"column_start":12,"column_end":23},"name":"Certificate","qualname":"::transport::tls::Certificate","value":"Certificate {  }","parent":null,"children":[{"krate":0,"index":4554}],"decl_id":null,"docs":" Represents a X509 certificate.\n","sig":null,"attributes":[{"value":"/ Represents a X509 certificate.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":275597,"byte_end":275631,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4559},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":275799,"byte_end":275807,"line_start":9,"line_end":9,"column_start":12,"column_end":20},"name":"Identity","qualname":"::transport::tls::Identity","value":"Identity {  }","parent":null,"children":[{"krate":0,"index":4560},{"krate":0,"index":4561}],"decl_id":null,"docs":" Represents a private key and X509 certificate.\n","sig":null,"attributes":[{"value":"/ Represents a private key and X509 certificate.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":275713,"byte_end":275763,"line_start":7,"line_end":7,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":276038,"byte_end":276046,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"from_pem","qualname":"<Certificate>::from_pem","value":"pub fn from_pem<impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parse a PEM encoded X509 Certificate.","sig":null,"attributes":[{"value":"/ Parse a PEM encoded X509 Certificate.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":275899,"byte_end":275940,"line_start":15,"line_end":15,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":275945,"byte_end":275948,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ The provided PEM should include at least one PEM encoded certificate.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":275953,"byte_end":276026,"line_start":17,"line_end":17,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":276218,"byte_end":276225,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Certificate>::get_ref","value":"pub fn get_ref(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a immutable reference to underlying certificate\n","sig":null,"attributes":[{"value":"/ Get a immutable reference to underlying certificate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":276151,"byte_end":276206,"line_start":23,"line_end":23,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3012},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":276349,"byte_end":276356,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Certificate>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to underlying certificate\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to underlying certificate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":276284,"byte_end":276337,"line_start":28,"line_end":28,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3013},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":276489,"byte_end":276499,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Certificate>::into_inner","value":"pub fn into_inner(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the underlying certificate\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the underlying certificate","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":276420,"byte_end":276477,"line_start":33,"line_end":33,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":276816,"byte_end":276824,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"from_pem","qualname":"<Identity>::from_pem","value":"pub fn from_pem<impl AsRef<[u8]>: AsRef<[u8]>,\n                impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>,\n                                               impl AsRef<[u8]>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parse a PEM encoded certificate and private key.","sig":null,"attributes":[{"value":"/ Parse a PEM encoded certificate and private key.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":276667,"byte_end":276719,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":276724,"byte_end":276727,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The provided cert must contain at least one PEM encoded certificate.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":276732,"byte_end":276804,"line_start":48,"line_end":48,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":4566},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277881,"byte_end":277892,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"Interceptor","qualname":"::interceptor::Interceptor","value":"Interceptor {  }","parent":null,"children":[{"krate":0,"index":4567}],"decl_id":null,"docs":" Represents a gRPC interceptor.","sig":null,"attributes":[{"value":"/ Represents a gRPC interceptor.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277170,"byte_end":277204,"line_start":7,"line_end":7,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277205,"byte_end":277208,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ gRPC interceptors are similar to middleware but have much less","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277209,"byte_end":277275,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/ flexibility. This interceptor allows you to do two main things,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277276,"byte_end":277343,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ one is to add/remove/check items in the `MetadataMap` of each","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277344,"byte_end":277409,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/ request. Two, cancel a request with any `Status`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277410,"byte_end":277463,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277464,"byte_end":277467,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An interceptor can be used on both the server and client side through","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277468,"byte_end":277541,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ the `tonic-build` crate's generated structs.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277542,"byte_end":277590,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277591,"byte_end":277594,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ These interceptors do not allow you to modify the `Message` of the request","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277595,"byte_end":277673,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ but allow you to check for metadata. If you would like to apply middleware like","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277674,"byte_end":277757,"line_start":18,"line_end":18,"column_start":1,"column_end":84}},{"value":"/ features to the body of the request, going through the `tower` abstraction is recommended.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277758,"byte_end":277852,"line_start":19,"line_end":19,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":278013,"byte_end":278016,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<Interceptor>::new","value":"pub fn new<impl Fn(Request<()>) -> Result<Request<()>, Status> + Send + Sync + 'static: Fn(Request<()>)\n           -> Result<Request<()>, Status> + Send + Sync +\n           'static>(impl Fn(Request<()>) -> Result<Request<()>, Status> + Send + Sync + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Interceptor` from the provided function.\n","sig":null,"attributes":[{"value":"/ Create a new `Interceptor` from the provided function.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277943,"byte_end":278001,"line_start":26,"line_end":26,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":4570},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":281652,"byte_end":281659,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Request","qualname":"::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":4572},{"krate":0,"index":4573},{"krate":0,"index":4574}],"decl_id":null,"docs":" A gRPC request and metadata from an RPC call.\n","sig":null,"attributes":[{"value":"/ A gRPC request and metadata from an RPC call.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":281574,"byte_end":281623,"line_start":10,"line_end":10,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":3108},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282856,"byte_end":282867,"line_start":54,"line_end":54,"column_start":11,"column_end":22},"name":"IntoRequest","qualname":"::request::IntoRequest","value":"IntoRequest<T>: sealed::Sealed","parent":null,"children":[{"krate":0,"index":3110}],"decl_id":null,"docs":" Trait implemented by RPC request types.","sig":null,"attributes":[{"value":"/ Trait implemented by RPC request types.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":281934,"byte_end":281977,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":281978,"byte_end":281981,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Types implementing this trait can be used as arguments to client RPC","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":281982,"byte_end":282054,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ methods without explicitly wrapping them into `tonic::Request`s. The purpose","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282055,"byte_end":282135,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ is to make client calls slightly more convenient to write.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282136,"byte_end":282198,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282199,"byte_end":282202,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Tonic's code generation and blanket implementations handle this for you,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282203,"byte_end":282279,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ so it is not necessary to implement this trait directly.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282280,"byte_end":282340,"line_start":32,"line_end":32,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282341,"byte_end":282344,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282345,"byte_end":282358,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282359,"byte_end":282362,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Given the following gRPC method definition:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282363,"byte_end":282410,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ ```proto","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282411,"byte_end":282423,"line_start":37,"line_end":37,"column_start":1,"column_end":13}},{"value":"/ rpc GetFeature(Point) returns (Feature) {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282424,"byte_end":282470,"line_start":38,"line_end":38,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282471,"byte_end":282478,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282479,"byte_end":282482,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ we can call `get_feature` in two equivalent ways:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282483,"byte_end":282536,"line_start":41,"line_end":41,"column_start":1,"column_end":54}},{"value":"/ ```rust","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282537,"byte_end":282548,"line_start":42,"line_end":42,"column_start":1,"column_end":12}},{"value":"/ # pub struct Point {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282549,"byte_end":282574,"line_start":43,"line_end":43,"column_start":1,"column_end":26}},{"value":"/ # pub struct Client {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282575,"byte_end":282601,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ # impl Client {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282602,"byte_end":282621,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ #   fn get_feature(&self, r: impl tonic::IntoRequest<Point>) {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282622,"byte_end":282689,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282690,"byte_end":282697,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ # let client = Client {};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282698,"byte_end":282727,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/ use tonic::Request;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282728,"byte_end":282751,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282752,"byte_end":282755,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ client.get_feature(Point {});","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282756,"byte_end":282789,"line_start":51,"line_end":51,"column_start":1,"column_end":34}},{"value":"/ client.get_feature(Request::new(Point {}));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282790,"byte_end":282837,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282838,"byte_end":282845,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3110},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282953,"byte_end":282965,"line_start":56,"line_end":56,"column_start":8,"column_end":20},"name":"into_request","qualname":"::request::IntoRequest::into_request","value":"pub fn into_request(Self) -> Request<T>","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" Wrap the input message `T` in a `tonic::Request`\n","sig":null,"attributes":[{"value":"/ Wrap the input message `T` in a `tonic::Request`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282893,"byte_end":282945,"line_start":55,"line_end":55,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":3111},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284116,"byte_end":284136,"line_start":92,"line_end":92,"column_start":11,"column_end":31},"name":"IntoStreamingRequest","qualname":"::request::IntoStreamingRequest","value":"IntoStreamingRequest: sealed::Sealed","parent":null,"children":[{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3114}],"decl_id":null,"docs":" Trait implemented by RPC streaming request types.","sig":null,"attributes":[{"value":"/ Trait implemented by RPC streaming request types.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282990,"byte_end":283043,"line_start":59,"line_end":59,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283044,"byte_end":283047,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Types implementing this trait can be used as arguments to client streaming","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283048,"byte_end":283126,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/ RPC methods without explicitly wrapping them into `tonic::Request`s. The","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283127,"byte_end":283203,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ purpose is to make client calls slightly more convenient to write.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283204,"byte_end":283274,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283275,"byte_end":283278,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Tonic's code generation and blanket implementations handle this for you,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283279,"byte_end":283355,"line_start":65,"line_end":65,"column_start":1,"column_end":77}},{"value":"/ so it is not necessary to implement this trait directly.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283356,"byte_end":283416,"line_start":66,"line_end":66,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283417,"byte_end":283420,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283421,"byte_end":283434,"line_start":68,"line_end":68,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283435,"byte_end":283438,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Given the following gRPC service method definition:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283439,"byte_end":283494,"line_start":70,"line_end":70,"column_start":1,"column_end":56}},{"value":"/ ```proto","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283495,"byte_end":283507,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/ rpc RecordRoute(stream Point) returns (RouteSummary) {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283508,"byte_end":283567,"line_start":72,"line_end":72,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283568,"byte_end":283575,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ we can call `record_route` in two equivalent ways:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283576,"byte_end":283630,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283631,"byte_end":283634,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283635,"byte_end":283646,"line_start":76,"line_end":76,"column_start":1,"column_end":12}},{"value":"/ # #[derive(Clone)]","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283647,"byte_end":283669,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/ # pub struct Point {};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283670,"byte_end":283696,"line_start":78,"line_end":78,"column_start":1,"column_end":27}},{"value":"/ # pub struct Client {};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283697,"byte_end":283724,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/ # impl Client {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283725,"byte_end":283744,"line_start":80,"line_end":80,"column_start":1,"column_end":20}},{"value":"/ #   fn record_route(&self, r: impl tonic::IntoStreamingRequest<Message = Point>) {}","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283745,"byte_end":283832,"line_start":81,"line_end":81,"column_start":1,"column_end":88}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283833,"byte_end":283840,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # let client = Client {};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283841,"byte_end":283870,"line_start":83,"line_end":83,"column_start":1,"column_end":30}},{"value":"/ use tonic::Request;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283871,"byte_end":283894,"line_start":84,"line_end":84,"column_start":1,"column_end":24}},{"value":"/ use futures_util::stream;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283895,"byte_end":283924,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283925,"byte_end":283928,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ let messages = vec![Point {}, Point {}];","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283929,"byte_end":283973,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283974,"byte_end":283977,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ client.record_route(Request::new(stream::iter(messages.clone())));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":283978,"byte_end":284048,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"/ client.record_route(stream::iter(messages));","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284049,"byte_end":284097,"line_start":90,"line_end":90,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284098,"byte_end":284105,"line_start":91,"line_end":91,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":3112},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284200,"byte_end":284206,"line_start":94,"line_end":94,"column_start":10,"column_end":16},"name":"Stream","qualname":"::request::IntoStreamingRequest::Stream","value":"type Stream: Stream<Item = Self::Message> + Send + Sync + 'static;","parent":{"krate":0,"index":3111},"children":[],"decl_id":null,"docs":" The RPC request stream type\n","sig":null,"attributes":[{"value":"/ The RPC request stream type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284159,"byte_end":284190,"line_start":93,"line_end":93,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":3113},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284301,"byte_end":284308,"line_start":97,"line_end":97,"column_start":10,"column_end":17},"name":"Message","qualname":"::request::IntoStreamingRequest::Message","value":"type Message;","parent":{"krate":0,"index":3111},"children":[],"decl_id":null,"docs":" The RPC request type\n","sig":null,"attributes":[{"value":"/ The RPC request type","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284267,"byte_end":284291,"line_start":96,"line_end":96,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3114},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284376,"byte_end":284398,"line_start":100,"line_end":100,"column_start":8,"column_end":30},"name":"into_streaming_request","qualname":"::request::IntoStreamingRequest::into_streaming_request","value":"pub fn into_streaming_request(Self) -> Request<Self::Stream>","parent":{"krate":0,"index":3111},"children":[],"decl_id":null,"docs":" Wrap the stream of messages in a `tonic::Request`\n","sig":null,"attributes":[{"value":"/ Wrap the stream of messages in a `tonic::Request`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284315,"byte_end":284368,"line_start":99,"line_end":99,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284724,"byte_end":284727,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<Request<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new gRPC request.","sig":null,"attributes":[{"value":"/ Create a new gRPC request.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284459,"byte_end":284489,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284494,"byte_end":284497,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284502,"byte_end":284513,"line_start":106,"line_end":106,"column_start":5,"column_end":16}},{"value":"/ # use tonic::Request;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284518,"byte_end":284543,"line_start":107,"line_end":107,"column_start":5,"column_end":30}},{"value":"/ # pub struct HelloRequest {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284548,"byte_end":284579,"line_start":108,"line_end":108,"column_start":5,"column_end":36}},{"value":"/ #   pub name: String,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284584,"byte_end":284609,"line_start":109,"line_end":109,"column_start":5,"column_end":30}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284614,"byte_end":284621,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ Request::new(HelloRequest {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284626,"byte_end":284657,"line_start":111,"line_end":111,"column_start":5,"column_end":36}},{"value":"/    name: \"Bob\".into(),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284662,"byte_end":284688,"line_start":112,"line_end":112,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284693,"byte_end":284700,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284705,"byte_end":284712,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284945,"byte_end":284952,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Request<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the message\n","sig":null,"attributes":[{"value":"/ Get a reference to the message","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284899,"byte_end":284933,"line_start":123,"line_end":123,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":285055,"byte_end":285062,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Request<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the message\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the message","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":285001,"byte_end":285043,"line_start":128,"line_end":128,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":285186,"byte_end":285194,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Request<T>>::metadata","value":"pub fn metadata(&Self) -> &MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the custom request metadata.\n","sig":null,"attributes":[{"value":"/ Get a reference to the custom request metadata.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":285123,"byte_end":285174,"line_start":133,"line_end":133,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":285318,"byte_end":285330,"line_start":139,"line_end":139,"column_start":12,"column_end":24},"name":"metadata_mut","qualname":"<Request<T>>::metadata_mut","value":"pub fn metadata_mut(&mut Self) -> &mut MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the request metadata.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the request metadata.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":285254,"byte_end":285306,"line_start":138,"line_end":138,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":285456,"byte_end":285466,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Request<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the message\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the message","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":285402,"byte_end":285444,"line_start":143,"line_end":143,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":286144,"byte_end":286153,"line_start":169,"line_end":169,"column_start":12,"column_end":21},"name":"from_http","qualname":"<Request<T>>::from_http","value":"pub fn from_http(http::Request<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an HTTP request to a gRPC request\n","sig":null,"attributes":[{"value":"/ Convert an HTTP request to a gRPC request","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":286087,"byte_end":286132,"line_start":168,"line_end":168,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":286749,"byte_end":286752,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"map","qualname":"<Request<T>>::map","value":"pub fn map<F, U>(Self, F) -> Request<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3131},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":287227,"byte_end":287238,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<Request<T>>::remote_addr","value":"pub fn remote_addr(&Self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the remote address of this connection.","sig":null,"attributes":[{"value":"/ Get the remote address of this connection.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":287012,"byte_end":287058,"line_start":200,"line_end":200,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":287063,"byte_end":287066,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This will return `None` if the `IO` type used","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":287071,"byte_end":287120,"line_start":202,"line_end":202,"column_start":5,"column_end":54}},{"value":"/ does not implement `Connected`. This currently,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":287125,"byte_end":287176,"line_start":203,"line_end":203,"column_start":5,"column_end":56}},{"value":"/ only works on the server side.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":287181,"byte_end":287215,"line_start":204,"line_end":204,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3132},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":287727,"byte_end":287737,"line_start":217,"line_end":217,"column_start":12,"column_end":22},"name":"peer_certs","qualname":"<Request<T>>::peer_certs","value":"pub fn peer_certs(&Self) -> Option<Arc<Vec<Certificate>>>","parent":null,"children":[],"decl_id":null,"docs":" Get the peer certificates of the connected client.","sig":null,"attributes":[{"value":"/ Get the peer certificates of the connected client.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":287331,"byte_end":287385,"line_start":209,"line_end":209,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":287390,"byte_end":287393,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This is used to fetch the certificates from the TLS session","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":287398,"byte_end":287461,"line_start":211,"line_end":211,"column_start":5,"column_end":68}},{"value":"/ and is mostly used for mTLS. This currently only returns","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":287466,"byte_end":287526,"line_start":212,"line_end":212,"column_start":5,"column_end":65}},{"value":"/ `Some` on the server side of the `transport` server with","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":287531,"byte_end":287591,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/ TLS enabled connections.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":287596,"byte_end":287624,"line_start":214,"line_end":214,"column_start":5,"column_end":33}},{"value":"cfg(feature = \"transport\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":287629,"byte_end":287658,"line_start":215,"line_end":215,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":3154},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":288667,"byte_end":288673,"line_start":265,"line_end":265,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::request::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4583},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289278,"byte_end":289286,"line_start":5,"line_end":5,"column_start":12,"column_end":20},"name":"Response","qualname":"::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":4585},{"krate":0,"index":4586}],"decl_id":null,"docs":" A gRPC response and metadata from an RPC call.\n","sig":null,"attributes":[{"value":"/ A gRPC response and metadata from an RPC call.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289199,"byte_end":289249,"line_start":3,"line_end":3,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289682,"byte_end":289685,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Response<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new gRPC response.","sig":null,"attributes":[{"value":"/ Create a new gRPC response.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289364,"byte_end":289395,"line_start":11,"line_end":11,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289400,"byte_end":289403,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289408,"byte_end":289419,"line_start":13,"line_end":13,"column_start":5,"column_end":16}},{"value":"/ # use tonic::Response;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289424,"byte_end":289450,"line_start":14,"line_end":14,"column_start":5,"column_end":31}},{"value":"/ # pub struct HelloReply {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289455,"byte_end":289484,"line_start":15,"line_end":15,"column_start":5,"column_end":34}},{"value":"/ #   pub message: String,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289489,"byte_end":289517,"line_start":16,"line_end":16,"column_start":5,"column_end":33}},{"value":"/ # }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289522,"byte_end":289529,"line_start":17,"line_end":17,"column_start":5,"column_end":12}},{"value":"/ # let name = \"\";","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289534,"byte_end":289554,"line_start":18,"line_end":18,"column_start":5,"column_end":25}},{"value":"/ Response::new(HelloReply {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289559,"byte_end":289589,"line_start":19,"line_end":19,"column_start":5,"column_end":35}},{"value":"/     message: format!(\"Hello, {}!\", name).into(),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289594,"byte_end":289646,"line_start":20,"line_end":20,"column_start":5,"column_end":57}},{"value":"/ });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289651,"byte_end":289658,"line_start":21,"line_end":21,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289663,"byte_end":289670,"line_start":22,"line_end":22,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3162},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289860,"byte_end":289867,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Response<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a immutable reference to `T`.\n","sig":null,"attributes":[{"value":"/ Get a immutable reference to `T`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289811,"byte_end":289848,"line_start":30,"line_end":30,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289970,"byte_end":289977,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Response<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the message\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the message","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289916,"byte_end":289958,"line_start":35,"line_end":35,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3164},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":290102,"byte_end":290110,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Response<T>>::metadata","value":"pub fn metadata(&Self) -> &MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the custom response metadata.\n","sig":null,"attributes":[{"value":"/ Get a reference to the custom response metadata.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":290038,"byte_end":290090,"line_start":40,"line_end":40,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":290235,"byte_end":290247,"line_start":46,"line_end":46,"column_start":12,"column_end":24},"name":"metadata_mut","qualname":"<Response<T>>::metadata_mut","value":"pub fn metadata_mut(&mut Self) -> &mut MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the response metadata.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the response metadata.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":290170,"byte_end":290223,"line_start":45,"line_end":45,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":290373,"byte_end":290383,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Response<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the message\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the message","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":290319,"byte_end":290361,"line_start":50,"line_end":50,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":291159,"byte_end":291162,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"map","qualname":"<Response<T>>::map","value":"pub fn map<F, U>(Self, F) -> Response<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4590},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":292950,"byte_end":292956,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"Status","qualname":"::status::Status","value":"Status {  }","parent":null,"children":[{"krate":0,"index":4591},{"krate":0,"index":4592},{"krate":0,"index":4593},{"krate":0,"index":4594}],"decl_id":null,"docs":" A gRPC status describing the result of an RPC call.","sig":null,"attributes":[{"value":"/ A gRPC status describing the result of an RPC call.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":292463,"byte_end":292518,"line_start":24,"line_end":24,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":292519,"byte_end":292522,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Values can be created using the `new` function or one of the specialized","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":292523,"byte_end":292599,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ associated functions.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":292600,"byte_end":292625,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ ```rust","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":292626,"byte_end":292637,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ # use tonic::{Status, Code};","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":292638,"byte_end":292670,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"/ let status1 = Status::new(Code::InvalidArgument, \"name is invalid\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":292671,"byte_end":292743,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ let status2 = Status::invalid_argument(\"name is invalid\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":292744,"byte_end":292806,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":292807,"byte_end":292810,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(status1.code(), Code::InvalidArgument);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":292811,"byte_end":292865,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(status1.code(), status2.code());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":292866,"byte_end":292913,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":292914,"byte_end":292921,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4598},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":293798,"byte_end":293800,"line_start":58,"line_end":58,"column_start":5,"column_end":7},"name":"Ok","qualname":"::status::Code::Ok","value":"Code::Ok","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" The operation completed successfully.\n","sig":null,"attributes":[{"value":"/ The operation completed successfully.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":293752,"byte_end":293793,"line_start":57,"line_end":57,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4601},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":293848,"byte_end":293857,"line_start":61,"line_end":61,"column_start":5,"column_end":14},"name":"Cancelled","qualname":"::status::Code::Cancelled","value":"Code::Cancelled","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" The operation was cancelled.\n","sig":null,"attributes":[{"value":"/ The operation was cancelled.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":293811,"byte_end":293843,"line_start":60,"line_end":60,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4604},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":293891,"byte_end":293898,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::status::Code::Unknown","value":"Code::Unknown","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" Unknown error.\n","sig":null,"attributes":[{"value":"/ Unknown error.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":293868,"byte_end":293886,"line_start":63,"line_end":63,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4607},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":293955,"byte_end":293970,"line_start":67,"line_end":67,"column_start":5,"column_end":20},"name":"InvalidArgument","qualname":"::status::Code::InvalidArgument","value":"Code::InvalidArgument","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" Client specified an invalid argument.\n","sig":null,"attributes":[{"value":"/ Client specified an invalid argument.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":293909,"byte_end":293950,"line_start":66,"line_end":66,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4610},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294039,"byte_end":294055,"line_start":70,"line_end":70,"column_start":5,"column_end":21},"name":"DeadlineExceeded","qualname":"::status::Code::DeadlineExceeded","value":"Code::DeadlineExceeded","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" Deadline expired before operation could complete.\n","sig":null,"attributes":[{"value":"/ Deadline expired before operation could complete.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":293981,"byte_end":294034,"line_start":69,"line_end":69,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4613},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294111,"byte_end":294119,"line_start":73,"line_end":73,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::status::Code::NotFound","value":"Code::NotFound","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" Some requested entity was not found.\n","sig":null,"attributes":[{"value":"/ Some requested entity was not found.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294066,"byte_end":294106,"line_start":72,"line_end":72,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4616},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294194,"byte_end":294207,"line_start":76,"line_end":76,"column_start":5,"column_end":18},"name":"AlreadyExists","qualname":"::status::Code::AlreadyExists","value":"Code::AlreadyExists","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" Some entity that we attempted to create already exists.\n","sig":null,"attributes":[{"value":"/ Some entity that we attempted to create already exists.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294130,"byte_end":294189,"line_start":75,"line_end":75,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4619},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294298,"byte_end":294314,"line_start":79,"line_end":79,"column_start":5,"column_end":21},"name":"PermissionDenied","qualname":"::status::Code::PermissionDenied","value":"Code::PermissionDenied","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" The caller does not have permission to execute the specified operation.\n","sig":null,"attributes":[{"value":"/ The caller does not have permission to execute the specified operation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294218,"byte_end":294293,"line_start":78,"line_end":78,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4622},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294367,"byte_end":294384,"line_start":82,"line_end":82,"column_start":5,"column_end":22},"name":"ResourceExhausted","qualname":"::status::Code::ResourceExhausted","value":"Code::ResourceExhausted","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" Some resource has been exhausted.\n","sig":null,"attributes":[{"value":"/ Some resource has been exhausted.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294325,"byte_end":294362,"line_start":81,"line_end":81,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4625},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294472,"byte_end":294490,"line_start":85,"line_end":85,"column_start":5,"column_end":23},"name":"FailedPrecondition","qualname":"::status::Code::FailedPrecondition","value":"Code::FailedPrecondition","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" The system is not in a state required for the operation's execution.\n","sig":null,"attributes":[{"value":"/ The system is not in a state required for the operation's execution.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294395,"byte_end":294467,"line_start":84,"line_end":84,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4628},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294536,"byte_end":294543,"line_start":88,"line_end":88,"column_start":5,"column_end":12},"name":"Aborted","qualname":"::status::Code::Aborted","value":"Code::Aborted","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" The operation was aborted.\n","sig":null,"attributes":[{"value":"/ The operation was aborted.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294501,"byte_end":294531,"line_start":87,"line_end":87,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4631},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294609,"byte_end":294619,"line_start":91,"line_end":91,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::status::Code::OutOfRange","value":"Code::OutOfRange","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" Operation was attempted past the valid range.\n","sig":null,"attributes":[{"value":"/ Operation was attempted past the valid range.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294555,"byte_end":294604,"line_start":90,"line_end":90,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4634},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294686,"byte_end":294699,"line_start":94,"line_end":94,"column_start":5,"column_end":18},"name":"Unimplemented","qualname":"::status::Code::Unimplemented","value":"Code::Unimplemented","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" Operation is not implemented or not supported.\n","sig":null,"attributes":[{"value":"/ Operation is not implemented or not supported.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294631,"byte_end":294681,"line_start":93,"line_end":93,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4637},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294735,"byte_end":294743,"line_start":97,"line_end":97,"column_start":5,"column_end":13},"name":"Internal","qualname":"::status::Code::Internal","value":"Code::Internal","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" Internal error.\n","sig":null,"attributes":[{"value":"/ Internal error.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294711,"byte_end":294730,"line_start":96,"line_end":96,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4640},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294801,"byte_end":294812,"line_start":100,"line_end":100,"column_start":5,"column_end":16},"name":"Unavailable","qualname":"::status::Code::Unavailable","value":"Code::Unavailable","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" The service is currently unavailable.\n","sig":null,"attributes":[{"value":"/ The service is currently unavailable.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294755,"byte_end":294796,"line_start":99,"line_end":99,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4643},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294871,"byte_end":294879,"line_start":103,"line_end":103,"column_start":5,"column_end":13},"name":"DataLoss","qualname":"::status::Code::DataLoss","value":"Code::DataLoss","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" Unrecoverable data loss or corruption.\n","sig":null,"attributes":[{"value":"/ Unrecoverable data loss or corruption.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294824,"byte_end":294866,"line_start":102,"line_end":102,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4646},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294958,"byte_end":294973,"line_start":106,"line_end":106,"column_start":5,"column_end":20},"name":"Unauthenticated","qualname":"::status::Code::Unauthenticated","value":"Code::Unauthenticated","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" The request does not have valid authentication credentials\n","sig":null,"attributes":[{"value":"/ The request does not have valid authentication credentials","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":294891,"byte_end":294953,"line_start":105,"line_end":105,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4649},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":295078,"byte_end":295093,"line_start":110,"line_end":110,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::status::Code::__NonExhaustive","value":"Code::__NonExhaustive","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4597},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":293741,"byte_end":293745,"line_start":56,"line_end":56,"column_start":10,"column_end":14},"name":"Code","qualname":"::status::Code","value":"pub enum Code {\n    Ok = ,\n    Cancelled = ,\n    Unknown = ,\n    InvalidArgument = ,\n    DeadlineExceeded = ,\n    NotFound = ,\n    AlreadyExists = ,\n    PermissionDenied = ,\n    ResourceExhausted = ,\n    FailedPrecondition = ,\n    Aborted = ,\n    OutOfRange = ,\n    Unimplemented = ,\n    Internal = ,\n    Unavailable = ,\n    DataLoss = ,\n    Unauthenticated = ,\n    __NonExhaustive,\n}","parent":null,"children":[{"krate":0,"index":4598},{"krate":0,"index":4601},{"krate":0,"index":4604},{"krate":0,"index":4607},{"krate":0,"index":4610},{"krate":0,"index":4613},{"krate":0,"index":4616},{"krate":0,"index":4619},{"krate":0,"index":4622},{"krate":0,"index":4625},{"krate":0,"index":4628},{"krate":0,"index":4631},{"krate":0,"index":4634},{"krate":0,"index":4637},{"krate":0,"index":4640},{"krate":0,"index":4643},{"krate":0,"index":4646},{"krate":0,"index":4649}],"decl_id":null,"docs":" gRPC status codes used by [`Status`].","sig":null,"attributes":[{"value":"/ gRPC status codes used by [`Status`].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":293467,"byte_end":293508,"line_start":50,"line_end":50,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":293509,"byte_end":293512,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ These variants match the [gRPC status codes].","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":293513,"byte_end":293562,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":293563,"byte_end":293566,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [gRPC status codes]: https://github.com/grpc/grpc/blob/master/doc/statuscodes.md#status-codes-and-their-use-in-grpc","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":293567,"byte_end":293686,"line_start":54,"line_end":54,"column_start":1,"column_end":120}}]},{"kind":"Method","id":{"krate":0,"index":3229},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":295592,"byte_end":295603,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"description","qualname":"<Code>::description","value":"pub fn description(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Get description of this `Code`.\n ```\n fn make_grpc_request() -> tonic::Code {\n     // ...\n     tonic::Code::Ok\n }\n let code = make_grpc_request();\n println!(\"Operation completed. Human readable description: {}\", code.description());\n ```\n If you only need description in `println`, `format`, `log` and other\n formatting contexts, you may want to use `Display` impl for `Code`\n instead.\n","sig":null,"attributes":[{"value":"/ Get description of this `Code`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":295114,"byte_end":295149,"line_start":114,"line_end":114,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":295154,"byte_end":295161,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ fn make_grpc_request() -> tonic::Code {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":295166,"byte_end":295209,"line_start":116,"line_end":116,"column_start":5,"column_end":48}},{"value":"/     // ...","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":295214,"byte_end":295228,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/     tonic::Code::Ok","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":295233,"byte_end":295256,"line_start":118,"line_end":118,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":295261,"byte_end":295266,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ let code = make_grpc_request();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":295271,"byte_end":295306,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ println!(\"Operation completed. Human readable description: {}\", code.description());","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":295311,"byte_end":295399,"line_start":121,"line_end":121,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":295404,"byte_end":295411,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ If you only need description in `println`, `format`, `log` and other","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":295416,"byte_end":295488,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ formatting contexts, you may want to use `Display` impl for `Code`","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":295493,"byte_end":295563,"line_start":124,"line_end":124,"column_start":5,"column_end":75}},{"value":"/ instead.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":295568,"byte_end":295580,"line_start":125,"line_end":125,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3233},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":297467,"byte_end":297470,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"new","qualname":"<Status>::new","value":"pub fn new<impl Into<String>: Into<String>>(Code, impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code and message.\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code and message.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":297392,"byte_end":297455,"line_start":165,"line_end":165,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3235},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":297746,"byte_end":297748,"line_start":176,"line_end":176,"column_start":12,"column_end":14},"name":"ok","qualname":"<Status>::ok","value":"pub fn ok<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" The operation completed successfully.\n","sig":null,"attributes":[{"value":"/ The operation completed successfully.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":297693,"byte_end":297734,"line_start":175,"line_end":175,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3237},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":297909,"byte_end":297918,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<Status>::cancelled","value":"pub fn cancelled<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" The operation was cancelled (typically by the caller).\n","sig":null,"attributes":[{"value":"/ The operation was cancelled (typically by the caller).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":297839,"byte_end":297897,"line_start":180,"line_end":180,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3239},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":298346,"byte_end":298353,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"unknown","qualname":"<Status>::unknown","value":"pub fn unknown<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Unknown error. An example of where this error may be returned is if a\n `Status` value received from another address space belongs to an error-space\n that is not known in this address space. Also errors raised by APIs that\n do not return enough error information may be converted to this error.\n","sig":null,"attributes":[{"value":"/ Unknown error. An example of where this error may be returned is if a","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":298016,"byte_end":298089,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/ `Status` value received from another address space belongs to an error-space","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":298094,"byte_end":298174,"line_start":186,"line_end":186,"column_start":5,"column_end":85}},{"value":"/ that is not known in this address space. Also errors raised by APIs that","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":298179,"byte_end":298255,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ do not return enough error information may be converted to this error.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":298260,"byte_end":298334,"line_start":188,"line_end":188,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":298704,"byte_end":298720,"line_start":197,"line_end":197,"column_start":12,"column_end":28},"name":"invalid_argument","qualname":"<Status>::invalid_argument","value":"pub fn invalid_argument<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Client specified an invalid argument. Note that this differs from\n `FailedPrecondition`. `InvalidArgument` indicates arguments that are\n problematic regardless of the state of the system (e.g., a malformed file\n name).\n","sig":null,"attributes":[{"value":"/ Client specified an invalid argument. Note that this differs from","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":298449,"byte_end":298518,"line_start":193,"line_end":193,"column_start":5,"column_end":74}},{"value":"/ `FailedPrecondition`. `InvalidArgument` indicates arguments that are","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":298523,"byte_end":298595,"line_start":194,"line_end":194,"column_start":5,"column_end":77}},{"value":"/ problematic regardless of the state of the system (e.g., a malformed file","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":298600,"byte_end":298677,"line_start":195,"line_end":195,"column_start":5,"column_end":82}},{"value":"/ name).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":298682,"byte_end":298692,"line_start":196,"line_end":196,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3243},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":299163,"byte_end":299180,"line_start":206,"line_end":206,"column_start":12,"column_end":29},"name":"deadline_exceeded","qualname":"<Status>::deadline_exceeded","value":"pub fn deadline_exceeded<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Deadline expired before operation could complete. For operations that\n change the state of the system, this error may be returned even if the\n operation has completed successfully. For example, a successful response\n from a server could have been delayed long enough for the deadline to\n expire.\n","sig":null,"attributes":[{"value":"/ Deadline expired before operation could complete. For operations that","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":298824,"byte_end":298897,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ change the state of the system, this error may be returned even if the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":298902,"byte_end":298976,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ operation has completed successfully. For example, a successful response","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":298981,"byte_end":299057,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"/ from a server could have been delayed long enough for the deadline to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":299062,"byte_end":299135,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ expire.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":299140,"byte_end":299151,"line_start":205,"line_end":205,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3245},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":299363,"byte_end":299372,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"not_found","qualname":"<Status>::not_found","value":"pub fn not_found<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Some requested entity (e.g., file or directory) was not found.\n","sig":null,"attributes":[{"value":"/ Some requested entity (e.g., file or directory) was not found.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":299285,"byte_end":299351,"line_start":210,"line_end":210,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3247},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":299574,"byte_end":299588,"line_start":217,"line_end":217,"column_start":12,"column_end":26},"name":"already_exists","qualname":"<Status>::already_exists","value":"pub fn already_exists<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Some entity that we attempted to create (e.g., file or directory) already\n exists.\n","sig":null,"attributes":[{"value":"/ Some entity that we attempted to create (e.g., file or directory) already","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":299469,"byte_end":299546,"line_start":215,"line_end":215,"column_start":5,"column_end":82}},{"value":"/ exists.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":299551,"byte_end":299562,"line_start":216,"line_end":216,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":300068,"byte_end":300085,"line_start":226,"line_end":226,"column_start":12,"column_end":29},"name":"permission_denied","qualname":"<Status>::permission_denied","value":"pub fn permission_denied<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" The caller does not have permission to execute the specified operation.\n `PermissionDenied` must not be used for rejections caused by exhausting\n some resource (use `ResourceExhausted` instead for those errors).\n `PermissionDenied` must not be used if the caller cannot be identified\n (use `Unauthenticated` instead for those errors).\n","sig":null,"attributes":[{"value":"/ The caller does not have permission to execute the specified operation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":299690,"byte_end":299765,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ `PermissionDenied` must not be used for rejections caused by exhausting","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":299770,"byte_end":299845,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ some resource (use `ResourceExhausted` instead for those errors).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":299850,"byte_end":299919,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ `PermissionDenied` must not be used if the caller cannot be identified","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":299924,"byte_end":299998,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ (use `Unauthenticated` instead for those errors).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":300003,"byte_end":300056,"line_start":225,"line_end":225,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3251},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":300324,"byte_end":300342,"line_start":232,"line_end":232,"column_start":12,"column_end":30},"name":"resource_exhausted","qualname":"<Status>::resource_exhausted","value":"pub fn resource_exhausted<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Some resource has been exhausted, perhaps a per-user quota, or perhaps\n the entire file system is out of space.\n","sig":null,"attributes":[{"value":"/ Some resource has been exhausted, perhaps a per-user quota, or perhaps","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":300190,"byte_end":300264,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ the entire file system is out of space.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":300269,"byte_end":300312,"line_start":231,"line_end":231,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3253},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":301420,"byte_end":301439,"line_start":250,"line_end":250,"column_start":12,"column_end":31},"name":"failed_precondition","qualname":"<Status>::failed_precondition","value":"pub fn failed_precondition<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Operation was rejected because the system is not in a state required for\n the operation's execution. For example, directory to be deleted may be\n non-empty, an rmdir operation is applied to a non-directory, etc.","sig":null,"attributes":[{"value":"/ Operation was rejected because the system is not in a state required for","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":300448,"byte_end":300524,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ the operation's execution. For example, directory to be deleted may be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":300529,"byte_end":300603,"line_start":237,"line_end":237,"column_start":5,"column_end":79}},{"value":"/ non-empty, an rmdir operation is applied to a non-directory, etc.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":300608,"byte_end":300677,"line_start":238,"line_end":238,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":300682,"byte_end":300685,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ A litmus test that may help a service implementor in deciding between","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":300690,"byte_end":300763,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/ `FailedPrecondition`, `Aborted`, and `Unavailable`:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":300768,"byte_end":300823,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/ (a) Use `Unavailable` if the client can retry just the failing call.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":300828,"byte_end":300900,"line_start":242,"line_end":242,"column_start":5,"column_end":77}},{"value":"/ (b) Use `Aborted` if the client should retry at a higher-level (e.g.,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":300905,"byte_end":300978,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/     restarting a read-modify-write sequence).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":300983,"byte_end":301032,"line_start":244,"line_end":244,"column_start":5,"column_end":54}},{"value":"/ (c) Use `FailedPrecondition` if the client should not retry until the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":301037,"byte_end":301110,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/     system state has been explicitly fixed.  E.g., if an \"rmdir\" fails","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":301115,"byte_end":301189,"line_start":246,"line_end":246,"column_start":5,"column_end":79}},{"value":"/     because the directory is non-empty, `FailedPrecondition` should be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":301194,"byte_end":301268,"line_start":247,"line_end":247,"column_start":5,"column_end":79}},{"value":"/     returned since the client should not retry unless they have first","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":301273,"byte_end":301346,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/     fixed up the directory by deleting files from it.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":301351,"byte_end":301408,"line_start":249,"line_end":249,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3255},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":301808,"byte_end":301815,"line_start":259,"line_end":259,"column_start":12,"column_end":19},"name":"aborted","qualname":"<Status>::aborted","value":"pub fn aborted<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" The operation was aborted, typically due to a concurrency issue like\n sequencer check failures, transaction aborts, etc.","sig":null,"attributes":[{"value":"/ The operation was aborted, typically due to a concurrency issue like","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":301546,"byte_end":301618,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/ sequencer check failures, transaction aborts, etc.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":301623,"byte_end":301677,"line_start":255,"line_end":255,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":301682,"byte_end":301685,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ See litmus test above for deciding between `FailedPrecondition`,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":301690,"byte_end":301758,"line_start":257,"line_end":257,"column_start":5,"column_end":73}},{"value":"/ `Aborted`, and `Unavailable`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":301763,"byte_end":301796,"line_start":258,"line_end":258,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3257},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":302715,"byte_end":302727,"line_start":276,"line_end":276,"column_start":12,"column_end":24},"name":"out_of_range","qualname":"<Status>::out_of_range","value":"pub fn out_of_range<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Operation was attempted past the valid range. E.g., seeking or reading\n past end of file.","sig":null,"attributes":[{"value":"/ Operation was attempted past the valid range. E.g., seeking or reading","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":301911,"byte_end":301985,"line_start":263,"line_end":263,"column_start":5,"column_end":79}},{"value":"/ past end of file.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":301990,"byte_end":302011,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":302016,"byte_end":302019,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Unlike `InvalidArgument`, this error indicates a problem that may be","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":302024,"byte_end":302096,"line_start":266,"line_end":266,"column_start":5,"column_end":77}},{"value":"/ fixed if the system state changes. For example, a 32-bit file system will","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":302101,"byte_end":302178,"line_start":267,"line_end":267,"column_start":5,"column_end":82}},{"value":"/ generate `InvalidArgument if asked to read at an offset that is not in the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":302183,"byte_end":302261,"line_start":268,"line_end":268,"column_start":5,"column_end":83}},{"value":"/ range [0,2^32-1], but it will generate `OutOfRange` if asked to read from","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":302266,"byte_end":302343,"line_start":269,"line_end":269,"column_start":5,"column_end":82}},{"value":"/ an offset past the current file size.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":302348,"byte_end":302389,"line_start":270,"line_end":270,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":302394,"byte_end":302397,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ There is a fair bit of overlap between `FailedPrecondition` and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":302402,"byte_end":302469,"line_start":272,"line_end":272,"column_start":5,"column_end":72}},{"value":"/ `OutOfRange`. We recommend using `OutOfRange` (the more specific error)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":302474,"byte_end":302549,"line_start":273,"line_end":273,"column_start":5,"column_end":80}},{"value":"/ when it applies so that callers who are iterating through a space can","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":302554,"byte_end":302627,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ easily look for an `OutOfRange` error to detect when they are done.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":302632,"byte_end":302703,"line_start":275,"line_end":275,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3259},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":302912,"byte_end":302925,"line_start":281,"line_end":281,"column_start":12,"column_end":25},"name":"unimplemented","qualname":"<Status>::unimplemented","value":"pub fn unimplemented<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Operation is not implemented or not supported/enabled in this service.\n","sig":null,"attributes":[{"value":"/ Operation is not implemented or not supported/enabled in this service.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":302826,"byte_end":302900,"line_start":280,"line_end":280,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3261},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":303194,"byte_end":303202,"line_start":287,"line_end":287,"column_start":12,"column_end":20},"name":"internal","qualname":"<Status>::internal","value":"pub fn internal<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Internal errors. Means some invariants expected by underlying system has\n been broken. If you see one of these errors, something is very broken.\n","sig":null,"attributes":[{"value":"/ Internal errors. Means some invariants expected by underlying system has","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":303027,"byte_end":303103,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ been broken. If you see one of these errors, something is very broken.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":303108,"byte_end":303182,"line_start":286,"line_end":286,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3263},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":303574,"byte_end":303585,"line_start":296,"line_end":296,"column_start":12,"column_end":23},"name":"unavailable","qualname":"<Status>::unavailable","value":"pub fn unavailable<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" The service is currently unavailable.  This is a most likely a transient\n condition and may be corrected by retrying with a back-off.","sig":null,"attributes":[{"value":"/ The service is currently unavailable.  This is a most likely a transient","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":303299,"byte_end":303375,"line_start":291,"line_end":291,"column_start":5,"column_end":81}},{"value":"/ condition and may be corrected by retrying with a back-off.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":303380,"byte_end":303443,"line_start":292,"line_end":292,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":303448,"byte_end":303451,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ See litmus test above for deciding between `FailedPrecondition`,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":303456,"byte_end":303524,"line_start":294,"line_end":294,"column_start":5,"column_end":73}},{"value":"/ `Aborted`, and `Unavailable`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":303529,"byte_end":303562,"line_start":295,"line_end":295,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":303739,"byte_end":303748,"line_start":301,"line_end":301,"column_start":12,"column_end":21},"name":"data_loss","qualname":"<Status>::data_loss","value":"pub fn data_loss<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Unrecoverable data loss or corruption.\n","sig":null,"attributes":[{"value":"/ Unrecoverable data loss or corruption.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":303685,"byte_end":303727,"line_start":300,"line_end":300,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":303946,"byte_end":303961,"line_start":307,"line_end":307,"column_start":12,"column_end":27},"name":"unauthenticated","qualname":"<Status>::unauthenticated","value":"pub fn unauthenticated<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" The request does not have valid authentication credentials for the\n operation.\n","sig":null,"attributes":[{"value":"/ The request does not have valid authentication credentials for the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":303845,"byte_end":303915,"line_start":305,"line_end":305,"column_start":5,"column_end":75}},{"value":"/ operation.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":303920,"byte_end":303934,"line_start":306,"line_end":306,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3282},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":308456,"byte_end":308460,"line_start":430,"line_end":430,"column_start":12,"column_end":16},"name":"code","qualname":"<Status>::code","value":"pub fn code(&Self) -> Code","parent":null,"children":[],"decl_id":null,"docs":" Get the gRPC `Code` of this `Status`.\n","sig":null,"attributes":[{"value":"/ Get the gRPC `Code` of this `Status`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":308403,"byte_end":308444,"line_start":429,"line_end":429,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":308567,"byte_end":308574,"line_start":435,"line_end":435,"column_start":12,"column_end":19},"name":"message","qualname":"<Status>::message","value":"pub fn message(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the text error message of this `Status`.\n","sig":null,"attributes":[{"value":"/ Get the text error message of this `Status`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":308507,"byte_end":308555,"line_start":434,"line_end":434,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":308687,"byte_end":308694,"line_start":440,"line_end":440,"column_start":12,"column_end":19},"name":"details","qualname":"<Status>::details","value":"pub fn details(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the opaque error details of this `Status`.\n","sig":null,"attributes":[{"value":"/ Get the opaque error details of this `Status`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":308625,"byte_end":308675,"line_start":439,"line_end":439,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3285},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":308801,"byte_end":308809,"line_start":445,"line_end":445,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Status>::metadata","value":"pub fn metadata(&Self) -> &MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the custom metadata.\n","sig":null,"attributes":[{"value":"/ Get a reference to the custom metadata.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":308746,"byte_end":308789,"line_start":444,"line_end":444,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3286},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":308932,"byte_end":308944,"line_start":450,"line_end":450,"column_start":12,"column_end":24},"name":"metadata_mut","qualname":"<Status>::metadata_mut","value":"pub fn metadata_mut(&mut Self) -> &mut MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the custom metadata.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the custom metadata.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":308869,"byte_end":308920,"line_start":449,"line_end":449,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3289},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":310323,"byte_end":310335,"line_start":489,"line_end":489,"column_start":12,"column_end":24},"name":"with_details","qualname":"<Status>::with_details","value":"pub fn with_details<impl Into<String>: Into<String>>(Code, impl Into<String>,\n                                                     Bytes) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code, message, and binary details field.\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code, message, and binary details field.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":310225,"byte_end":310311,"line_start":488,"line_end":488,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":310591,"byte_end":310604,"line_start":494,"line_end":494,"column_start":12,"column_end":25},"name":"with_metadata","qualname":"<Status>::with_metadata","value":"pub fn with_metadata<impl Into<String>: Into<String>>(Code, impl Into<String>,\n                                                      MetadataMap) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code, message, and custom metadata\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code, message, and custom metadata","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":310499,"byte_end":310579,"line_start":493,"line_end":493,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":310883,"byte_end":310908,"line_start":499,"line_end":499,"column_start":12,"column_end":37},"name":"with_details_and_metadata","qualname":"<Status>::with_details_and_metadata","value":"pub fn with_details_and_metadata<impl Into<String>: Into<String>>(Code,\n                                                                  impl Into<String>,\n                                                                  Bytes,\n                                                                  MetadataMap)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code, message, binary details field and custom metadata\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code, message, binary details field and custom metadata","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":310770,"byte_end":310871,"line_start":498,"line_end":498,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":311285,"byte_end":311292,"line_start":515,"line_end":515,"column_start":12,"column_end":19},"name":"to_http","qualname":"<Status>::to_http","value":"pub fn to_http(Self) -> http::Response<BoxBody>","parent":null,"children":[],"decl_id":null,"docs":" Build an `http::Response` from the given `Status`.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":311175,"byte_end":311214,"line_start":513,"line_end":513,"column_start":5,"column_end":44}},{"value":"/ Build an `http::Response` from the given `Status`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":311219,"byte_end":311273,"line_start":514,"line_end":514,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3314},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":315772,"byte_end":315780,"line_start":660,"line_end":660,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<Code>::from_i32","value":"pub fn from_i32(i32) -> Code","parent":null,"children":[],"decl_id":null,"docs":" Get the `Code` that represents the integer, if known.","sig":null,"attributes":[{"value":"/ Get the `Code` that represents the integer, if known.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":315636,"byte_end":315693,"line_start":657,"line_end":657,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":315698,"byte_end":315701,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ If not known, returns `Code::Unknown` (surprise!).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":315706,"byte_end":315760,"line_start":659,"line_end":659,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":3350},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codegen","qualname":"::codegen","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","parent":null,"children":[{"krate":0,"index":3351},{"krate":0,"index":3354},{"krate":0,"index":3357},{"krate":0,"index":3358},{"krate":0,"index":3361},{"krate":0,"index":3364},{"krate":0,"index":3367},{"krate":0,"index":3370},{"krate":0,"index":3373},{"krate":0,"index":3376},{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3383},{"krate":0,"index":3386},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3393},{"krate":0,"index":3396},{"krate":0,"index":3398},{"krate":0,"index":4766},{"krate":0,"index":4767},{"krate":0,"index":3400},{"krate":0,"index":3402}],"decl_id":null,"docs":" Codegen exports used by `tonic-build`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"codegen\")","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":4146,"byte_end":4173,"line_start":110,"line_end":110,"column_start":1,"column_end":28}},{"value":"/ Codegen exports used by `tonic-build`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323226,"byte_end":323268,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":3389},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323577,"byte_end":323585,"line_start":13,"line_end":13,"column_start":10,"column_end":18},"name":"StdError","qualname":"::codegen::StdError","value":"Box<dyn std::error::Error + Send + Sync + 'static>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3393},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323677,"byte_end":323686,"line_start":16,"line_end":16,"column_start":10,"column_end":19},"name":"BoxFuture","qualname":"::codegen::BoxFuture","value":"self::Pin<Box<dyn self::Future<Output = Result<T, E>> + Send + 'static>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3396},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323778,"byte_end":323787,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"name":"BoxStream","qualname":"::codegen::BoxStream","value":"self::Pin<Box<dyn futures_core::Stream<Item = Result<T, crate::Status>> +\n              Send + 'static>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3398},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323898,"byte_end":323902,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"name":"http","qualname":"::codegen::http","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","parent":null,"children":[{"krate":0,"index":3399}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4766},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323955,"byte_end":323960,"line_start":25,"line_end":25,"column_start":10,"column_end":15},"name":"Never","qualname":"::codegen::Never","value":"pub enum Never { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":5437,"byte_end":5438,"line_start":44,"line_end":44,"column_start":18,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":6053,"byte_end":6054,"line_start":71,"line_end":71,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":6316,"byte_end":6323,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":7069,"byte_end":7076,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":7634,"byte_end":7641,"line_start":142,"line_end":142,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":8849,"byte_end":8856,"line_start":186,"line_end":186,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":9052,"byte_end":9061,"line_start":197,"line_end":197,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":11604,"byte_end":11608,"line_start":35,"line_end":35,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":184},{"krate":0,"index":193},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":17405,"byte_end":17409,"line_start":215,"line_end":215,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":17604,"byte_end":17608,"line_start":224,"line_end":224,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18932,"byte_end":18933,"line_start":33,"line_end":33,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":21863,"byte_end":21872,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":21999,"byte_end":22008,"line_start":23,"line_end":23,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":22445,"byte_end":22454,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":22556,"byte_end":22565,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":22970,"byte_end":22979,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":25114,"byte_end":25123,"line_start":30,"line_end":30,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":25331,"byte_end":25340,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":26774,"byte_end":26783,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":388},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":31259,"byte_end":31268,"line_start":214,"line_end":214,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":33918,"byte_end":33927,"line_start":285,"line_end":285,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/encode.rs","byte_start":36669,"byte_end":36679,"line_start":93,"line_end":93,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/encode.rs","byte_start":37093,"byte_end":37103,"line_start":114,"line_end":114,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/prost.rs","byte_start":38801,"byte_end":38811,"line_start":13,"line_end":13,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/prost.rs","byte_start":38911,"byte_end":38921,"line_start":19,"line_end":19,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/prost.rs","byte_start":39457,"byte_end":39469,"line_start":43,"line_end":43,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/prost.rs","byte_start":39896,"byte_end":39908,"line_start":59,"line_end":59,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":47635,"byte_end":47640,"line_start":63,"line_end":63,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":48615,"byte_end":48620,"line_start":97,"line_end":97,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":48746,"byte_end":48752,"line_start":103,"line_end":103,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":50769,"byte_end":50775,"line_start":165,"line_end":165,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":50905,"byte_end":50925,"line_start":173,"line_end":173,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":51036,"byte_end":51056,"line_start":179,"line_end":179,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":51200,"byte_end":51220,"line_start":185,"line_end":185,"column_start":16,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":51449,"byte_end":51474,"line_start":194,"line_end":194,"column_start":6,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":51605,"byte_end":51630,"line_start":200,"line_end":200,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":51742,"byte_end":51767,"line_start":206,"line_end":206,"column_start":16,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52810,"byte_end":52821,"line_start":37,"line_end":37,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":56432,"byte_end":56443,"line_start":142,"line_end":142,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":56682,"byte_end":56693,"line_start":150,"line_end":150,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":56802,"byte_end":56813,"line_start":156,"line_end":156,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":56934,"byte_end":56945,"line_start":162,"line_end":162,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":57053,"byte_end":57064,"line_start":168,"line_end":168,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":57230,"byte_end":57241,"line_start":174,"line_end":174,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":57373,"byte_end":57391,"line_start":180,"line_end":180,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":57562,"byte_end":57573,"line_start":187,"line_end":187,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":57718,"byte_end":57723,"line_start":193,"line_end":193,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":57910,"byte_end":57921,"line_start":200,"line_end":200,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":58255,"byte_end":58266,"line_start":214,"line_end":214,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":59452,"byte_end":59463,"line_start":254,"line_end":254,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":59938,"byte_end":59956,"line_start":272,"line_end":272,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":60102,"byte_end":60120,"line_start":278,"line_end":278,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":60194,"byte_end":60212,"line_start":284,"line_end":284,"column_start":16,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":66457,"byte_end":66468,"line_start":199,"line_end":199,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101983,"byte_end":101987,"line_start":1221,"line_end":1221,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":102788,"byte_end":102792,"line_start":1246,"line_end":1246,"column_start":26,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":102825,"byte_end":102829,"line_start":1247,"line_end":1247,"column_start":26,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":102889,"byte_end":102896,"line_start":1251,"line_end":1251,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":103710,"byte_end":103717,"line_start":1276,"line_end":1276,"column_start":26,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":103750,"byte_end":103757,"line_start":1277,"line_end":1277,"column_start":26,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":103839,"byte_end":103849,"line_start":1281,"line_end":1281,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":104186,"byte_end":104196,"line_start":1295,"line_end":1295,"column_start":45,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":104252,"byte_end":104262,"line_start":1296,"line_end":1296,"column_start":45,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":104323,"byte_end":104327,"line_start":1300,"line_end":1300,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":104836,"byte_end":104840,"line_start":1318,"line_end":1318,"column_start":32,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":104898,"byte_end":104904,"line_start":1322,"line_end":1322,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":105491,"byte_end":105500,"line_start":1343,"line_end":1343,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":106123,"byte_end":106132,"line_start":1364,"line_end":1364,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":106688,"byte_end":106697,"line_start":1387,"line_end":1387,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107066,"byte_end":107078,"line_start":1403,"line_end":1403,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107368,"byte_end":107380,"line_start":1416,"line_end":1416,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107628,"byte_end":107640,"line_start":1427,"line_end":1427,"column_start":45,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107696,"byte_end":107708,"line_start":1428,"line_end":1428,"column_start":45,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107776,"byte_end":107781,"line_start":1432,"line_end":1432,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110745,"byte_end":110756,"line_start":1537,"line_end":1537,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113144,"byte_end":113157,"line_start":1617,"line_end":1617,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122803,"byte_end":122816,"line_start":1918,"line_end":1918,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":123643,"byte_end":123649,"line_start":1953,"line_end":1953,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":124523,"byte_end":124529,"line_start":1980,"line_end":1980,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":124684,"byte_end":124690,"line_start":1986,"line_end":1986,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":126424,"byte_end":126435,"line_start":2042,"line_end":2042,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":127025,"byte_end":127036,"line_start":2062,"line_end":2062,"column_start":53,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":129979,"byte_end":129990,"line_start":2150,"line_end":2150,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":131249,"byte_end":131260,"line_start":2191,"line_end":2191,"column_start":51,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":134572,"byte_end":134578,"line_start":2298,"line_end":2298,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":136464,"byte_end":136470,"line_start":2357,"line_end":2357,"column_start":51,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":139326,"byte_end":139337,"line_start":2445,"line_end":2445,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":139574,"byte_end":139585,"line_start":2453,"line_end":2453,"column_start":63,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":140192,"byte_end":140198,"line_start":2475,"line_end":2475,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":140414,"byte_end":140420,"line_start":2483,"line_end":2483,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149332,"byte_end":149345,"line_start":43,"line_end":43,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":157456,"byte_end":157469,"line_start":285,"line_end":285,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160737,"byte_end":160750,"line_start":391,"line_end":391,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":161234,"byte_end":161247,"line_start":408,"line_end":408,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":161376,"byte_end":161389,"line_start":415,"line_end":415,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":161556,"byte_end":161569,"line_start":421,"line_end":421,"column_start":57,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":163625,"byte_end":163638,"line_start":507,"line_end":507,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":163875,"byte_end":163880,"line_start":516,"line_end":516,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":164070,"byte_end":164083,"line_start":523,"line_end":523,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":164211,"byte_end":164221,"line_start":532,"line_end":532,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":164322,"byte_end":164332,"line_start":538,"line_end":538,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":164481,"byte_end":164491,"line_start":544,"line_end":544,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":164510,"byte_end":164523,"line_start":546,"line_end":546,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":164634,"byte_end":164647,"line_start":552,"line_end":552,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":164906,"byte_end":164919,"line_start":563,"line_end":563,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":165308,"byte_end":165321,"line_start":574,"line_end":574,"column_start":32,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":165369,"byte_end":165382,"line_start":576,"line_end":576,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":165569,"byte_end":165582,"line_start":583,"line_end":583,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":165743,"byte_end":165756,"line_start":590,"line_end":590,"column_start":44,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":165920,"byte_end":165933,"line_start":597,"line_end":597,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":166087,"byte_end":166100,"line_start":604,"line_end":604,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":166290,"byte_end":166303,"line_start":611,"line_end":611,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":167257,"byte_end":167270,"line_start":646,"line_end":646,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":167417,"byte_end":167430,"line_start":653,"line_end":653,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":167635,"byte_end":167641,"line_start":660,"line_end":660,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":167803,"byte_end":167809,"line_start":667,"line_end":667,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":168447,"byte_end":168460,"line_start":688,"line_end":688,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":168661,"byte_end":168674,"line_start":698,"line_end":698,"column_start":62,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":176316,"byte_end":176320,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1501},{"krate":0,"index":1508},{"krate":0,"index":1513},{"krate":0,"index":1520},{"krate":0,"index":1525},{"krate":0,"index":1530},{"krate":0,"index":1533},{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":182163,"byte_end":182167,"line_start":229,"line_end":229,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":182933,"byte_end":182934,"line_start":21,"line_end":21,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":183829,"byte_end":183830,"line_start":51,"line_end":51,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":184686,"byte_end":184687,"line_start":80,"line_end":80,"column_start":48,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":185597,"byte_end":185598,"line_start":110,"line_end":110,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":197577,"byte_end":197585,"line_start":43,"line_end":43,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1692},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":205847,"byte_end":205855,"line_start":304,"line_end":304,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1719}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":206469,"byte_end":206477,"line_start":326,"line_end":326,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":206630,"byte_end":206638,"line_start":334,"line_end":334,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":206811,"byte_end":206819,"line_start":342,"line_end":342,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1727},{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":206985,"byte_end":206993,"line_start":350,"line_end":350,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":207129,"byte_end":207137,"line_start":356,"line_end":356,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1733}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":207765,"byte_end":207780,"line_start":21,"line_end":21,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":208077,"byte_end":208092,"line_start":32,"line_end":32,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191863,"byte_end":191870,"line_start":79,"line_end":79,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1873},{"krate":0,"index":1876},{"krate":0,"index":1878},{"krate":0,"index":1880},{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":195222,"byte_end":195229,"line_start":180,"line_end":180,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":195714,"byte_end":195728,"line_start":196,"line_end":196,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1893},{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":196056,"byte_end":196063,"line_start":206,"line_end":206,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":196201,"byte_end":196215,"line_start":212,"line_end":212,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","byte_start":232955,"byte_end":232965,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","byte_start":233079,"byte_end":233088,"line_start":31,"line_end":31,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","byte_start":233237,"byte_end":233246,"line_start":38,"line_end":38,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1929},{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/incoming.rs","byte_start":237432,"byte_end":237443,"line_start":136,"line_end":136,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2014}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/incoming.rs","byte_start":237780,"byte_end":237791,"line_start":149,"line_end":149,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2016},{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":238450,"byte_end":238465,"line_start":18,"line_end":18,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":238620,"byte_end":238635,"line_start":25,"line_end":25,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":213007,"byte_end":213020,"line_start":98,"line_end":98,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214222,"byte_end":214228,"line_start":135,"line_end":135,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2186}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214285,"byte_end":214291,"line_start":139,"line_end":139,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2188}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214499,"byte_end":214505,"line_start":149,"line_end":149,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2195},{"krate":0,"index":2197},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2207},{"krate":0,"index":2209},{"krate":0,"index":2211}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":223178,"byte_end":223184,"line_start":411,"line_end":411,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2221}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":223885,"byte_end":223891,"line_start":436,"line_end":436,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2229},{"krate":0,"index":2232},{"krate":0,"index":2235},{"krate":0,"index":2239},{"krate":0,"index":2245},{"krate":0,"index":2252}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":228871,"byte_end":228877,"line_start":578,"line_end":578,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2254}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":229130,"byte_end":229133,"line_start":590,"line_end":590,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":2266}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":229978,"byte_end":229981,"line_start":618,"line_end":618,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2270}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":230271,"byte_end":230278,"line_start":631,"line_end":631,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":231631,"byte_end":231644,"line_start":679,"line_end":679,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2290}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/error.rs","byte_start":240548,"byte_end":240553,"line_start":27,"line_end":27,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2309},{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2313}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/error.rs","byte_start":241431,"byte_end":241436,"line_start":60,"line_end":60,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/error.rs","byte_start":241742,"byte_end":241747,"line_start":74,"line_end":74,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2317}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/error.rs","byte_start":242022,"byte_end":242027,"line_start":84,"line_end":84,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2319}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/add_origin.rs","byte_start":242996,"byte_end":243005,"line_start":11,"line_end":11,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2342}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/add_origin.rs","byte_start":243153,"byte_end":243162,"line_start":17,"line_end":17,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/connection.rs","byte_start":245025,"byte_end":245035,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2439},{"krate":0,"index":2444},{"krate":0,"index":2448}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/connection.rs","byte_start":247413,"byte_end":247423,"line_start":92,"line_end":92,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2451},{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/connection.rs","byte_start":247815,"byte_end":247825,"line_start":106,"line_end":106,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2457},{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/connection.rs","byte_start":247930,"byte_end":247940,"line_start":114,"line_end":114,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2460}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/connector.rs","byte_start":248725,"byte_end":248734,"line_start":29,"line_end":29,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2495}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/connector.rs","byte_start":249004,"byte_end":249013,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/discover.rs","byte_start":250443,"byte_end":250463,"line_start":21,"line_end":21,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2546}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/discover.rs","byte_start":250613,"byte_end":250633,"line_start":27,"line_end":27,"column_start":39,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2549},{"krate":0,"index":2550}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/discover.rs","byte_start":251897,"byte_end":251917,"line_start":55,"line_end":55,"column_start":38,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":252291,"byte_end":252292,"line_start":14,"line_end":14,"column_start":16,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":252397,"byte_end":252404,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2601}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":252526,"byte_end":252533,"line_start":24,"line_end":24,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2604}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":252638,"byte_end":252645,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":252669,"byte_end":252676,"line_start":32,"line_end":32,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2607}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":252902,"byte_end":252909,"line_start":42,"line_end":42,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":253490,"byte_end":253491,"line_start":62,"line_end":62,"column_start":25,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":253581,"byte_end":253589,"line_start":66,"line_end":66,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2619}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":253720,"byte_end":253728,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2622},{"krate":0,"index":2623}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":253935,"byte_end":253943,"line_start":82,"line_end":82,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2625}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":254169,"byte_end":254177,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2629}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/layer.rs","byte_start":255173,"byte_end":255187,"line_start":15,"line_end":15,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2658},{"krate":0,"index":2662},{"krate":0,"index":2666}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/layer.rs","byte_start":256063,"byte_end":256070,"line_start":51,"line_end":51,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2674},{"krate":0,"index":2675}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/layer.rs","byte_start":256320,"byte_end":256333,"line_start":67,"line_end":67,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2679},{"krate":0,"index":2680}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/reconnect.rs","byte_start":257174,"byte_end":257183,"line_start":33,"line_end":33,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2726}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/reconnect.rs","byte_start":257581,"byte_end":257590,"line_start":50,"line_end":50,"column_start":50,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2736}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/reconnect.rs","byte_start":261397,"byte_end":261406,"line_start":158,"line_end":158,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2740}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/reconnect.rs","byte_start":262179,"byte_end":262193,"line_start":190,"line_end":190,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2743},{"krate":0,"index":2744}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/reconnect.rs","byte_start":262494,"byte_end":262508,"line_start":204,"line_end":204,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2749},{"krate":0,"index":2750}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":263351,"byte_end":263357,"line_start":17,"line_end":17,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2784}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":263612,"byte_end":263618,"line_start":28,"line_end":28,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2790}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":263951,"byte_end":263957,"line_start":39,"line_end":39,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":264571,"byte_end":264577,"line_start":61,"line_end":61,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2806}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":264859,"byte_end":264861,"line_start":76,"line_end":76,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2818}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":265139,"byte_end":265141,"line_start":86,"line_end":86,"column_start":42,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":266038,"byte_end":266040,"line_start":117,"line_end":117,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2835}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":266266,"byte_end":266268,"line_start":127,"line_end":127,"column_start":36,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2840}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/tls.rs","byte_start":267377,"byte_end":267389,"line_start":44,"line_end":44,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/tls.rs","byte_start":269467,"byte_end":269479,"line_start":114,"line_end":114,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2905}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/tls.rs","byte_start":269689,"byte_end":269700,"line_start":125,"line_end":125,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/tls.rs","byte_start":271361,"byte_end":271372,"line_start":174,"line_end":174,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2914}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/tls.rs","byte_start":271516,"byte_end":271524,"line_start":180,"line_end":180,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2916}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/tls.rs","byte_start":272005,"byte_end":272013,"line_start":193,"line_end":193,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/user_agent.rs","byte_start":273995,"byte_end":274004,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2961}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/user_agent.rs","byte_start":274591,"byte_end":274600,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":2970},{"krate":0,"index":2971}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":275881,"byte_end":275892,"line_start":14,"line_end":14,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3009},{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3013}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":276566,"byte_end":276577,"line_start":39,"line_end":39,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3015}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":276652,"byte_end":276660,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3017}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277925,"byte_end":277936,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3077},{"krate":0,"index":3079}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":278525,"byte_end":278536,"line_start":44,"line_end":44,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":278709,"byte_end":278720,"line_start":53,"line_end":53,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3085}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284442,"byte_end":284449,"line_start":103,"line_end":103,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3133}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":287986,"byte_end":287987,"line_start":226,"line_end":226,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3137}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":288098,"byte_end":288105,"line_start":232,"line_end":232,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3140}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":288208,"byte_end":288209,"line_start":238,"line_end":238,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3145}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":288431,"byte_end":288438,"line_start":250,"line_end":250,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3148},{"krate":0,"index":3149},{"krate":0,"index":3150}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":288634,"byte_end":288635,"line_start":262,"line_end":262,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289346,"byte_end":289354,"line_start":10,"line_end":10,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3170},{"krate":0,"index":3171}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":295103,"byte_end":295107,"line_start":113,"line_end":113,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3229}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":297203,"byte_end":297207,"line_start":156,"line_end":156,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3231}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":297379,"byte_end":297385,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3233},{"krate":0,"index":3235},{"krate":0,"index":3237},{"krate":0,"index":3239},{"krate":0,"index":3241},{"krate":0,"index":3243},{"krate":0,"index":3245},{"krate":0,"index":3247},{"krate":0,"index":3249},{"krate":0,"index":3251},{"krate":0,"index":3253},{"krate":0,"index":3255},{"krate":0,"index":3257},{"krate":0,"index":3259},{"krate":0,"index":3261},{"krate":0,"index":3263},{"krate":0,"index":3265},{"krate":0,"index":3267},{"krate":0,"index":3269},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3276},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3288},{"krate":0,"index":3289},{"krate":0,"index":3291},{"krate":0,"index":3293},{"krate":0,"index":3295}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":311698,"byte_end":311704,"line_start":529,"line_end":529,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3297}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":312571,"byte_end":312577,"line_start":561,"line_end":561,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":312719,"byte_end":312724,"line_start":568,"line_end":568,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3303}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":312833,"byte_end":312839,"line_start":574,"line_end":574,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3305}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":313923,"byte_end":313929,"line_start":601,"line_end":601,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3310}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":314244,"byte_end":314250,"line_start":614,"line_end":614,"column_start":16,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":315625,"byte_end":315629,"line_start":656,"line_end":656,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3317}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":318332,"byte_end":318336,"line_start":723,"line_end":723,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3319}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323992,"byte_end":323997,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3401}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":324132,"byte_end":324137,"line_start":33,"line_end":33,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":3421,"byte_end":3425,"line_start":79,"line_end":79,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":3435,"byte_end":3441,"line_start":80,"line_end":80,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":86}},{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":3451,"byte_end":3456,"line_start":81,"line_end":81,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":258}},{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":3466,"byte_end":3474,"line_start":82,"line_end":82,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":582}},{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":3484,"byte_end":3490,"line_start":83,"line_end":83,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1431}},{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":3584,"byte_end":3593,"line_start":87,"line_end":87,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1633}},{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188756,"byte_end":188763,"line_start":89,"line_end":89,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1634}},{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/mod.rs","byte_start":188773,"byte_end":188779,"line_start":90,"line_end":90,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1899}},{"kind":"Mod","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/lib.rs","byte_start":4233,"byte_end":4240,"line_start":112,"line_end":112,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3350}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4650,"byte_end":4656,"line_start":16,"line_end":16,"column_start":25,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":51},"to":{"krate":0,"index":35}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4659,"byte_end":4663,"line_start":16,"line_end":16,"column_start":34,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":2840},"to":{"krate":0,"index":35}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":4666,"byte_end":4670,"line_start":16,"line_end":16,"column_start":41,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":2852},"to":{"krate":0,"index":35}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":5437,"byte_end":5438,"line_start":44,"line_end":44,"column_start":18,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":42},"to":{"krate":0,"index":35}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":6053,"byte_end":6054,"line_start":71,"line_end":71,"column_start":28,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":49},"to":{"krate":0,"index":51}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":6316,"byte_end":6323,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":52},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":7069,"byte_end":7076,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":52},"to":{"krate":18,"index":262}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":7634,"byte_end":7641,"line_start":142,"line_end":142,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":54},"to":{"krate":18,"index":262}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":8849,"byte_end":8856,"line_start":186,"line_end":186,"column_start":21,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":52},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/body.rs","byte_start":9052,"byte_end":9061,"line_start":197,"line_end":197,"column_start":19,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3403},"to":{"krate":18,"index":262}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":11604,"byte_end":11608,"line_start":35,"line_end":35,"column_start":9,"column_end":13},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":17405,"byte_end":17409,"line_start":215,"line_end":215,"column_start":26,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2461}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/grpc.rs","byte_start":17604,"byte_end":17608,"line_start":224,"line_end":224,"column_start":36,"column_end":40},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/client/service.rs","byte_start":18932,"byte_end":18933,"line_start":33,"line_end":33,"column_start":52,"column_end":53},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":244},"to":{"krate":0,"index":236}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":21863,"byte_end":21872,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":21999,"byte_end":22008,"line_start":23,"line_end":23,"column_start":14,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3409},"to":{"krate":17,"index":42}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":22445,"byte_end":22454,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":22556,"byte_end":22565,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/buffer.rs","byte_start":22970,"byte_end":22979,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3416},"to":{"krate":17,"index":140}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":25114,"byte_end":25123,"line_start":30,"line_end":30,"column_start":19,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":25331,"byte_end":25340,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":26774,"byte_end":26783,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":31259,"byte_end":31268,"line_start":214,"line_end":214,"column_start":20,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":358},"to":{"krate":23,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/decode.rs","byte_start":33918,"byte_end":33927,"line_start":285,"line_end":285,"column_start":24,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/encode.rs","byte_start":36669,"byte_end":36679,"line_start":93,"line_end":93,"column_start":9,"column_end":19},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/encode.rs","byte_start":37093,"byte_end":37103,"line_start":114,"line_end":114,"column_start":18,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3621},"to":{"krate":18,"index":262}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/prost.rs","byte_start":38801,"byte_end":38811,"line_start":13,"line_end":13,"column_start":24,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3626},"to":{"krate":2,"index":2818}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/prost.rs","byte_start":38911,"byte_end":38921,"line_start":19,"line_end":19,"column_start":22,"column_end":32},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3626},"to":{"krate":0,"index":567}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/prost.rs","byte_start":39457,"byte_end":39469,"line_start":43,"line_end":43,"column_start":30,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3638},"to":{"krate":0,"index":574}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/prost.rs","byte_start":39896,"byte_end":39908,"line_start":59,"line_end":59,"column_start":40,"column_end":52},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3651},"to":{"krate":0,"index":578}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codec/mod.rs","byte_start":20063,"byte_end":20070,"line_start":23,"line_end":23,"column_start":18,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2818},"to":{"krate":0,"index":567}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":47113,"byte_end":47118,"line_start":47,"line_end":47,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2461},"to":{"krate":0,"index":621}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":47121,"byte_end":47123,"line_start":47,"line_end":47,"column_start":34,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2496},"to":{"krate":0,"index":621}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":47126,"byte_end":47135,"line_start":47,"line_end":47,"column_start":39,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2491},"to":{"krate":0,"index":621}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":47138,"byte_end":47142,"line_start":47,"line_end":47,"column_start":51,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":9101},"to":{"krate":0,"index":621}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":47167,"byte_end":47173,"line_start":47,"line_end":47,"column_start":80,"column_end":86},"kind":"SuperTrait","from":{"krate":0,"index":612},"to":{"krate":0,"index":621}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":47635,"byte_end":47640,"line_start":63,"line_end":63,"column_start":39,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3671},"to":{"krate":0,"index":612}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":48615,"byte_end":48620,"line_start":97,"line_end":97,"column_start":24,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3671},"to":{"krate":0,"index":621}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":48746,"byte_end":48752,"line_start":103,"line_end":103,"column_start":39,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3685},"to":{"krate":0,"index":612}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":50769,"byte_end":50775,"line_start":165,"line_end":165,"column_start":24,"column_end":30},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3685},"to":{"krate":0,"index":621}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":50905,"byte_end":50925,"line_start":173,"line_end":173,"column_start":6,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":51036,"byte_end":51056,"line_start":179,"line_end":179,"column_start":23,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3664},"to":{"krate":2,"index":8902}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":51200,"byte_end":51220,"line_start":185,"line_end":185,"column_start":16,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3664},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":51449,"byte_end":51474,"line_start":194,"line_end":194,"column_start":6,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":51605,"byte_end":51630,"line_start":200,"line_end":200,"column_start":23,"column_end":48},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3699},"to":{"krate":2,"index":8902}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/encoding.rs","byte_start":51742,"byte_end":51767,"line_start":206,"line_end":206,"column_start":16,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3699},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":52810,"byte_end":52821,"line_start":37,"line_end":37,"column_start":25,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":56432,"byte_end":56443,"line_start":142,"line_end":142,"column_start":37,"column_end":48},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3707},"to":{"krate":2,"index":11378}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":56682,"byte_end":56693,"line_start":150,"line_end":150,"column_start":40,"column_end":51},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3707},"to":{"krate":2,"index":2737}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":56802,"byte_end":56813,"line_start":156,"line_end":156,"column_start":41,"column_end":52},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3707},"to":{"krate":2,"index":2737}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":56934,"byte_end":56945,"line_start":162,"line_end":162,"column_start":41,"column_end":52},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3707},"to":{"krate":2,"index":2439}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":57053,"byte_end":57064,"line_start":168,"line_end":168,"column_start":40,"column_end":51},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3707},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":57230,"byte_end":57241,"line_start":174,"line_end":174,"column_start":42,"column_end":53},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3707},"to":{"krate":2,"index":8902}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":57373,"byte_end":57391,"line_start":180,"line_end":180,"column_start":6,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":57562,"byte_end":57573,"line_start":187,"line_end":187,"column_start":59,"column_end":70},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3707},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":57718,"byte_end":57723,"line_start":193,"line_end":193,"column_start":51,"column_end":56},"kind":{"Impl":{"id":51}},"from":{"krate":17,"index":513},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":57910,"byte_end":57921,"line_start":200,"line_end":200,"column_start":64,"column_end":75},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3707},"to":{"krate":2,"index":2491}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":58255,"byte_end":58266,"line_start":214,"line_end":214,"column_start":44,"column_end":55},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3707},"to":{"krate":2,"index":2491}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":59452,"byte_end":59463,"line_start":254,"line_end":254,"column_start":52,"column_end":63},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3707},"to":{"krate":2,"index":2491}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":59938,"byte_end":59956,"line_start":272,"line_end":272,"column_start":23,"column_end":41},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3729},"to":{"krate":2,"index":8902}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":60102,"byte_end":60120,"line_start":278,"line_end":278,"column_start":18,"column_end":36},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3729},"to":{"krate":2,"index":2818}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/key.rs","byte_start":60194,"byte_end":60212,"line_start":284,"line_end":284,"column_start":16,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3729},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":66457,"byte_end":66468,"line_start":199,"line_end":199,"column_start":6,"column_end":17},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":101983,"byte_end":101987,"line_start":1221,"line_end":1221,"column_start":23,"column_end":27},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3741},"to":{"krate":2,"index":7318}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":102788,"byte_end":102792,"line_start":1246,"line_end":1246,"column_start":26,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3741},"to":{"krate":2,"index":2852}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":102825,"byte_end":102829,"line_start":1247,"line_end":1247,"column_start":26,"column_end":30},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3741},"to":{"krate":2,"index":2840}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":102889,"byte_end":102896,"line_start":1251,"line_end":1251,"column_start":23,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3773},"to":{"krate":2,"index":7318}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":103710,"byte_end":103717,"line_start":1276,"line_end":1276,"column_start":26,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3773},"to":{"krate":2,"index":2852}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":103750,"byte_end":103757,"line_start":1277,"line_end":1277,"column_start":26,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3773},"to":{"krate":2,"index":2840}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":103839,"byte_end":103849,"line_start":1281,"line_end":1281,"column_start":42,"column_end":52},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":7318}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":104186,"byte_end":104196,"line_start":1295,"line_end":1295,"column_start":45,"column_end":55},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":2852}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":104252,"byte_end":104262,"line_start":1296,"line_end":1296,"column_start":45,"column_end":55},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":2840}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":104323,"byte_end":104327,"line_start":1300,"line_end":1300,"column_start":23,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3788},"to":{"krate":2,"index":7318}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":104836,"byte_end":104840,"line_start":1318,"line_end":1318,"column_start":32,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3788},"to":{"krate":2,"index":7207}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":104898,"byte_end":104904,"line_start":1322,"line_end":1322,"column_start":23,"column_end":29},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3805},"to":{"krate":2,"index":7318}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":105491,"byte_end":105500,"line_start":1343,"line_end":1343,"column_start":23,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3822},"to":{"krate":2,"index":7318}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":106123,"byte_end":106132,"line_start":1364,"line_end":1364,"column_start":42,"column_end":51},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3839},"to":{"krate":2,"index":7318}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":106688,"byte_end":106697,"line_start":1387,"line_end":1387,"column_start":53,"column_end":62},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3839},"to":{"krate":2,"index":7182}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107066,"byte_end":107078,"line_start":1403,"line_end":1403,"column_start":42,"column_end":54},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3848},"to":{"krate":2,"index":7318}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107368,"byte_end":107380,"line_start":1416,"line_end":1416,"column_start":53,"column_end":65},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3848},"to":{"krate":2,"index":7182}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107628,"byte_end":107640,"line_start":1427,"line_end":1427,"column_start":45,"column_end":57},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3848},"to":{"krate":2,"index":2852}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107696,"byte_end":107708,"line_start":1428,"line_end":1428,"column_start":45,"column_end":57},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3848},"to":{"krate":2,"index":2840}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":107776,"byte_end":107781,"line_start":1432,"line_end":1432,"column_start":29,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":110745,"byte_end":110756,"line_start":1537,"line_end":1537,"column_start":29,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":113144,"byte_end":113157,"line_start":1617,"line_end":1617,"column_start":29,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":122803,"byte_end":122816,"line_start":1918,"line_end":1918,"column_start":46,"column_end":59},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3888},"to":{"krate":2,"index":7155}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":123643,"byte_end":123649,"line_start":1953,"line_end":1953,"column_start":29,"column_end":35},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":124523,"byte_end":124529,"line_start":1980,"line_end":1980,"column_start":43,"column_end":49},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3857},"to":{"krate":2,"index":2491}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":124684,"byte_end":124690,"line_start":1986,"line_end":1986,"column_start":46,"column_end":52},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3857},"to":{"krate":2,"index":7155}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":125663,"byte_end":125669,"line_start":2021,"line_end":2021,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":1012},"to":{"krate":0,"index":1010}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":126424,"byte_end":126435,"line_start":2042,"line_end":2042,"column_start":44,"column_end":55},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3707},"to":{"krate":0,"index":1012}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":127025,"byte_end":127036,"line_start":2062,"line_end":2062,"column_start":53,"column_end":64},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3707},"to":{"krate":0,"index":1010}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":128938,"byte_end":128944,"line_start":2120,"line_end":2120,"column_start":49,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":1066},"to":{"krate":0,"index":1064}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":129979,"byte_end":129990,"line_start":2150,"line_end":2150,"column_start":44,"column_end":55},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3707},"to":{"krate":0,"index":1066}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":131249,"byte_end":131260,"line_start":2191,"line_end":2191,"column_start":51,"column_end":62},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3707},"to":{"krate":0,"index":1064}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":134572,"byte_end":134578,"line_start":2298,"line_end":2298,"column_start":44,"column_end":50},"kind":{"Impl":{"id":90}},"from":{"krate":5,"index":7293},"to":{"krate":0,"index":1066}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":136464,"byte_end":136470,"line_start":2357,"line_end":2357,"column_start":51,"column_end":57},"kind":{"Impl":{"id":91}},"from":{"krate":5,"index":7293},"to":{"krate":0,"index":1064}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":138726,"byte_end":138732,"line_start":2427,"line_end":2427,"column_start":46,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":1139},"to":{"krate":0,"index":1138}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":139326,"byte_end":139337,"line_start":2445,"line_end":2445,"column_start":40,"column_end":51},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3707},"to":{"krate":0,"index":1139}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":139574,"byte_end":139585,"line_start":2453,"line_end":2453,"column_start":63,"column_end":74},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3707},"to":{"krate":0,"index":1138}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":140192,"byte_end":140198,"line_start":2475,"line_end":2475,"column_start":21,"column_end":27},"kind":{"Impl":{"id":94}},"from":{"krate":5,"index":7293},"to":{"krate":0,"index":1139}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/map.rs","byte_start":140414,"byte_end":140420,"line_start":2483,"line_end":2483,"column_start":44,"column_end":50},"kind":{"Impl":{"id":95}},"from":{"krate":5,"index":7293},"to":{"krate":0,"index":1138}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":149332,"byte_end":149345,"line_start":43,"line_end":43,"column_start":25,"column_end":38},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":157456,"byte_end":157469,"line_start":285,"line_end":285,"column_start":6,"column_end":19},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":160737,"byte_end":160750,"line_start":391,"line_end":391,"column_start":6,"column_end":19},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":161234,"byte_end":161247,"line_start":408,"line_end":408,"column_start":41,"column_end":54},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2737}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":161376,"byte_end":161389,"line_start":415,"line_end":415,"column_start":40,"column_end":53},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":161556,"byte_end":161569,"line_start":421,"line_end":421,"column_start":57,"column_end":70},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":163625,"byte_end":163638,"line_start":507,"line_end":507,"column_start":18,"column_end":31},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":11378}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":163875,"byte_end":163880,"line_start":516,"line_end":516,"column_start":53,"column_end":58},"kind":{"Impl":{"id":103}},"from":{"krate":17,"index":513},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":164070,"byte_end":164083,"line_start":523,"line_end":523,"column_start":61,"column_end":74},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":164211,"byte_end":164221,"line_start":532,"line_end":532,"column_start":6,"column_end":16},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":164322,"byte_end":164332,"line_start":538,"line_end":538,"column_start":23,"column_end":33},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3904},"to":{"krate":2,"index":8902}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":164481,"byte_end":164491,"line_start":544,"line_end":544,"column_start":16,"column_end":26},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3904},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":164510,"byte_end":164523,"line_start":546,"line_end":546,"column_start":15,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":9101}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":164634,"byte_end":164647,"line_start":552,"line_end":552,"column_start":15,"column_end":28},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":9101}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":164906,"byte_end":164919,"line_start":563,"line_end":563,"column_start":39,"column_end":52},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2491}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":165308,"byte_end":165321,"line_start":574,"line_end":574,"column_start":32,"column_end":45},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2496}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":165369,"byte_end":165382,"line_start":576,"line_end":576,"column_start":40,"column_end":53},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2538}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":165569,"byte_end":165582,"line_start":583,"line_end":583,"column_start":33,"column_end":46},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2527}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":165743,"byte_end":165756,"line_start":590,"line_end":590,"column_start":44,"column_end":57},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2491}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":165920,"byte_end":165933,"line_start":597,"line_end":597,"column_start":45,"column_end":58},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2491}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":166087,"byte_end":166100,"line_start":604,"line_end":604,"column_start":45,"column_end":58},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2538}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":166290,"byte_end":166303,"line_start":611,"line_end":611,"column_start":46,"column_end":59},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2538}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":167257,"byte_end":167270,"line_start":646,"line_end":646,"column_start":47,"column_end":60},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2491}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":167417,"byte_end":167430,"line_start":653,"line_end":653,"column_start":48,"column_end":61},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2538}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":167635,"byte_end":167641,"line_start":660,"line_end":660,"column_start":58,"column_end":64},"kind":{"Impl":{"id":122}},"from":{"krate":5,"index":7293},"to":{"krate":2,"index":2491}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":167803,"byte_end":167809,"line_start":667,"line_end":667,"column_start":59,"column_end":65},"kind":{"Impl":{"id":123}},"from":{"krate":5,"index":7293},"to":{"krate":2,"index":2538}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":168447,"byte_end":168460,"line_start":688,"line_end":688,"column_start":61,"column_end":74},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2491}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/metadata/value.rs","byte_start":168661,"byte_end":168674,"line_start":698,"line_end":698,"column_start":62,"column_end":75},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2538}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":176316,"byte_end":176320,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/grpc.rs","byte_start":182163,"byte_end":182167,"line_start":229,"line_end":229,"column_start":36,"column_end":40},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":182933,"byte_end":182934,"line_start":21,"line_end":21,"column_start":38,"column_end":39},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1569},"to":{"krate":0,"index":1563}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":183829,"byte_end":183830,"line_start":51,"line_end":51,"column_start":51,"column_end":52},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1582},"to":{"krate":0,"index":1575}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":184686,"byte_end":184687,"line_start":80,"line_end":80,"column_start":48,"column_end":49},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1596},"to":{"krate":0,"index":1590}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/server/service.rs","byte_start":185597,"byte_end":185598,"line_start":110,"line_end":110,"column_start":45,"column_end":46},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1609},"to":{"krate":0,"index":1602}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":197577,"byte_end":197585,"line_start":43,"line_end":43,"column_start":6,"column_end":14},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":205847,"byte_end":205855,"line_start":304,"line_end":304,"column_start":20,"column_end":28},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":206469,"byte_end":206477,"line_start":326,"line_end":326,"column_start":25,"column_end":33},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":2753}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":206630,"byte_end":206638,"line_start":334,"line_end":334,"column_start":26,"column_end":34},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":2753}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":206811,"byte_end":206819,"line_start":342,"line_end":342,"column_start":32,"column_end":40},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":2753}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":206985,"byte_end":206993,"line_start":350,"line_end":350,"column_start":21,"column_end":29},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/endpoint.rs","byte_start":207129,"byte_end":207137,"line_start":356,"line_end":356,"column_start":18,"column_end":26},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":11378}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":207765,"byte_end":207780,"line_start":21,"line_end":21,"column_start":21,"column_end":36},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3941},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/tls.rs","byte_start":208077,"byte_end":208092,"line_start":32,"line_end":32,"column_start":6,"column_end":21},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":191863,"byte_end":191870,"line_start":79,"line_end":79,"column_start":6,"column_end":13},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":195222,"byte_end":195229,"line_start":180,"line_end":180,"column_start":42,"column_end":49},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3950},"to":{"krate":27,"index":13}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":195714,"byte_end":195728,"line_start":196,"line_end":196,"column_start":17,"column_end":31},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1866},"to":{"krate":2,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":196056,"byte_end":196063,"line_start":206,"line_end":206,"column_start":21,"column_end":28},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3950},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/channel/mod.rs","byte_start":196201,"byte_end":196215,"line_start":212,"line_end":212,"column_start":21,"column_end":35},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1866},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","byte_start":232955,"byte_end":232965,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"kind":{"Impl":{"id":146}},"from":{"krate":64,"index":10880},"to":{"krate":0,"index":1920}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","byte_start":233079,"byte_end":233088,"line_start":31,"line_end":31,"column_start":20,"column_end":29},"kind":{"Impl":{"id":147}},"from":{"krate":46,"index":5727},"to":{"krate":0,"index":1920}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/conn.rs","byte_start":233237,"byte_end":233246,"line_start":38,"line_end":38,"column_start":34,"column_end":43},"kind":{"Impl":{"id":148}},"from":{"krate":72,"index":391},"to":{"krate":0,"index":1920}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/incoming.rs","byte_start":237432,"byte_end":237443,"line_start":136,"line_end":136,"column_start":6,"column_end":17},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/incoming.rs","byte_start":237780,"byte_end":237791,"line_start":149,"line_end":149,"column_start":17,"column_end":28},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2011},"to":{"krate":23,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":238450,"byte_end":238465,"line_start":18,"line_end":18,"column_start":21,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4010},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/tls.rs","byte_start":238620,"byte_end":238635,"line_start":25,"line_end":25,"column_start":6,"column_end":21},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":213007,"byte_end":213020,"line_start":98,"line_end":98,"column_start":39,"column_end":52},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4044},"to":{"krate":27,"index":13}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214222,"byte_end":214228,"line_start":135,"line_end":135,"column_start":43,"column_end":49},"kind":{"Impl":{"id":154}},"from":{"krate":38,"index":5403},"to":{"krate":0,"index":2181}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214285,"byte_end":214291,"line_start":139,"line_end":139,"column_start":6,"column_end":12},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":4018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":214499,"byte_end":214505,"line_start":149,"line_end":149,"column_start":6,"column_end":12},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":223178,"byte_end":223184,"line_start":411,"line_end":411,"column_start":9,"column_end":15},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":223885,"byte_end":223891,"line_start":436,"line_end":436,"column_start":12,"column_end":18},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":4035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":228871,"byte_end":228877,"line_start":578,"line_end":578,"column_start":21,"column_end":27},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":4018},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":229130,"byte_end":229133,"line_start":590,"line_end":590,"column_start":36,"column_end":39},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2255},"to":{"krate":27,"index":13}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":229978,"byte_end":229981,"line_start":618,"line_end":618,"column_start":24,"column_end":27},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2255},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":230271,"byte_end":230278,"line_start":631,"line_end":631,"column_start":32,"column_end":39},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2271},"to":{"krate":27,"index":13}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/server/mod.rs","byte_start":231631,"byte_end":231644,"line_start":679,"line_end":679,"column_start":33,"column_end":46},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4052},"to":{"krate":27,"index":13}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/error.rs","byte_start":240548,"byte_end":240553,"line_start":27,"line_end":27,"column_start":6,"column_end":11},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/error.rs","byte_start":241431,"byte_end":241436,"line_start":60,"line_end":60,"column_start":21,"column_end":26},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2300},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/error.rs","byte_start":241742,"byte_end":241747,"line_start":74,"line_end":74,"column_start":23,"column_end":28},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2300},"to":{"krate":2,"index":8902}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/error.rs","byte_start":242022,"byte_end":242027,"line_start":84,"line_end":84,"column_start":19,"column_end":24},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2300},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/add_origin.rs","byte_start":242996,"byte_end":243005,"line_start":11,"line_end":11,"column_start":9,"column_end":18},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/add_origin.rs","byte_start":243153,"byte_end":243162,"line_start":17,"line_end":17,"column_start":48,"column_end":57},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4069},"to":{"krate":27,"index":13}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/connection.rs","byte_start":245025,"byte_end":245035,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/connection.rs","byte_start":247413,"byte_end":247423,"line_start":92,"line_end":92,"column_start":27,"column_end":37},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2436},"to":{"krate":27,"index":13}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/connection.rs","byte_start":247815,"byte_end":247825,"line_start":106,"line_end":106,"column_start":15,"column_end":25},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2436},"to":{"krate":38,"index":1235}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/connection.rs","byte_start":247930,"byte_end":247940,"line_start":114,"line_end":114,"column_start":21,"column_end":31},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2436},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/connector.rs","byte_start":248725,"byte_end":248734,"line_start":29,"line_end":29,"column_start":9,"column_end":18},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/connector.rs","byte_start":249004,"byte_end":249013,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2489},"to":{"krate":27,"index":13}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/discover.rs","byte_start":250443,"byte_end":250463,"line_start":21,"line_end":21,"column_start":28,"column_end":48},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/discover.rs","byte_start":250613,"byte_end":250633,"line_start":27,"line_end":27,"column_start":39,"column_end":59},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2541},"to":{"krate":23,"index":96}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/discover.rs","byte_start":251897,"byte_end":251917,"line_start":55,"line_end":55,"column_start":38,"column_end":58},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2541},"to":{"krate":2,"index":2881}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":252231,"byte_end":252240,"line_start":10,"line_end":10,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":46,"index":221},"to":{"krate":0,"index":2594}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":252243,"byte_end":252253,"line_start":10,"line_end":10,"column_start":17,"column_end":27},"kind":"SuperTrait","from":{"krate":46,"index":300},"to":{"krate":0,"index":2594}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":252256,"byte_end":252260,"line_start":10,"line_end":10,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2840},"to":{"krate":0,"index":2594}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":252291,"byte_end":252292,"line_start":14,"line_end":14,"column_start":16,"column_end":17},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2596},"to":{"krate":0,"index":2594}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":252397,"byte_end":252404,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":252526,"byte_end":252533,"line_start":24,"line_end":24,"column_start":21,"column_end":28},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2597},"to":{"krate":64,"index":7026}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":252638,"byte_end":252645,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2597},"to":{"krate":0,"index":1920}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":252669,"byte_end":252676,"line_start":32,"line_end":32,"column_start":20,"column_end":27},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2597},"to":{"krate":46,"index":221}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":252902,"byte_end":252909,"line_start":42,"line_end":42,"column_start":21,"column_end":28},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2597},"to":{"krate":46,"index":300}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":253447,"byte_end":253449,"line_start":60,"line_end":60,"column_start":45,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":2594},"to":{"krate":0,"index":2612}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":253452,"byte_end":253461,"line_start":60,"line_end":60,"column_start":50,"column_end":59},"kind":"SuperTrait","from":{"krate":0,"index":1920},"to":{"krate":0,"index":2612}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":253490,"byte_end":253491,"line_start":62,"line_end":62,"column_start":25,"column_end":26},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2614},"to":{"krate":0,"index":2612}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":253581,"byte_end":253589,"line_start":66,"line_end":66,"column_start":6,"column_end":14},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":253720,"byte_end":253728,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2615},"to":{"krate":0,"index":1920}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":253935,"byte_end":253943,"line_start":82,"line_end":82,"column_start":20,"column_end":28},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2615},"to":{"krate":46,"index":221}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/io.rs","byte_start":254169,"byte_end":254177,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2615},"to":{"krate":46,"index":300}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/layer.rs","byte_start":255173,"byte_end":255187,"line_start":15,"line_end":15,"column_start":34,"column_end":48},"kind":{"Impl":{"id":190}},"from":{"krate":38,"index":5963},"to":{"krate":0,"index":2644}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/layer.rs","byte_start":256063,"byte_end":256070,"line_start":51,"line_end":51,"column_start":30,"column_end":37},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4076},"to":{"krate":39,"index":71}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/layer.rs","byte_start":256320,"byte_end":256333,"line_start":67,"line_end":67,"column_start":25,"column_end":38},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4088},"to":{"krate":39,"index":71}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/reconnect.rs","byte_start":257174,"byte_end":257183,"line_start":33,"line_end":33,"column_start":17,"column_end":26},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/reconnect.rs","byte_start":257581,"byte_end":257590,"line_start":50,"line_end":50,"column_start":50,"column_end":59},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2714},"to":{"krate":27,"index":13}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/reconnect.rs","byte_start":261397,"byte_end":261406,"line_start":158,"line_end":158,"column_start":32,"column_end":41},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2714},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/reconnect.rs","byte_start":262179,"byte_end":262193,"line_start":190,"line_end":190,"column_start":9,"column_end":23},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":4463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/reconnect.rs","byte_start":262494,"byte_end":262508,"line_start":204,"line_end":204,"column_start":26,"column_end":40},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4463},"to":{"krate":2,"index":12109}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":263351,"byte_end":263357,"line_start":17,"line_end":17,"column_start":21,"column_end":27},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":263612,"byte_end":263618,"line_start":28,"line_end":28,"column_start":21,"column_end":27},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":263951,"byte_end":263957,"line_start":39,"line_end":39,"column_start":42,"column_end":48},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4510},"to":{"krate":27,"index":13}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":264571,"byte_end":264577,"line_start":61,"line_end":61,"column_start":45,"column_end":51},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4510},"to":{"krate":2,"index":2461}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":264859,"byte_end":264861,"line_start":76,"line_end":76,"column_start":21,"column_end":23},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":265139,"byte_end":265141,"line_start":86,"line_end":86,"column_start":42,"column_end":44},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2807},"to":{"krate":27,"index":13}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":266038,"byte_end":266040,"line_start":117,"line_end":117,"column_start":45,"column_end":47},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2807},"to":{"krate":2,"index":2461}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/router.rs","byte_start":266266,"byte_end":266268,"line_start":127,"line_end":127,"column_start":36,"column_end":38},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2807},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/tls.rs","byte_start":267377,"byte_end":267389,"line_start":44,"line_end":44,"column_start":6,"column_end":18},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/tls.rs","byte_start":269467,"byte_end":269479,"line_start":114,"line_end":114,"column_start":21,"column_end":33},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4537},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/tls.rs","byte_start":269689,"byte_end":269700,"line_start":125,"line_end":125,"column_start":6,"column_end":17},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/tls.rs","byte_start":271361,"byte_end":271372,"line_start":174,"line_end":174,"column_start":21,"column_end":32},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4542},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/tls.rs","byte_start":271516,"byte_end":271524,"line_start":180,"line_end":180,"column_start":23,"column_end":31},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4528},"to":{"krate":2,"index":8902}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/tls.rs","byte_start":272005,"byte_end":272013,"line_start":193,"line_end":193,"column_start":28,"column_end":36},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4528},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/user_agent.rs","byte_start":273995,"byte_end":274004,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/service/user_agent.rs","byte_start":274591,"byte_end":274600,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4546},"to":{"krate":27,"index":13}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":275881,"byte_end":275892,"line_start":14,"line_end":14,"column_start":6,"column_end":17},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":276566,"byte_end":276577,"line_start":39,"line_end":39,"column_start":22,"column_end":33},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4553},"to":{"krate":2,"index":2737}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/transport/tls.rs","byte_start":276652,"byte_end":276660,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":277925,"byte_end":277936,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":278525,"byte_end":278536,"line_start":44,"line_end":44,"column_start":21,"column_end":32},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4566},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/interceptor.rs","byte_start":278709,"byte_end":278720,"line_start":53,"line_end":53,"column_start":21,"column_end":32},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4566},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":282880,"byte_end":282886,"line_start":54,"line_end":54,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3154},"to":{"krate":0,"index":3108}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284146,"byte_end":284152,"line_start":92,"line_end":92,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":3154},"to":{"krate":0,"index":3111}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":284442,"byte_end":284449,"line_start":103,"line_end":103,"column_start":9,"column_end":16},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":287986,"byte_end":287987,"line_start":226,"line_end":226,"column_start":28,"column_end":29},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3136},"to":{"krate":0,"index":3108}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":288098,"byte_end":288105,"line_start":232,"line_end":232,"column_start":28,"column_end":35},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":4570},"to":{"krate":0,"index":3108}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":288208,"byte_end":288209,"line_start":238,"line_end":238,"column_start":34,"column_end":35},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3142},"to":{"krate":0,"index":3111}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":288431,"byte_end":288438,"line_start":250,"line_end":250,"column_start":34,"column_end":41},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":4570},"to":{"krate":0,"index":3111}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/request.rs","byte_start":288634,"byte_end":288635,"line_start":262,"line_end":262,"column_start":28,"column_end":29},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3152},"to":{"krate":0,"index":3154}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/response.rs","byte_start":289346,"byte_end":289354,"line_start":10,"line_end":10,"column_start":9,"column_end":17},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":4583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":295103,"byte_end":295107,"line_start":113,"line_end":113,"column_start":6,"column_end":10},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":297203,"byte_end":297207,"line_start":156,"line_end":156,"column_start":28,"column_end":32},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4597},"to":{"krate":2,"index":8902}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":297379,"byte_end":297385,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":311698,"byte_end":311704,"line_start":529,"line_end":529,"column_start":21,"column_end":27},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4590},"to":{"krate":2,"index":8895}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":312571,"byte_end":312577,"line_start":561,"line_end":561,"column_start":26,"column_end":32},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4590},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":312719,"byte_end":312724,"line_start":568,"line_end":568,"column_start":27,"column_end":32},"kind":{"Impl":{"id":242}},"from":{"krate":67,"index":4783},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":312833,"byte_end":312839,"line_start":574,"line_end":574,"column_start":31,"column_end":37},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4590},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":313923,"byte_end":313929,"line_start":601,"line_end":601,"column_start":23,"column_end":29},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4590},"to":{"krate":2,"index":8902}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":314244,"byte_end":314250,"line_start":614,"line_end":614,"column_start":16,"column_end":22},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4590},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":315625,"byte_end":315629,"line_start":656,"line_end":656,"column_start":6,"column_end":10},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/status.rs","byte_start":318332,"byte_end":318336,"line_start":723,"line_end":723,"column_start":20,"column_end":24},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4597},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":323992,"byte_end":323997,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4766},"to":{"krate":2,"index":8902}},{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.4.1/src/codegen.rs","byte_start":324132,"byte_end":324137,"line_start":33,"line_end":33,"column_start":28,"column_end":33},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4766},"to":{"krate":1,"index":2326}}]}
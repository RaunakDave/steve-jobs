{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12","program":"/Users/raunak/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","psm","/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=14606252df2867a7","-C","extra-filename=-14606252df2867a7","--out-dir","/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps","-L","dependency=/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps","--cap-lints","allow","-L","native=/Users/raunak/Downloads/steve-jobs/target/rls/debug/build/psm-6ca5ae9f48e47229/out","--cfg","asm","--cfg","switchable_stack","-l","static=psm_s","--error-format=json","--sysroot","/Users/raunak/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/raunak/Downloads/steve-jobs/target/rls/debug/deps/libpsm-14606252df2867a7.rmeta"},"prelude":{"crate_id":{"name":"psm","disambiguator":[4150611198668828996,17429148809726670494]},"crate_root":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src","external_crates":[{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[4672134039341031826,9334730820037710618]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7812355786254722365,11069232910465240897]}},{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[3504492067546965715,14807348065712645406]}}],"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":0,"byte_end":14909,"line_start":1,"line_end":406,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":0,"byte_end":14909,"line_start":1,"line_end":406,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":23},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":14},{"krate":0,"index":33},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":16},{"krate":0,"index":20}],"decl_id":null,"docs":" # **P**ortable **S**tack **M**anipulation\n This crate provides portable functions to control the stack pointer and inspect the properties\n of the stack. This crate does not attempt to provide safe abstractions to any operations, the\n only goals are correctness, portability and efficiency (in that exact order).  As a consequence\n most functions you will find in this crate are unsafe.","sig":null,"attributes":[{"value":"/ # **P**ortable **S**tack **M**anipulation","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":0,"byte_end":45,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"/ This crate provides portable functions to control the stack pointer and inspect the properties","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":46,"byte_end":144,"line_start":2,"line_end":2,"column_start":1,"column_end":99}},{"value":"/ of the stack. This crate does not attempt to provide safe abstractions to any operations, the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":145,"byte_end":242,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ only goals are correctness, portability and efficiency (in that exact order).  As a consequence","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":243,"byte_end":342,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ most functions you will find in this crate are unsafe.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":343,"byte_end":401,"line_start":5,"line_end":5,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":402,"byte_end":405,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Note, that the stack allocation is left up to the user. Unless you’re writing a safe","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":406,"byte_end":496,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"/ abstraction over stack manipulation, this is unlikely to be the crate you want. Instead","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":497,"byte_end":588,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ consider one of the safe abstractions over this crate such as `stacker`. Another good place to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":589,"byte_end":687,"line_start":9,"line_end":9,"column_start":1,"column_end":99}},{"value":"/ look at is the crates.io’s reverse dependency list.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":688,"byte_end":745,"line_start":10,"line_end":10,"column_start":1,"column_end":56}},{"value":"allow(unused_macros)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":747,"byte_end":771,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"no_std","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":772,"byte_end":782,"line_start":13,"line_end":13,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":8},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":6342,"byte_end":6350,"line_start":181,"line_end":181,"column_start":15,"column_end":23},"name":"on_stack","qualname":"::on_stack","value":"pub unsafe fn on_stack<R, F: FnOnce() -> R>(*mut u8, usize, F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Run the closure on the provided stack.","sig":null,"attributes":[{"value":"/ Run the closure on the provided stack.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":3546,"byte_end":3588,"line_start":121,"line_end":121,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":3589,"byte_end":3592,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ Once the closure completes its execution, the original stack pointer is restored and execution","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":3593,"byte_end":3691,"line_start":123,"line_end":123,"column_start":1,"column_end":99}},{"value":"/ returns to the caller.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":3692,"byte_end":3718,"line_start":124,"line_end":124,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":3719,"byte_end":3722,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ `base` address must be the low address of the stack memory region, regardless of the stack","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":3723,"byte_end":3817,"line_start":126,"line_end":126,"column_start":1,"column_end":95}},{"value":"/ growth direction. It is not necessary for the whole region `[base; base + size]` to be usable","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":3818,"byte_end":3915,"line_start":127,"line_end":127,"column_start":1,"column_end":98}},{"value":"/ at the time this function called, however it is required that at least the following hold:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":3916,"byte_end":4010,"line_start":128,"line_end":128,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4011,"byte_end":4014,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ * Both `base` and `base + size` are aligned up to the target-specific requirements;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4015,"byte_end":4102,"line_start":130,"line_end":130,"column_start":1,"column_end":88}},{"value":"/ * Depending on `StackDirection` value for the platform, the end of the stack memory region,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4103,"byte_end":4198,"line_start":131,"line_end":131,"column_start":1,"column_end":96}},{"value":"/   which would end up containing the first frame(s), must have sufficient number of pages","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4199,"byte_end":4291,"line_start":132,"line_end":132,"column_start":1,"column_end":93}},{"value":"/   allocated to execute code until more pages are commited. The other end should contain a guard","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4292,"byte_end":4391,"line_start":133,"line_end":133,"column_start":1,"column_end":100}},{"value":"/   page (not writable, readable or executable) to ensure Rust’s soundness guarantees.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4392,"byte_end":4482,"line_start":134,"line_end":134,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4483,"byte_end":4486,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ Note, that some or all of these considerations are irrelevant to some applications. For","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4487,"byte_end":4578,"line_start":136,"line_end":136,"column_start":1,"column_end":92}},{"value":"/ example, Rust’s soundness story relies on all stacks having a guard-page, however if the user","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4579,"byte_end":4678,"line_start":137,"line_end":137,"column_start":1,"column_end":98}},{"value":"/ is able to guarantee that the memory region used for stack cannot be exceeded, a guard page may","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4679,"byte_end":4778,"line_start":138,"line_end":138,"column_start":1,"column_end":100}},{"value":"/ end up being an expensive unnecessity.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4779,"byte_end":4821,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4822,"byte_end":4825,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ The previous stack may not be deallocated. If an ability to deallocate the old stack is desired","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4826,"byte_end":4925,"line_start":141,"line_end":141,"column_start":1,"column_end":100}},{"value":"/ consider `replace_stack` instead.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4926,"byte_end":4963,"line_start":142,"line_end":142,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4964,"byte_end":4967,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ # Guidelines","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4968,"byte_end":4984,"line_start":144,"line_end":144,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4985,"byte_end":4988,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Memory regions that are aligned to a single page (usually 4kB) are an extremely portable choice","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":4989,"byte_end":5088,"line_start":146,"line_end":146,"column_start":1,"column_end":100}},{"value":"/ for stacks.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5089,"byte_end":5104,"line_start":147,"line_end":147,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5105,"byte_end":5108,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Allocate at least 4kB of stack. Some architectures (such as SPARC) consume stack memory","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5109,"byte_end":5200,"line_start":149,"line_end":149,"column_start":1,"column_end":92}},{"value":"/ significantly faster compared to the more usual architectures such as x86 or ARM. Allocating","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5201,"byte_end":5297,"line_start":150,"line_end":150,"column_start":1,"column_end":97}},{"value":"/ less than 4kB of memory may make it impossible to commit more pages without overflowing the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5298,"byte_end":5393,"line_start":151,"line_end":151,"column_start":1,"column_end":96}},{"value":"/ stack later on.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5394,"byte_end":5413,"line_start":152,"line_end":152,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5414,"byte_end":5417,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ # Unsafety","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5418,"byte_end":5432,"line_start":154,"line_end":154,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5433,"byte_end":5436,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ The stack `base` address must be aligned as appropriate for the target.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5437,"byte_end":5512,"line_start":156,"line_end":156,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5513,"byte_end":5516,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ The stack `size` must be a multiple of stack alignment required by target.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5517,"byte_end":5595,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5596,"byte_end":5599,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ The `size` must not overflow `isize`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5600,"byte_end":5641,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5642,"byte_end":5645,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ `callback` must not unwind or return control flow by any other means than directly returning.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5646,"byte_end":5743,"line_start":162,"line_end":162,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5744,"byte_end":5747,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5748,"byte_end":5762,"line_start":164,"line_end":164,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5763,"byte_end":5766,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5767,"byte_end":5774,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/ use std::alloc;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5775,"byte_end":5794,"line_start":167,"line_end":167,"column_start":1,"column_end":20}},{"value":"/ const STACK_ALIGN: usize = 4096;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5795,"byte_end":5831,"line_start":168,"line_end":168,"column_start":1,"column_end":37}},{"value":"/ const STACK_SIZE: usize = 4096;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5832,"byte_end":5867,"line_start":169,"line_end":169,"column_start":1,"column_end":36}},{"value":"/ unsafe {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5868,"byte_end":5880,"line_start":170,"line_end":170,"column_start":1,"column_end":13}},{"value":"/     let layout = alloc::Layout::from_size_align(STACK_SIZE, STACK_ALIGN).unwrap();","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5881,"byte_end":5967,"line_start":171,"line_end":171,"column_start":1,"column_end":87}},{"value":"/     let new_stack = alloc::alloc(layout);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":5968,"byte_end":6013,"line_start":172,"line_end":172,"column_start":1,"column_end":46}},{"value":"/     assert!(!new_stack.is_null(), \"allocations must succeed!\");","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":6014,"byte_end":6081,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/     let (stack, result) = psm::on_stack(new_stack, STACK_SIZE, || {","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":6082,"byte_end":6153,"line_start":174,"line_end":174,"column_start":1,"column_end":72}},{"value":"/         (psm::stack_pointer(), 4 + 4)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":6154,"byte_end":6195,"line_start":175,"line_end":175,"column_start":1,"column_end":42}},{"value":"/     });","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":6196,"byte_end":6207,"line_start":176,"line_end":176,"column_start":1,"column_end":12}},{"value":"/     println!(\"4 + 4 = {} has been calculated on stack {:p}\", result, stack);","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":6208,"byte_end":6288,"line_start":177,"line_end":177,"column_start":1,"column_end":81}},{"value":"/ }","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":6289,"byte_end":6294,"line_start":178,"line_end":178,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":6295,"byte_end":6302,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"cfg(switchable_stack)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":6303,"byte_end":6327,"line_start":180,"line_end":180,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9832,"byte_end":9845,"line_start":253,"line_end":253,"column_start":15,"column_end":28},"name":"replace_stack","qualname":"::replace_stack","value":"pub unsafe fn replace_stack<F: FnOnce() -> ()>(*mut u8, usize, F) -> !","parent":null,"children":[],"decl_id":null,"docs":" Run the provided non-terminating computation on an entirely new stack.","sig":null,"attributes":[{"value":"/ Run the provided non-terminating computation on an entirely new stack.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":7475,"byte_end":7549,"line_start":209,"line_end":209,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":7550,"byte_end":7553,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ `base` address must be the low address of the stack memory region, regardless of the stack","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":7554,"byte_end":7648,"line_start":211,"line_end":211,"column_start":1,"column_end":95}},{"value":"/ growth direction. It is not necessary for the whole region `[base; base + size]` to be usable","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":7649,"byte_end":7746,"line_start":212,"line_end":212,"column_start":1,"column_end":98}},{"value":"/ at the time this function called, however it is required that at least the following hold:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":7747,"byte_end":7841,"line_start":213,"line_end":213,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":7842,"byte_end":7845,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ * Both `base` and `base + size` are aligned up to the target-specific requirements;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":7846,"byte_end":7933,"line_start":215,"line_end":215,"column_start":1,"column_end":88}},{"value":"/ * Depending on `StackDirection` value for the platform, the end of the stack memory region,","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":7934,"byte_end":8029,"line_start":216,"line_end":216,"column_start":1,"column_end":96}},{"value":"/   which would end up containing the first frame(s), must have sufficient number of pages","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8030,"byte_end":8122,"line_start":217,"line_end":217,"column_start":1,"column_end":93}},{"value":"/   allocated to execute code until more pages are commited. The other end should contain a guard","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8123,"byte_end":8222,"line_start":218,"line_end":218,"column_start":1,"column_end":100}},{"value":"/   page (not writable, readable or executable) to ensure Rust’s soundness guarantees.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8223,"byte_end":8313,"line_start":219,"line_end":219,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8314,"byte_end":8317,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ Note, that some or all of these considerations are irrelevant to some applications. For","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8318,"byte_end":8409,"line_start":221,"line_end":221,"column_start":1,"column_end":92}},{"value":"/ example, Rust’s soundness story relies on all stacks having a guard-page, however if the user","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8410,"byte_end":8509,"line_start":222,"line_end":222,"column_start":1,"column_end":98}},{"value":"/ is able to guarantee that the memory region used for stack cannot be exceeded, a guard page may","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8510,"byte_end":8609,"line_start":223,"line_end":223,"column_start":1,"column_end":100}},{"value":"/ end up being an expensive unnecessity.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8610,"byte_end":8652,"line_start":224,"line_end":224,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8653,"byte_end":8656,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ The previous stack is not deallocated and may not be deallocated unless the data on the old","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8657,"byte_end":8752,"line_start":226,"line_end":226,"column_start":1,"column_end":96}},{"value":"/ stack is not referenced in any way (by e.g. the `callback` closure).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8753,"byte_end":8825,"line_start":227,"line_end":227,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8826,"byte_end":8829,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ On platforms where multiple stack pointers are available, the “current” stack pointer is","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8830,"byte_end":8926,"line_start":229,"line_end":229,"column_start":1,"column_end":93}},{"value":"/ replaced.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8927,"byte_end":8940,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8941,"byte_end":8944,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ # Guidelines","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8945,"byte_end":8961,"line_start":232,"line_end":232,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8962,"byte_end":8965,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ Memory regions that are aligned to a single page (usually 4kB) are an extremely portable choice","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":8966,"byte_end":9065,"line_start":234,"line_end":234,"column_start":1,"column_end":100}},{"value":"/ for stacks.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9066,"byte_end":9081,"line_start":235,"line_end":235,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9082,"byte_end":9085,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ Allocate at least 4kB of stack. Some architectures (such as SPARC) consume stack memory","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9086,"byte_end":9177,"line_start":237,"line_end":237,"column_start":1,"column_end":92}},{"value":"/ significantly faster compared to the more usual architectures such as x86 or ARM. Allocating","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9178,"byte_end":9274,"line_start":238,"line_end":238,"column_start":1,"column_end":97}},{"value":"/ less than 4kB of memory may make it impossible to commit more pages without overflowing the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9275,"byte_end":9370,"line_start":239,"line_end":239,"column_start":1,"column_end":96}},{"value":"/ stack later on.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9371,"byte_end":9390,"line_start":240,"line_end":240,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9391,"byte_end":9394,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ # Unsafety","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9395,"byte_end":9409,"line_start":242,"line_end":242,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9410,"byte_end":9413,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ The stack `base` address must be aligned as appropriate for the target.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9414,"byte_end":9489,"line_start":244,"line_end":244,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9490,"byte_end":9493,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ The stack `size` must be a multiple of stack alignment required by target.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9494,"byte_end":9572,"line_start":246,"line_end":246,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9573,"byte_end":9576,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The `size` must not overflow `isize`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9577,"byte_end":9618,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9619,"byte_end":9622,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ `callback` must not return (not enforced by typesystem currently because `!` is unstable),","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9623,"byte_end":9717,"line_start":250,"line_end":250,"column_start":1,"column_end":95}},{"value":"/ unwind or otherwise return control flow to any of the previous frames.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9718,"byte_end":9792,"line_start":251,"line_end":251,"column_start":1,"column_end":75}},{"value":"cfg(switchable_stack)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":9793,"byte_end":9817,"line_start":252,"line_end":252,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":34},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":10766,"byte_end":10775,"line_start":278,"line_end":278,"column_start":5,"column_end":14},"name":"Ascending","qualname":"::StackDirection::Ascending","value":"StackDirection::Ascending","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":37},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":10785,"byte_end":10795,"line_start":279,"line_end":279,"column_start":5,"column_end":15},"name":"Descending","qualname":"::StackDirection::Descending","value":"StackDirection::Descending","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":33},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":10745,"byte_end":10759,"line_start":277,"line_end":277,"column_start":10,"column_end":24},"name":"StackDirection","qualname":"::StackDirection","value":"pub enum StackDirection { Ascending = , Descending = , }","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":37}],"decl_id":null,"docs":" The direction into which stack grows as stack frames are made.","sig":null,"attributes":[{"value":"/ The direction into which stack grows as stack frames are made.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":10509,"byte_end":10575,"line_start":272,"line_end":272,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":10576,"byte_end":10579,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ This is a target-specific property that can be obtained at runtime by calling","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":10580,"byte_end":10661,"line_start":274,"line_end":274,"column_start":1,"column_end":82}},{"value":"/ `StackDirection::new()`.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":10662,"byte_end":10690,"line_start":275,"line_end":275,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":10896,"byte_end":10899,"line_start":285,"line_end":285,"column_start":12,"column_end":15},"name":"new","qualname":"<StackDirection>::new","value":"pub fn new() -> StackDirection","parent":null,"children":[],"decl_id":null,"docs":" Obtain the stack growth direction.\n","sig":null,"attributes":[{"value":"/ Obtain the stack growth direction.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":10830,"byte_end":10868,"line_start":283,"line_end":283,"column_start":5,"column_end":43}},{"value":"cfg(asm)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":10873,"byte_end":10884,"line_start":284,"line_end":284,"column_start":5,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":12533,"byte_end":12546,"line_start":318,"line_end":318,"column_start":8,"column_end":21},"name":"stack_pointer","qualname":"::stack_pointer","value":"pub fn stack_pointer() -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Returns current stack pointer.","sig":null,"attributes":[{"value":"/ Returns current stack pointer.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":11295,"byte_end":11329,"line_start":298,"line_end":298,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":11330,"byte_end":11333,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ Note, that the stack pointer returned is from the perspective of the caller. From the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":11334,"byte_end":11423,"line_start":300,"line_end":300,"column_start":1,"column_end":90}},{"value":"/ perspective of `stack_pointer` function the pointer returned is the frame pointer.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":11424,"byte_end":11510,"line_start":301,"line_end":301,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":11511,"byte_end":11514,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ While it is a goal to minimize the amount of stack used by this function, implementations for","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":11515,"byte_end":11612,"line_start":303,"line_end":303,"column_start":1,"column_end":98}},{"value":"/ some targets may be unable to avoid allocating a stack frame. This makes this function","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":11613,"byte_end":11703,"line_start":304,"line_end":304,"column_start":1,"column_end":91}},{"value":"/ suitable for stack exhaustion detection only in conjunction with sufficient padding.","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":11704,"byte_end":11792,"line_start":305,"line_end":305,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":11793,"byte_end":11796,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ Using `stack_pointer` to check for stack exhaustion is tricky to get right. It is impossible to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":11797,"byte_end":11896,"line_start":307,"line_end":307,"column_start":1,"column_end":100}},{"value":"/ know the callee’s frame size, therefore such value must be derived some other way. A common","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":11897,"byte_end":11994,"line_start":308,"line_end":308,"column_start":1,"column_end":96}},{"value":"/ approach is to use stack padding (reserve enough stack space for any function to be called) and","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":11995,"byte_end":12094,"line_start":309,"line_end":309,"column_start":1,"column_end":100}},{"value":"/ check against the padded threshold. If padding is chosen incorrectly, a situation similar to","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":12095,"byte_end":12191,"line_start":310,"line_end":310,"column_start":1,"column_end":97}},{"value":"/ one described below may occur:","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":12192,"byte_end":12226,"line_start":311,"line_end":311,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":12227,"byte_end":12230,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ 1. For stack exhaustion check, remaining stack is checked against `stack_pointer` with the","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":12231,"byte_end":12325,"line_start":313,"line_end":313,"column_start":1,"column_end":95}},{"value":"/    padding applied;","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":12326,"byte_end":12349,"line_start":314,"line_end":314,"column_start":1,"column_end":24}},{"value":"/ 2. Callee allocates more stack than was accounted for with padding, and accesses pages outside","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":12350,"byte_end":12448,"line_start":315,"line_end":315,"column_start":1,"column_end":99}},{"value":"/    the stack, invalidating the execution (by e.g. crashing).","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":12449,"byte_end":12513,"line_start":316,"line_end":316,"column_start":1,"column_end":65}},{"value":"cfg(asm)","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":12514,"byte_end":12525,"line_start":317,"line_end":317,"column_start":1,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":10809,"byte_end":10823,"line_start":282,"line_end":282,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/raunak/.cargo/registry/src/github.com-1ecc6299db9ec823/psm-0.1.12/src/lib.rs","byte_start":10809,"byte_end":10823,"line_start":282,"line_end":282,"column_start":6,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":33},"to":{"krate":4294967295,"index":4294967295}}]}